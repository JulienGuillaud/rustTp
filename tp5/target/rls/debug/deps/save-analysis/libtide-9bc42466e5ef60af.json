{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0","program":"C:\\Users\\jgu\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","tide","--edition=2018","C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"async-h1\"","--cfg","feature=\"async-session\"","--cfg","feature=\"cookies\"","--cfg","feature=\"default\"","--cfg","feature=\"femme\"","--cfg","feature=\"h1-server\"","--cfg","feature=\"logger\"","--cfg","feature=\"sessions\"","-C","metadata=9bc42466e5ef60af","-C","extra-filename=-9bc42466e5ef60af","--out-dir","c:\\Users\\jgu\\Desktop\\Cours\\Rust\\tp5\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\jgu\\Desktop\\Cours\\Rust\\tp5\\target\\rls\\debug\\deps","--extern","async_h1=c:\\Users\\jgu\\Desktop\\Cours\\Rust\\tp5\\target\\rls\\debug\\deps\\libasync_h1-89b18585c00d8b0f.rmeta","--extern","async_session=c:\\Users\\jgu\\Desktop\\Cours\\Rust\\tp5\\target\\rls\\debug\\deps\\libasync_session-6ac9a055da603b3d.rmeta","--extern","async_sse=c:\\Users\\jgu\\Desktop\\Cours\\Rust\\tp5\\target\\rls\\debug\\deps\\libasync_sse-9834a2f28d7a4327.rmeta","--extern","async_std=c:\\Users\\jgu\\Desktop\\Cours\\Rust\\tp5\\target\\rls\\debug\\deps\\libasync_std-f922d61986b95c99.rmeta","--extern","async_trait=c:\\Users\\jgu\\Desktop\\Cours\\Rust\\tp5\\target\\rls\\debug\\deps\\async_trait-83c207b57241d5d4.dll","--extern","femme=c:\\Users\\jgu\\Desktop\\Cours\\Rust\\tp5\\target\\rls\\debug\\deps\\libfemme-bcc2dfd5e7493663.rmeta","--extern","futures_util=c:\\Users\\jgu\\Desktop\\Cours\\Rust\\tp5\\target\\rls\\debug\\deps\\libfutures_util-6b423563e935c169.rmeta","--extern","http_client=c:\\Users\\jgu\\Desktop\\Cours\\Rust\\tp5\\target\\rls\\debug\\deps\\libhttp_client-0f13abc1ac941d7e.rmeta","--extern","http_types=c:\\Users\\jgu\\Desktop\\Cours\\Rust\\tp5\\target\\rls\\debug\\deps\\libhttp_types-a66bb36b7b068548.rmeta","--extern","kv_log_macro=c:\\Users\\jgu\\Desktop\\Cours\\Rust\\tp5\\target\\rls\\debug\\deps\\libkv_log_macro-ed194a071723c642.rmeta","--extern","log=c:\\Users\\jgu\\Desktop\\Cours\\Rust\\tp5\\target\\rls\\debug\\deps\\liblog-36183e922e5b9bd0.rmeta","--extern","pin_project_lite=c:\\Users\\jgu\\Desktop\\Cours\\Rust\\tp5\\target\\rls\\debug\\deps\\libpin_project_lite-35c3889ff8796024.rmeta","--extern","route_recognizer=c:\\Users\\jgu\\Desktop\\Cours\\Rust\\tp5\\target\\rls\\debug\\deps\\libroute_recognizer-142b80f49aa8bbea.rmeta","--extern","serde=c:\\Users\\jgu\\Desktop\\Cours\\Rust\\tp5\\target\\rls\\debug\\deps\\libserde-759231396b09df85.rmeta","--extern","serde_json=c:\\Users\\jgu\\Desktop\\Cours\\Rust\\tp5\\target\\rls\\debug\\deps\\libserde_json-bf3dc1fd2575c06f.rmeta","--cap-lints","allow","-L","native=c:\\Users\\jgu\\Desktop\\Cours\\Rust\\tp5\\target\\rls\\debug\\build\\wepoll-ffi-bcdbd408111d68a8\\out","-L","native=c:\\Users\\jgu\\Desktop\\Cours\\Rust\\tp5\\target\\rls\\debug\\build\\blake3-8d42008393cdf889\\out","-L","native=c:\\Users\\jgu\\Desktop\\Cours\\Rust\\tp5\\target\\rls\\debug\\build\\blake3-8d42008393cdf889\\out","--error-format=json","--sysroot","C:\\Users\\jgu\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\jgu\\Desktop\\Cours\\Rust\\tp5\\target\\rls\\debug\\deps\\libtide-9bc42466e5ef60af.rmeta"},"prelude":{"crate_id":{"name":"tide","disambiguator":[16036816667506476881,0]},"crate_root":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src","external_crates":[{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[7379719041391505039,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\cookies\\middleware.rs","num":2,"id":{"name":"core","disambiguator":[5226548339696486402,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15782588708828798436,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11258588358156983047,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6811839233127289238,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[6798478037195512723,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12572258325454906649,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[598470195457823820,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7285820039251336650,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15004074270013699283,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[6568562326383462027,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[7532148157145861684,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[15660406440960571571,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\cookies\\middleware.rs","num":14,"id":{"name":"async_trait","disambiguator":[6699862878605663557,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":15,"id":{"name":"async_std","disambiguator":[1564212093922990284,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":16,"id":{"name":"async_attributes","disambiguator":[13774076080922616388,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\mod.rs","num":17,"id":{"name":"kv_log_macro","disambiguator":[18289201956417046088,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\fs\\serve_dir.rs","num":18,"id":{"name":"log","disambiguator":[10399251867121929391,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":19,"id":{"name":"cfg_if","disambiguator":[10169579803109374085,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","num":20,"id":{"name":"serde","disambiguator":[4000104271178814327,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":21,"id":{"name":"serde_derive","disambiguator":[18006449751602700145,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":22,"id":{"name":"value_bag","disambiguator":[17141641066107204110,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":23,"id":{"name":"ctor","disambiguator":[16755768287334499010,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":24,"id":{"name":"erased_serde","disambiguator":[13184709623246578727,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":25,"id":{"name":"serde_fmt","disambiguator":[9852701297620206162,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":26,"id":{"name":"futures_core","disambiguator":[1925450448152840744,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":27,"id":{"name":"pin_utils","disambiguator":[7710960794867656871,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","num":28,"id":{"name":"pin_project_lite","disambiguator":[13059054705806279928,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":29,"id":{"name":"async_lock","disambiguator":[7189400156143219613,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":30,"id":{"name":"event_listener","disambiguator":[11995765894042976969,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":31,"id":{"name":"async_channel","disambiguator":[17820174455499265944,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":32,"id":{"name":"concurrent_queue","disambiguator":[11167838610581467686,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":33,"id":{"name":"cache_padded","disambiguator":[18225478852029668664,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":34,"id":{"name":"futures_io","disambiguator":[7010804205635532863,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":35,"id":{"name":"async_process","disambiguator":[2961450740077285769,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":36,"id":{"name":"blocking","disambiguator":[2048949227413328447,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":37,"id":{"name":"async_task","disambiguator":[17320519263030670803,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":38,"id":{"name":"atomic_waker","disambiguator":[2643464100855351002,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":39,"id":{"name":"futures_lite","disambiguator":[3810874943136155563,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":40,"id":{"name":"parking","disambiguator":[5931676391876109995,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":41,"id":{"name":"waker_fn","disambiguator":[11318028562897601792,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":42,"id":{"name":"fastrand","disambiguator":[4471758163405851352,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":43,"id":{"name":"memchr","disambiguator":[18137323351871073608,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":44,"id":{"name":"once_cell","disambiguator":[9495832533216755129,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":45,"id":{"name":"winapi","disambiguator":[16363261207009343199,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":46,"id":{"name":"crossbeam_utils","disambiguator":[17450368471546929506,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":47,"id":{"name":"lazy_static","disambiguator":[10174962780488854296,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":48,"id":{"name":"slab","disambiguator":[11270129971421005808,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":49,"id":{"name":"async_io","disambiguator":[14807080861618202947,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":50,"id":{"name":"socket2","disambiguator":[14661381682778397260,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":51,"id":{"name":"polling","disambiguator":[9352387183314339984,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":52,"id":{"name":"wepoll_ffi","disambiguator":[1254598602131576712,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":53,"id":{"name":"async_global_executor","disambiguator":[5327388371014139282,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":54,"id":{"name":"async_executor","disambiguator":[1600514229868239240,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":55,"id":{"name":"async_mutex","disambiguator":[6985306949693467698,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":56,"id":{"name":"num_cpus","disambiguator":[13959434253400856960,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":57,"id":{"name":"http_types","disambiguator":[6074918045235020076,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":58,"id":{"name":"cookie","disambiguator":[16307483048847706135,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":59,"id":{"name":"percent_encoding","disambiguator":[5242329962806200198,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":60,"id":{"name":"time","disambiguator":[3448188737234217208,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":61,"id":{"name":"const_fn","disambiguator":[7453143803617889421,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":62,"id":{"name":"standback","disambiguator":[15110299472437649953,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":63,"id":{"name":"time_macros","disambiguator":[13499898483362718122,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":64,"id":{"name":"proc_macro_hack","disambiguator":[2551856048638813387,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":65,"id":{"name":"time_macros_impl","disambiguator":[14731757803599191257,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":66,"id":{"name":"rand","disambiguator":[16096090652048778645,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":67,"id":{"name":"rand_core","disambiguator":[15063201457007394066,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":68,"id":{"name":"getrandom","disambiguator":[10294965363639737291,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":69,"id":{"name":"rand_chacha","disambiguator":[17889581173524471968,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":70,"id":{"name":"ppv_lite86","disambiguator":[8860043136884246857,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":71,"id":{"name":"base64","disambiguator":[6066947705054019863,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":72,"id":{"name":"aes_gcm","disambiguator":[2381488249212003564,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":73,"id":{"name":"aead","disambiguator":[7370440329880800410,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":74,"id":{"name":"generic_array","disambiguator":[4905358763566703778,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":75,"id":{"name":"typenum","disambiguator":[9382562593556307088,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":76,"id":{"name":"aes","disambiguator":[2053904216420109480,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":77,"id":{"name":"cipher","disambiguator":[1485883068974415937,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":78,"id":{"name":"aes_soft","disambiguator":[2747616096833193468,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":79,"id":{"name":"opaque_debug","disambiguator":[13929989881961465155,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":80,"id":{"name":"ctr","disambiguator":[17849478809080781028,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":81,"id":{"name":"ghash","disambiguator":[12002191032294599987,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":82,"id":{"name":"polyval","disambiguator":[8368002769125875328,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":83,"id":{"name":"universal_hash","disambiguator":[7362909063538195613,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":84,"id":{"name":"subtle","disambiguator":[8388868311020348132,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":85,"id":{"name":"cpuid_bool","disambiguator":[9782775545588248562,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":86,"id":{"name":"sha2","disambiguator":[4804373278124479543,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":87,"id":{"name":"block_buffer","disambiguator":[16341699143732423168,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":88,"id":{"name":"digest","disambiguator":[12951693287187014060,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":89,"id":{"name":"cpufeatures","disambiguator":[7500769216298850876,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":90,"id":{"name":"hmac","disambiguator":[1957872707230676317,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":91,"id":{"name":"crypto_mac","disambiguator":[7133438355821502553,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":92,"id":{"name":"hkdf","disambiguator":[12497263308596223195,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":93,"id":{"name":"url","disambiguator":[5991795980621058636,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":94,"id":{"name":"matches","disambiguator":[13086305272322152818,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":95,"id":{"name":"form_urlencoded","disambiguator":[12879418005371265937,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":96,"id":{"name":"idna","disambiguator":[11036768891911313715,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":97,"id":{"name":"unicode_bidi","disambiguator":[14896443705128202293,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":98,"id":{"name":"unicode_normalization","disambiguator":[1731914054869569597,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":99,"id":{"name":"tinyvec","disambiguator":[9415465285460800348,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":100,"id":{"name":"tinyvec_macros","disambiguator":[9097596293176377850,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":101,"id":{"name":"infer","disambiguator":[12611879263047361871,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":102,"id":{"name":"rand","disambiguator":[18193463468989702937,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":103,"id":{"name":"rand_core","disambiguator":[13102892490941878151,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":104,"id":{"name":"getrandom","disambiguator":[17159399835917975527,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":105,"id":{"name":"rand_chacha","disambiguator":[5290047083753294242,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","num":106,"id":{"name":"serde_json","disambiguator":[1396996634913507454,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":107,"id":{"name":"itoa","disambiguator":[1208910432738536241,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":108,"id":{"name":"ryu","disambiguator":[7941495029002674235,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":109,"id":{"name":"serde_urlencoded","disambiguator":[15424386232110383293,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":110,"id":{"name":"anyhow","disambiguator":[18053439243392295722,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":111,"id":{"name":"serde_qs","disambiguator":[15937633512403630463,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":112,"id":{"name":"thiserror","disambiguator":[9339331622120394135,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","num":113,"id":{"name":"thiserror_impl","disambiguator":[4697985317776798921,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","num":114,"id":{"name":"route_recognizer","disambiguator":[1971392555667475499,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","num":115,"id":{"name":"futures_util","disambiguator":[2155389532748683658,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","num":116,"id":{"name":"futures_macro","disambiguator":[8145991762166678375,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","num":117,"id":{"name":"futures_task","disambiguator":[676015542430194402,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\mod.rs","num":118,"id":{"name":"femme","disambiguator":[7784619609142203107,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","num":119,"id":{"name":"async_session","disambiguator":[12768478578356754549,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","num":120,"id":{"name":"chrono","disambiguator":[7930889987316691339,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","num":121,"id":{"name":"time","disambiguator":[12431825118456771304,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","num":122,"id":{"name":"libc","disambiguator":[1034754467202605485,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","num":123,"id":{"name":"num_integer","disambiguator":[2799267884219930006,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","num":124,"id":{"name":"num_traits","disambiguator":[11564805447887757291,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","num":125,"id":{"name":"base64","disambiguator":[16476432048494091433,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","num":126,"id":{"name":"blake3","disambiguator":[6427194192875859759,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","num":127,"id":{"name":"arrayref","disambiguator":[10587507565901975586,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","num":128,"id":{"name":"crypto_mac","disambiguator":[5025016446529731075,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","num":129,"id":{"name":"arrayvec","disambiguator":[2270235327965466203,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","num":130,"id":{"name":"cfg_if","disambiguator":[3151662610743374756,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","num":131,"id":{"name":"constant_time_eq","disambiguator":[15355004680337864603,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","num":132,"id":{"name":"hmac","disambiguator":[17258534804357606160,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","num":133,"id":{"name":"bincode","disambiguator":[16699854683601810042,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","num":134,"id":{"name":"http_client","disambiguator":[3355349084883841041,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\tcp_listener.rs","num":135,"id":{"name":"async_h1","disambiguator":[6040911198736317641,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\tcp_listener.rs","num":136,"id":{"name":"pin_project","disambiguator":[13591534610579550249,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\tcp_listener.rs","num":137,"id":{"name":"pin_project_internal","disambiguator":[1385379987223055228,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\tcp_listener.rs","num":138,"id":{"name":"httparse","disambiguator":[6656082718084797588,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\tcp_listener.rs","num":139,"id":{"name":"async_dup","disambiguator":[4083397498604024927,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\tcp_listener.rs","num":140,"id":{"name":"simple_mutex","disambiguator":[112861412872045633,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\endpoint.rs","num":141,"id":{"name":"async_sse","disambiguator":[11104543884176140374,0]}},{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\endpoint.rs","num":142,"id":{"name":"pin_project_lite","disambiguator":[5162435965236638425,0]}}],"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":0,"byte_end":4355,"line_start":1,"line_end":159,"column_start":1,"column_end":63}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\convert.rs","byte_start":87384,"byte_end":87385,"line_start":4,"line_end":4,"column_start":30,"column_end":31},"alias_span":null,"name":"*","value":"json, Deserialize, Serialize","parent":{"krate":0,"index":840}},{"kind":"Use","ref_id":{"krate":0,"index":1815},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\mod.rs","byte_start":87856,"byte_end":87874,"line_start":22,"line_end":22,"column_start":30,"column_end":48},"alias_span":null,"name":"ConcurrentListener","value":"","parent":{"krate":0,"index":842}},{"kind":"Use","ref_id":{"krate":0,"index":1833},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\mod.rs","byte_start":87903,"byte_end":87919,"line_start":23,"line_end":23,"column_start":28,"column_end":44},"alias_span":null,"name":"FailoverListener","value":"","parent":{"krate":0,"index":842}},{"kind":"Use","ref_id":{"krate":0,"index":1055},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\mod.rs","byte_start":87942,"byte_end":87952,"line_start":24,"line_end":24,"column_start":22,"column_end":32},"alias_span":null,"name":"ToListener","value":"","parent":{"krate":0,"index":842}},{"kind":"Use","ref_id":{"krate":17,"index":24},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\mod.rs","byte_start":123042,"byte_end":123047,"line_start":19,"line_end":19,"column_start":24,"column_end":29},"alias_span":null,"name":"debug","value":"","parent":{"krate":0,"index":1187}},{"kind":"Use","ref_id":{"krate":17,"index":27},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\mod.rs","byte_start":123049,"byte_end":123054,"line_start":19,"line_end":19,"column_start":31,"column_end":36},"alias_span":null,"name":"error","value":"","parent":{"krate":0,"index":1187}},{"kind":"Use","ref_id":{"krate":17,"index":25},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\mod.rs","byte_start":123056,"byte_end":123060,"line_start":19,"line_end":19,"column_start":38,"column_end":42},"alias_span":null,"name":"info","value":"","parent":{"krate":0,"index":1187}},{"kind":"Use","ref_id":{"krate":17,"index":21},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\mod.rs","byte_start":123062,"byte_end":123065,"line_start":19,"line_end":19,"column_start":44,"column_end":47},"alias_span":null,"name":"log","value":"","parent":{"krate":0,"index":1187}},{"kind":"Use","ref_id":{"krate":17,"index":23},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\mod.rs","byte_start":123067,"byte_end":123072,"line_start":19,"line_end":19,"column_start":49,"column_end":54},"alias_span":null,"name":"trace","value":"","parent":{"krate":0,"index":1187}},{"kind":"Use","ref_id":{"krate":17,"index":26},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\mod.rs","byte_start":123074,"byte_end":123078,"line_start":19,"line_end":19,"column_start":56,"column_end":60},"alias_span":null,"name":"warn","value":"","parent":{"krate":0,"index":1187}},{"kind":"Use","ref_id":{"krate":17,"index":20},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\mod.rs","byte_start":123104,"byte_end":123113,"line_start":20,"line_end":20,"column_start":24,"column_end":33},"alias_span":null,"name":"max_level","value":"","parent":{"krate":0,"index":1187}},{"kind":"Use","ref_id":{"krate":18,"index":1087},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\mod.rs","byte_start":123115,"byte_end":123120,"line_start":20,"line_end":20,"column_start":35,"column_end":40},"alias_span":null,"name":"Level","value":"","parent":{"krate":0,"index":1187}},{"kind":"Use","ref_id":{"krate":18,"index":1108},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\mod.rs","byte_start":123183,"byte_end":123194,"line_start":25,"line_end":25,"column_start":16,"column_end":27},"alias_span":null,"name":"LevelFilter","value":"","parent":{"krate":0,"index":1187}},{"kind":"Use","ref_id":{"krate":0,"index":1902},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\mod.rs","byte_start":123217,"byte_end":123230,"line_start":27,"line_end":27,"column_start":21,"column_end":34},"alias_span":null,"name":"LogMiddleware","value":"","parent":{"krate":0,"index":1187}},{"kind":"Use","ref_id":{"krate":106,"index":68},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\prelude.rs","byte_start":127377,"byte_end":127381,"line_start":2,"line_end":2,"column_start":26,"column_end":30},"alias_span":null,"name":"json","value":"","parent":{"krate":0,"index":1245}},{"kind":"Use","ref_id":{"krate":20,"index":1586},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\prelude.rs","byte_start":127383,"byte_end":127394,"line_start":2,"line_end":2,"column_start":32,"column_end":43},"alias_span":null,"name":"Deserialize","value":"","parent":{"krate":0,"index":1245}},{"kind":"Use","ref_id":{"krate":21,"index":1258},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\prelude.rs","byte_start":127383,"byte_end":127394,"line_start":2,"line_end":2,"column_start":32,"column_end":43},"alias_span":null,"name":"Deserialize","value":"","parent":{"krate":0,"index":1245}},{"kind":"Use","ref_id":{"krate":20,"index":2135},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\prelude.rs","byte_start":127396,"byte_end":127405,"line_start":2,"line_end":2,"column_start":45,"column_end":54},"alias_span":null,"name":"Serialize","value":"","parent":{"krate":0,"index":1245}},{"kind":"Use","ref_id":{"krate":21,"index":1257},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\prelude.rs","byte_start":127396,"byte_end":127405,"line_start":2,"line_end":2,"column_start":45,"column_end":54},"alias_span":null,"name":"Serialize","value":"","parent":{"krate":0,"index":1245}},{"kind":"Use","ref_id":{"krate":0,"index":1873},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\prelude.rs","byte_start":127433,"byte_end":127441,"line_start":3,"line_end":3,"column_start":26,"column_end":34},"alias_span":null,"name":"Listener","value":"","parent":{"krate":0,"index":1245}},{"kind":"Use","ref_id":{"krate":57,"index":3983},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\prelude.rs","byte_start":127463,"byte_end":127469,"line_start":4,"line_end":4,"column_start":21,"column_end":27},"alias_span":null,"name":"Status","value":"","parent":{"krate":0,"index":1245}},{"kind":"Use","ref_id":{"krate":0,"index":1917},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\mod.rs","byte_start":127530,"byte_end":127544,"line_start":5,"line_end":5,"column_start":16,"column_end":30},"alias_span":null,"name":"CorsMiddleware","value":"","parent":{"krate":0,"index":1262}},{"kind":"Use","ref_id":{"krate":0,"index":1938},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\mod.rs","byte_start":127546,"byte_end":127552,"line_start":5,"line_end":5,"column_start":32,"column_end":38},"alias_span":null,"name":"Origin","value":"","parent":{"krate":0,"index":1262}},{"kind":"Use","ref_id":{"krate":0,"index":1378},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\mod.rs","byte_start":141621,"byte_end":141629,"line_start":33,"line_end":33,"column_start":20,"column_end":28},"alias_span":null,"name":"endpoint","value":"","parent":{"krate":0,"index":1332}},{"kind":"Use","ref_id":{"krate":0,"index":1958},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\mod.rs","byte_start":141631,"byte_end":141642,"line_start":33,"line_end":33,"column_start":30,"column_end":41},"alias_span":null,"name":"SseEndpoint","value":"","parent":{"krate":0,"index":1332}},{"kind":"Use","ref_id":{"krate":0,"index":1978},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\mod.rs","byte_start":141661,"byte_end":141667,"line_start":34,"line_end":34,"column_start":17,"column_end":23},"alias_span":null,"name":"Sender","value":"","parent":{"krate":0,"index":1332}},{"kind":"Use","ref_id":{"krate":0,"index":1425},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\mod.rs","byte_start":141686,"byte_end":141693,"line_start":35,"line_end":35,"column_start":18,"column_end":25},"alias_span":null,"name":"upgrade","value":"","parent":{"krate":0,"index":1332}},{"kind":"Use","ref_id":{"krate":14,"index":375},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","byte_start":145734,"byte_end":145745,"line_start":4,"line_end":4,"column_start":22,"column_end":33},"alias_span":null,"name":"async_trait","value":"","parent":{"krate":0,"index":1443}},{"kind":"Use","ref_id":{"krate":0,"index":1523},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":150841,"byte_end":150858,"line_start":72,"line_end":72,"column_start":21,"column_end":38},"alias_span":null,"name":"SessionMiddleware","value":"","parent":{"krate":0,"index":1463}},{"kind":"Use","ref_id":{"krate":119,"index":181},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":150902,"byte_end":150913,"line_start":76,"line_end":76,"column_start":25,"column_end":36},"alias_span":null,"name":"CookieStore","value":"","parent":{"krate":0,"index":1463}},{"kind":"Use","ref_id":{"krate":119,"index":182},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":150902,"byte_end":150913,"line_start":76,"line_end":76,"column_start":25,"column_end":36},"alias_span":null,"name":"CookieStore","value":"","parent":{"krate":0,"index":1463}},{"kind":"Use","ref_id":{"krate":119,"index":205},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":150915,"byte_end":150926,"line_start":76,"line_end":76,"column_start":38,"column_end":49},"alias_span":null,"name":"MemoryStore","value":"","parent":{"krate":0,"index":1463}},{"kind":"Use","ref_id":{"krate":119,"index":228},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":150928,"byte_end":150935,"line_start":76,"line_end":76,"column_start":51,"column_end":58},"alias_span":null,"name":"Session","value":"","parent":{"krate":0,"index":1463}},{"kind":"Use","ref_id":{"krate":119,"index":288},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":150937,"byte_end":150949,"line_start":76,"line_end":76,"column_start":60,"column_end":72},"alias_span":null,"name":"SessionStore","value":"","parent":{"krate":0,"index":1463}},{"kind":"Use","ref_id":{"krate":0,"index":1652},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":2610,"byte_end":2618,"line_start":89,"line_end":89,"column_start":19,"column_end":27},"alias_span":null,"name":"Endpoint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1691},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":2641,"byte_end":2651,"line_start":90,"line_end":90,"column_start":22,"column_end":32},"alias_span":null,"name":"Middleware","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":2653,"byte_end":2657,"line_start":90,"line_end":90,"column_start":34,"column_end":38},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1707},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":2678,"byte_end":2686,"line_start":91,"line_end":91,"column_start":19,"column_end":27},"alias_span":null,"name":"Redirect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1724},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":2705,"byte_end":2712,"line_start":92,"line_end":92,"column_start":18,"column_end":25},"alias_span":null,"name":"Request","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1777},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":2732,"byte_end":2740,"line_start":93,"line_end":93,"column_start":19,"column_end":27},"alias_span":null,"name":"Response","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1783},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":2768,"byte_end":2783,"line_start":94,"line_end":94,"column_start":27,"column_end":42},"alias_span":null,"name":"ResponseBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":656},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":2800,"byte_end":2805,"line_start":95,"line_end":95,"column_start":16,"column_end":21},"alias_span":null,"name":"Route","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":804},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":2823,"byte_end":2829,"line_start":96,"line_end":96,"column_start":17,"column_end":23},"alias_span":null,"name":"Server","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":57,"index":0},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":2840,"byte_end":2850,"line_start":98,"line_end":98,"column_start":9,"column_end":19},"alias_span":null,"name":"http","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":57,"index":5272},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":2867,"byte_end":2871,"line_start":98,"line_end":98,"column_start":36,"column_end":40},"alias_span":null,"name":"Body","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":57,"index":3356},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":2873,"byte_end":2878,"line_start":98,"line_end":98,"column_start":42,"column_end":47},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":57,"index":3983},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":2880,"byte_end":2886,"line_start":98,"line_end":98,"column_start":49,"column_end":55},"alias_span":null,"name":"Status","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":57,"index":5557},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":2888,"byte_end":2898,"line_start":98,"line_end":98,"column_start":57,"column_end":67},"alias_span":null,"name":"StatusCode","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":0,"byte_end":4355,"line_start":1,"line_end":159,"column_start":1,"column_end":63},"name":"","qualname":"::","value":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":59},{"krate":0,"index":104},{"krate":0,"index":196},{"krate":0,"index":229},{"krate":0,"index":258},{"krate":0,"index":440},{"krate":0,"index":583},{"krate":0,"index":620},{"krate":0,"index":707},{"krate":0,"index":760},{"krate":0,"index":840},{"krate":0,"index":842},{"krate":0,"index":1187},{"krate":0,"index":1245},{"krate":0,"index":1262},{"krate":0,"index":1332},{"krate":0,"index":1443},{"krate":0,"index":1463},{"krate":0,"index":1571},{"krate":0,"index":1574},{"krate":0,"index":1575},{"krate":0,"index":1578},{"krate":0,"index":1581},{"krate":0,"index":1584},{"krate":0,"index":1587},{"krate":0,"index":1590},{"krate":0,"index":1593},{"krate":0,"index":1596},{"krate":0,"index":1599},{"krate":0,"index":1600},{"krate":0,"index":1603},{"krate":0,"index":1606},{"krate":0,"index":1609},{"krate":0,"index":1612},{"krate":0,"index":1615},{"krate":0,"index":1616},{"krate":0,"index":1618}],"decl_id":null,"docs":" Tide is a minimal and pragmatic Rust web application framework built for\n rapid development. It comes with a robust set of features that make\n building async web applications and APIs easier and more fun.","sig":null,"attributes":[{"value":"/ Tide is a minimal and pragmatic Rust web application framework built for","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":0,"byte_end":76,"line_start":1,"line_end":1,"column_start":1,"column_end":77}},{"value":"/ rapid development. It comes with a robust set of features that make","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":77,"byte_end":148,"line_start":2,"line_end":2,"column_start":1,"column_end":72}},{"value":"/ building async web applications and APIs easier and more fun.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":149,"byte_end":214,"line_start":3,"line_end":3,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":215,"byte_end":218,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":219,"byte_end":240,"line_start":5,"line_end":5,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":241,"byte_end":244,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ In order to build a web app in Rust you need an HTTP server, and an async","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":245,"byte_end":322,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"/ runtime. After running `cargo init` add the following lines to your","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":323,"byte_end":394,"line_start":8,"line_end":8,"column_start":1,"column_end":72}},{"value":"/ `Cargo.toml` file:","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":395,"byte_end":417,"line_start":9,"line_end":9,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":418,"byte_end":421,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":422,"byte_end":433,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"/ # Example, use the version numbers you need","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":434,"byte_end":481,"line_start":12,"line_end":12,"column_start":1,"column_end":48}},{"value":"/ tide = \"0.14.0\"","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":482,"byte_end":501,"line_start":13,"line_end":13,"column_start":1,"column_end":20}},{"value":"/ async-std = { version = \"1.6.0\", features = [\"attributes\"] }","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":502,"byte_end":566,"line_start":14,"line_end":14,"column_start":1,"column_end":65}},{"value":"/ serde = { version = \"1.0\", features = [\"derive\"] }","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":567,"byte_end":621,"line_start":15,"line_end":15,"column_start":1,"column_end":55}},{"value":"/```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":622,"byte_end":628,"line_start":16,"line_end":16,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":629,"byte_end":632,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":633,"byte_end":647,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":648,"byte_end":651,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Create an HTTP server that receives a JSON body, validates it, and responds with a","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":652,"byte_end":738,"line_start":20,"line_end":20,"column_start":1,"column_end":87}},{"value":"/ confirmation message.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":739,"byte_end":764,"line_start":21,"line_end":21,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":765,"byte_end":768,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":769,"byte_end":782,"line_start":23,"line_end":23,"column_start":1,"column_end":14}},{"value":"/ use tide::Request;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":783,"byte_end":805,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"/ use tide::prelude::*;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":806,"byte_end":831,"line_start":25,"line_end":25,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":832,"byte_end":835,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, Deserialize)]","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":836,"byte_end":869,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/ struct Animal {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":870,"byte_end":889,"line_start":28,"line_end":28,"column_start":1,"column_end":20}},{"value":"/     name: String,","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":890,"byte_end":911,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/     legs: u8,","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":912,"byte_end":929,"line_start":30,"line_end":30,"column_start":1,"column_end":18}},{"value":"/ }","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":930,"byte_end":935,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":936,"byte_end":939,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ #[async_std::main]","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":940,"byte_end":962,"line_start":33,"line_end":33,"column_start":1,"column_end":23}},{"value":"/ async fn main() -> tide::Result<()> {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":963,"byte_end":1004,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/     let mut app = tide::new();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":1005,"byte_end":1039,"line_start":35,"line_end":35,"column_start":1,"column_end":35}},{"value":"/     app.at(\"/orders/shoes\").post(order_shoes);","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":1040,"byte_end":1090,"line_start":36,"line_end":36,"column_start":1,"column_end":51}},{"value":"/     app.listen(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":1091,"byte_end":1135,"line_start":37,"line_end":37,"column_start":1,"column_end":45}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":1136,"byte_end":1150,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":1151,"byte_end":1156,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":1157,"byte_end":1160,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ async fn order_shoes(mut req: Request<()>) -> tide::Result {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":1161,"byte_end":1225,"line_start":41,"line_end":41,"column_start":1,"column_end":65}},{"value":"/     let Animal { name, legs } = req.body_json().await?;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":1226,"byte_end":1285,"line_start":42,"line_end":42,"column_start":1,"column_end":60}},{"value":"/     Ok(format!(\"Hello, {}! I've put in an order for {} shoes\", name, legs).into())","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":1286,"byte_end":1372,"line_start":43,"line_end":43,"column_start":1,"column_end":87}},{"value":"/ }","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":1373,"byte_end":1378,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ ````","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":1379,"byte_end":1387,"line_start":45,"line_end":45,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":1388,"byte_end":1391,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```sh","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":1392,"byte_end":1401,"line_start":47,"line_end":47,"column_start":1,"column_end":10}},{"value":"/ $ curl localhost:8080/orders/shoes -d '{ \"name\": \"Chashu\", \"legs\": 4 }'","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":1402,"byte_end":1477,"line_start":48,"line_end":48,"column_start":1,"column_end":76}},{"value":"/ Hello, Chashu! I've put in an order for 4 shoes","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":1478,"byte_end":1529,"line_start":49,"line_end":49,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":1530,"byte_end":1533,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ $ curl localhost:8080/orders/shoes -d '{ \"name\": \"Mary Millipede\", \"legs\": 750 }'","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":1534,"byte_end":1619,"line_start":51,"line_end":51,"column_start":1,"column_end":86}},{"value":"/ number too large to fit in target type","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":1620,"byte_end":1662,"line_start":52,"line_end":52,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":1663,"byte_end":1670,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ See more examples in the [examples](https://github.com/http-rs/tide/tree/main/examples) directory.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":1671,"byte_end":1773,"line_start":54,"line_end":54,"column_start":1,"column_end":103}},{"value":"forbid(unsafe_code)","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":1824,"byte_end":1847,"line_start":57,"line_end":57,"column_start":1,"column_end":24}},{"value":"deny(missing_debug_implementations, nonstandard_style)","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":1848,"byte_end":1906,"line_start":58,"line_end":58,"column_start":1,"column_end":59}},{"value":"warn(missing_docs, unreachable_pub, future_incompatible, rust_2018_idioms)","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":1907,"byte_end":1985,"line_start":59,"line_end":59,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":1652},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","byte_start":10374,"byte_end":10382,"line_start":48,"line_end":48,"column_start":11,"column_end":19},"name":"Endpoint","qualname":"::endpoint::Endpoint","value":"Endpoint<State: Clone + Send + Sync + 'static>: Send + Sync + 'static","parent":null,"children":[{"krate":0,"index":1654}],"decl_id":null,"docs":" An HTTP request handler.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1654},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","byte_start":10512,"byte_end":10516,"line_start":50,"line_end":50,"column_start":14,"column_end":18},"name":"call","qualname":"::endpoint::Endpoint::call","value":"pub fn call<'life0, 'async_trait>(&'life0 Self, Request<State>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output = crate::Result> +\n    ::core::marker::Send + 'async_trait>> where 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":1652},"children":[],"decl_id":null,"docs":" Invoke the endpoint within the given context\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","byte_start":10349,"byte_end":10363,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"allow(clippy :: type_complexity, clippy :: type_repetition_in_bounds)","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","byte_start":10349,"byte_end":10363,"line_start":47,"line_end":47,"column_start":1,"column_end":15}}]},{"kind":"Trait","id":{"krate":0,"index":1691},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\middleware.rs","byte_start":19261,"byte_end":19271,"line_start":13,"line_end":13,"column_start":11,"column_end":21},"name":"Middleware","qualname":"::middleware::Middleware","value":"Middleware<State>: Send + Sync + 'static","parent":null,"children":[{"krate":0,"index":1693},{"krate":0,"index":1697}],"decl_id":null,"docs":" Middleware that wraps around the remaining middleware chain.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1693},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\middleware.rs","byte_start":19383,"byte_end":19389,"line_start":15,"line_end":15,"column_start":14,"column_end":20},"name":"handle","qualname":"::middleware::Middleware::handle","value":"pub fn handle<'life0, 'life1,\n'async_trait>(&'life0 Self, Request<State>, Next)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output = crate::Result> +\n    ::core::marker::Send + 'async_trait>> where 'life0:'async_trait,\n'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":1691},"children":[],"decl_id":null,"docs":" Asynchronously handle the request, and return a response.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\middleware.rs","byte_start":19236,"byte_end":19250,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"allow(clippy :: type_complexity, clippy :: type_repetition_in_bounds)","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\middleware.rs","byte_start":19236,"byte_end":19250,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1697},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\middleware.rs","byte_start":19545,"byte_end":19549,"line_start":18,"line_end":18,"column_start":8,"column_end":12},"name":"name","qualname":"::middleware::Middleware::name","value":"pub fn name(&Self) -> &str","parent":{"krate":0,"index":1691},"children":[],"decl_id":null,"docs":" Set the middleware's name. By default it uses the type signature.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\middleware.rs","byte_start":20160,"byte_end":20164,"line_start":42,"line_end":42,"column_start":12,"column_end":16},"name":"Next","qualname":"::middleware::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":223}],"decl_id":null,"docs":" The remainder of a middleware chain, including the endpoint.\n","sig":null,"attributes":[{"value":"/ The remainder of a middleware chain, including the endpoint.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\middleware.rs","byte_start":20044,"byte_end":20108,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\middleware.rs","byte_start":20109,"byte_end":20148,"line_start":41,"line_end":41,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\middleware.rs","byte_start":20437,"byte_end":20440,"line_start":49,"line_end":49,"column_start":18,"column_end":21},"name":"run","qualname":"<Next>::run","value":"pub async fn run(Self, Request<State>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously execute the remaining middleware chain.\n","sig":null,"attributes":[{"value":"/ Asynchronously execute the remaining middleware chain.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\middleware.rs","byte_start":20361,"byte_end":20419,"line_start":48,"line_end":48,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1707},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\redirect.rs","byte_start":22010,"byte_end":22018,"line_start":41,"line_end":41,"column_start":12,"column_end":20},"name":"Redirect","qualname":"::redirect::Redirect","value":"Redirect {  }","parent":null,"children":[{"krate":0,"index":1709},{"krate":0,"index":1710}],"decl_id":null,"docs":" A redirection endpoint.","sig":null,"attributes":[{"value":"/ A redirection endpoint.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\redirect.rs","byte_start":21501,"byte_end":21528,"line_start":23,"line_end":23,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\redirect.rs","byte_start":21529,"byte_end":21532,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\redirect.rs","byte_start":21533,"byte_end":21546,"line_start":25,"line_end":25,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\redirect.rs","byte_start":21547,"byte_end":21550,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\redirect.rs","byte_start":21551,"byte_end":21558,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ # use tide::{Response, Redirect, Request, StatusCode};","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\redirect.rs","byte_start":21559,"byte_end":21617,"line_start":28,"line_end":28,"column_start":1,"column_end":59}},{"value":"/ # fn next_product() -> Option<String> { None }","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\redirect.rs","byte_start":21618,"byte_end":21668,"line_start":29,"line_end":29,"column_start":1,"column_end":51}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\redirect.rs","byte_start":21669,"byte_end":21694,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/ async fn route_handler(request: Request<()>) -> tide::Result {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\redirect.rs","byte_start":21695,"byte_end":21761,"line_start":31,"line_end":31,"column_start":1,"column_end":67}},{"value":"/     if let Some(product_url) = next_product() {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\redirect.rs","byte_start":21762,"byte_end":21813,"line_start":32,"line_end":32,"column_start":1,"column_end":52}},{"value":"/         Ok(Redirect::new(product_url).into())","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\redirect.rs","byte_start":21814,"byte_end":21863,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\redirect.rs","byte_start":21864,"byte_end":21880,"line_start":34,"line_end":34,"column_start":1,"column_end":17}},{"value":"/         //...","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\redirect.rs","byte_start":21881,"byte_end":21898,"line_start":35,"line_end":35,"column_start":1,"column_end":18}},{"value":"/ #       Ok(Response::new(StatusCode::Ok)) //...","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\redirect.rs","byte_start":21899,"byte_end":21950,"line_start":36,"line_end":36,"column_start":1,"column_end":52}},{"value":"/     }","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\redirect.rs","byte_start":21951,"byte_end":21960,"line_start":37,"line_end":37,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\redirect.rs","byte_start":21961,"byte_end":21966,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\redirect.rs","byte_start":21967,"byte_end":21974,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\redirect.rs","byte_start":22239,"byte_end":22242,"line_start":50,"line_end":50,"column_start":12,"column_end":15},"name":"new","qualname":"<Redirect<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an endpoint that represents a redirect to `location`.","sig":null,"attributes":[{"value":"/ Creates an endpoint that represents a redirect to `location`.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\redirect.rs","byte_start":22118,"byte_end":22183,"line_start":47,"line_end":47,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\redirect.rs","byte_start":22188,"byte_end":22191,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Uses status code 302 Found.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\redirect.rs","byte_start":22196,"byte_end":22227,"line_start":49,"line_end":49,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\redirect.rs","byte_start":22507,"byte_end":22516,"line_start":60,"line_end":60,"column_start":12,"column_end":21},"name":"permanent","qualname":"<Redirect<T>>::permanent","value":"pub fn permanent(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an endpoint that represents a permanent redirect to `location`.","sig":null,"attributes":[{"value":"/ Creates an endpoint that represents a permanent redirect to `location`.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\redirect.rs","byte_start":22363,"byte_end":22438,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\redirect.rs","byte_start":22443,"byte_end":22446,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Uses status code 301 Permanent Redirect.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\redirect.rs","byte_start":22451,"byte_end":22495,"line_start":59,"line_end":59,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\redirect.rs","byte_start":22793,"byte_end":22802,"line_start":70,"line_end":70,"column_start":12,"column_end":21},"name":"temporary","qualname":"<Redirect<T>>::temporary","value":"pub fn temporary(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an endpoint that represents a temporary redirect to `location`.","sig":null,"attributes":[{"value":"/ Creates an endpoint that represents a temporary redirect to `location`.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\redirect.rs","byte_start":22649,"byte_end":22724,"line_start":67,"line_end":67,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\redirect.rs","byte_start":22729,"byte_end":22732,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ Uses status code 307 Temporary Redirect.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\redirect.rs","byte_start":22737,"byte_end":22781,"line_start":69,"line_end":69,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\redirect.rs","byte_start":23070,"byte_end":23079,"line_start":80,"line_end":80,"column_start":12,"column_end":21},"name":"see_other","qualname":"<Redirect<T>>::see_other","value":"pub fn see_other(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an endpoint that represents a see other redirect to `location`.","sig":null,"attributes":[{"value":"/ Creates an endpoint that represents a see other redirect to `location`.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\redirect.rs","byte_start":22935,"byte_end":23010,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\redirect.rs","byte_start":23015,"byte_end":23018,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Uses status code 303 See Other.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\redirect.rs","byte_start":23023,"byte_end":23058,"line_start":79,"line_end":79,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1724},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":24813,"byte_end":24820,"line_start":26,"line_end":26,"column_start":16,"column_end":23},"name":"Request","qualname":"::request::Request","value":"Request {  }","parent":null,"children":[{"krate":0,"index":1726},{"krate":0,"index":1727},{"krate":0,"index":1728}],"decl_id":null,"docs":" An HTTP request.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":25776,"byte_end":25782,"line_start":64,"line_end":64,"column_start":12,"column_end":18},"name":"method","qualname":"<Request<State>>::method","value":"pub fn method(&Self) -> Method","parent":null,"children":[],"decl_id":null,"docs":" Access the request's HTTP method.","sig":null,"attributes":[{"value":"/ Access the request's HTTP method.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":25230,"byte_end":25267,"line_start":44,"line_end":44,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":25272,"byte_end":25275,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":25280,"byte_end":25294,"line_start":46,"line_end":46,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":25299,"byte_end":25302,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":25307,"byte_end":25320,"line_start":48,"line_end":48,"column_start":5,"column_end":18}},{"value":"/ # use async_std::task::block_on;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":25325,"byte_end":25361,"line_start":49,"line_end":49,"column_start":5,"column_end":41}},{"value":"/ # fn main() -> Result<(), std::io::Error> { block_on(async {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":25366,"byte_end":25430,"line_start":50,"line_end":50,"column_start":5,"column_end":69}},{"value":"/ #","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":25435,"byte_end":25440,"line_start":51,"line_end":51,"column_start":5,"column_end":10}},{"value":"/ use tide::Request;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":25445,"byte_end":25467,"line_start":52,"line_end":52,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":25472,"byte_end":25475,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ let mut app = tide::new();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":25480,"byte_end":25510,"line_start":54,"line_end":54,"column_start":5,"column_end":35}},{"value":"/ app.at(\"/\").get(|req: Request<()>| async move {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":25515,"byte_end":25566,"line_start":55,"line_end":55,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(req.method(), http_types::Method::Get);","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":25571,"byte_end":25629,"line_start":56,"line_end":56,"column_start":5,"column_end":63}},{"value":"/     Ok(\"\")","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":25634,"byte_end":25648,"line_start":57,"line_end":57,"column_start":5,"column_end":19}},{"value":"/ });","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":25653,"byte_end":25660,"line_start":58,"line_end":58,"column_start":5,"column_end":12}},{"value":"/ app.listen(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":25665,"byte_end":25705,"line_start":59,"line_end":59,"column_start":5,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":25710,"byte_end":25715,"line_start":60,"line_end":60,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) })}","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":25720,"byte_end":25736,"line_start":61,"line_end":61,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":25741,"byte_end":25748,"line_start":62,"line_end":62,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":25753,"byte_end":25764,"line_start":63,"line_end":63,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":26403,"byte_end":26406,"line_start":88,"line_end":88,"column_start":12,"column_end":15},"name":"url","qualname":"<Request<State>>::url","value":"pub fn url(&Self) -> &Url","parent":null,"children":[],"decl_id":null,"docs":" Access the request's full URI method.","sig":null,"attributes":[{"value":"/ Access the request's full URI method.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":25839,"byte_end":25880,"line_start":68,"line_end":68,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":25885,"byte_end":25888,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":25893,"byte_end":25907,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":25912,"byte_end":25915,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":25920,"byte_end":25933,"line_start":72,"line_end":72,"column_start":5,"column_end":18}},{"value":"/ # use async_std::task::block_on;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":25938,"byte_end":25974,"line_start":73,"line_end":73,"column_start":5,"column_end":41}},{"value":"/ # fn main() -> Result<(), std::io::Error> { block_on(async {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":25979,"byte_end":26043,"line_start":74,"line_end":74,"column_start":5,"column_end":69}},{"value":"/ #","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":26048,"byte_end":26053,"line_start":75,"line_end":75,"column_start":5,"column_end":10}},{"value":"/ use tide::Request;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":26058,"byte_end":26080,"line_start":76,"line_end":76,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":26085,"byte_end":26088,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ let mut app = tide::new();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":26093,"byte_end":26123,"line_start":78,"line_end":78,"column_start":5,"column_end":35}},{"value":"/ app.at(\"/\").get(|req: Request<()>| async move {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":26128,"byte_end":26179,"line_start":79,"line_end":79,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(req.url(), &\"/\".parse::<tide::http::Url>().unwrap());","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":26184,"byte_end":26256,"line_start":80,"line_end":80,"column_start":5,"column_end":77}},{"value":"/     Ok(\"\")","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":26261,"byte_end":26275,"line_start":81,"line_end":81,"column_start":5,"column_end":19}},{"value":"/ });","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":26280,"byte_end":26287,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ app.listen(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":26292,"byte_end":26332,"line_start":83,"line_end":83,"column_start":5,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":26337,"byte_end":26342,"line_start":84,"line_end":84,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) })}","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":26347,"byte_end":26363,"line_start":85,"line_end":85,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":26368,"byte_end":26375,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":26380,"byte_end":26391,"line_start":87,"line_end":87,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":27017,"byte_end":27024,"line_start":112,"line_end":112,"column_start":12,"column_end":19},"name":"version","qualname":"<Request<State>>::version","value":"pub fn version(&Self) -> Option<Version>","parent":null,"children":[],"decl_id":null,"docs":" Access the request's HTTP version.","sig":null,"attributes":[{"value":"/ Access the request's HTTP version.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":26458,"byte_end":26496,"line_start":92,"line_end":92,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":26501,"byte_end":26504,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":26509,"byte_end":26523,"line_start":94,"line_end":94,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":26528,"byte_end":26531,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":26536,"byte_end":26549,"line_start":96,"line_end":96,"column_start":5,"column_end":18}},{"value":"/ # use async_std::task::block_on;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":26554,"byte_end":26590,"line_start":97,"line_end":97,"column_start":5,"column_end":41}},{"value":"/ # fn main() -> Result<(), std::io::Error> { block_on(async {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":26595,"byte_end":26659,"line_start":98,"line_end":98,"column_start":5,"column_end":69}},{"value":"/ #","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":26664,"byte_end":26669,"line_start":99,"line_end":99,"column_start":5,"column_end":10}},{"value":"/ use tide::Request;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":26674,"byte_end":26696,"line_start":100,"line_end":100,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":26701,"byte_end":26704,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ let mut app = tide::new();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":26709,"byte_end":26739,"line_start":102,"line_end":102,"column_start":5,"column_end":35}},{"value":"/ app.at(\"/\").get(|req: Request<()>| async move {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":26744,"byte_end":26795,"line_start":103,"line_end":103,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(req.version(), Some(http_types::Version::Http1_1));","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":26800,"byte_end":26870,"line_start":104,"line_end":104,"column_start":5,"column_end":75}},{"value":"/     Ok(\"\")","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":26875,"byte_end":26889,"line_start":105,"line_end":105,"column_start":5,"column_end":19}},{"value":"/ });","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":26894,"byte_end":26901,"line_start":106,"line_end":106,"column_start":5,"column_end":12}},{"value":"/ app.listen(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":26906,"byte_end":26946,"line_start":107,"line_end":107,"column_start":5,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":26951,"byte_end":26956,"line_start":108,"line_end":108,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) })}","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":26961,"byte_end":26977,"line_start":109,"line_end":109,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":26982,"byte_end":26989,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":26994,"byte_end":27005,"line_start":111,"line_end":111,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":27239,"byte_end":27248,"line_start":119,"line_end":119,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<Request<State>>::peer_addr","value":"pub fn peer_addr(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Get the peer socket address for the underlying transport, if\n that information is available for this request.\n","sig":null,"attributes":[{"value":"/ Get the peer socket address for the underlying transport, if","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":27091,"byte_end":27155,"line_start":116,"line_end":116,"column_start":5,"column_end":69}},{"value":"/ that information is available for this request.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":27160,"byte_end":27211,"line_start":117,"line_end":117,"column_start":5,"column_end":56}},{"value":"must_use","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":27216,"byte_end":27227,"line_start":118,"line_end":118,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":27463,"byte_end":27473,"line_start":126,"line_end":126,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<Request<State>>::local_addr","value":"pub fn local_addr(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Get the local socket address for the underlying transport, if\n that information is available for this request.\n","sig":null,"attributes":[{"value":"/ Get the local socket address for the underlying transport, if","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":27314,"byte_end":27379,"line_start":123,"line_end":123,"column_start":5,"column_end":70}},{"value":"/ that information is available for this request.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":27384,"byte_end":27435,"line_start":124,"line_end":124,"column_start":5,"column_end":56}},{"value":"must_use","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":27440,"byte_end":27451,"line_start":125,"line_end":125,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":27801,"byte_end":27807,"line_start":137,"line_end":137,"column_start":12,"column_end":18},"name":"remote","qualname":"<Request<State>>::remote","value":"pub fn remote(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Get the remote address for this request.","sig":null,"attributes":[{"value":"/ Get the remote address for this request.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":27540,"byte_end":27584,"line_start":130,"line_end":130,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":27589,"byte_end":27592,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This is determined in the following priority:","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":27597,"byte_end":27646,"line_start":132,"line_end":132,"column_start":5,"column_end":54}},{"value":"/ 1. `Forwarded` header `for` key","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":27651,"byte_end":27686,"line_start":133,"line_end":133,"column_start":5,"column_end":40}},{"value":"/ 2. The first `X-Forwarded-For` header","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":27691,"byte_end":27732,"line_start":134,"line_end":134,"column_start":5,"column_end":46}},{"value":"/ 3. Peer address of the transport","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":27737,"byte_end":27773,"line_start":135,"line_end":135,"column_start":5,"column_end":41}},{"value":"must_use","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":27778,"byte_end":27789,"line_start":136,"line_end":136,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":28149,"byte_end":28153,"line_start":149,"line_end":149,"column_start":12,"column_end":16},"name":"host","qualname":"<Request<State>>::host","value":"pub fn host(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Get the destination host for this request.","sig":null,"attributes":[{"value":"/ Get the destination host for this request.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":27870,"byte_end":27916,"line_start":141,"line_end":141,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":27921,"byte_end":27924,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ This is determined in the following priority:","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":27929,"byte_end":27978,"line_start":143,"line_end":143,"column_start":5,"column_end":54}},{"value":"/ 1. `Forwarded` header `host` key","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":27983,"byte_end":28019,"line_start":144,"line_end":144,"column_start":5,"column_end":41}},{"value":"/ 2. The first `X-Forwarded-Host` header","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":28024,"byte_end":28066,"line_start":145,"line_end":145,"column_start":5,"column_end":47}},{"value":"/ 3. `Host` header","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":28071,"byte_end":28091,"line_start":146,"line_end":146,"column_start":5,"column_end":25}},{"value":"/ 4. URL domain, if any","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":28096,"byte_end":28121,"line_start":147,"line_end":147,"column_start":5,"column_end":30}},{"value":"must_use","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":28126,"byte_end":28137,"line_start":148,"line_end":148,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":28460,"byte_end":28472,"line_start":159,"line_end":159,"column_start":12,"column_end":24},"name":"content_type","qualname":"<Request<State>>::content_type","value":"pub fn content_type(&Self) -> Option<Mime>","parent":null,"children":[],"decl_id":null,"docs":" Get the request content type as a `Mime`.","sig":null,"attributes":[{"value":"/ Get the request content type as a `Mime`.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":28214,"byte_end":28259,"line_start":153,"line_end":153,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":28264,"byte_end":28267,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ This gets the request `Content-Type` header.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":28272,"byte_end":28320,"line_start":155,"line_end":155,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":28325,"byte_end":28328,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ [Read more on MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types)","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":28333,"byte_end":28432,"line_start":157,"line_end":157,"column_start":5,"column_end":104}},{"value":"must_use","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":28437,"byte_end":28448,"line_start":158,"line_end":158,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":29087,"byte_end":29093,"line_start":183,"line_end":183,"column_start":12,"column_end":18},"name":"header","qualname":"<Request<State>>::header","value":"pub fn header<impl Into<http_types::headers::HeaderName>: Into<http_types::headers::HeaderName>>(&Self,\nimpl Into<http_types::headers::HeaderName>)\n-> Option<&http_types::headers::HeaderValues>","parent":null,"children":[],"decl_id":null,"docs":" Get an HTTP header.","sig":null,"attributes":[{"value":"/ Get an HTTP header.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":28541,"byte_end":28564,"line_start":163,"line_end":163,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":28569,"byte_end":28572,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":28577,"byte_end":28591,"line_start":165,"line_end":165,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":28596,"byte_end":28599,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":28604,"byte_end":28617,"line_start":167,"line_end":167,"column_start":5,"column_end":18}},{"value":"/ # use async_std::task::block_on;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":28622,"byte_end":28658,"line_start":168,"line_end":168,"column_start":5,"column_end":41}},{"value":"/ # fn main() -> Result<(), std::io::Error> { block_on(async {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":28663,"byte_end":28727,"line_start":169,"line_end":169,"column_start":5,"column_end":69}},{"value":"/ #","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":28732,"byte_end":28737,"line_start":170,"line_end":170,"column_start":5,"column_end":10}},{"value":"/ use tide::Request;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":28742,"byte_end":28764,"line_start":171,"line_end":171,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":28769,"byte_end":28772,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ let mut app = tide::new();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":28777,"byte_end":28807,"line_start":173,"line_end":173,"column_start":5,"column_end":35}},{"value":"/ app.at(\"/\").get(|req: Request<()>| async move {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":28812,"byte_end":28863,"line_start":174,"line_end":174,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(req.header(\"X-Forwarded-For\").unwrap(), \"127.0.0.1\");","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":28868,"byte_end":28940,"line_start":175,"line_end":175,"column_start":5,"column_end":77}},{"value":"/     Ok(\"\")","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":28945,"byte_end":28959,"line_start":176,"line_end":176,"column_start":5,"column_end":19}},{"value":"/ });","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":28964,"byte_end":28971,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"/ app.listen(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":28976,"byte_end":29016,"line_start":178,"line_end":178,"column_start":5,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":29021,"byte_end":29026,"line_start":179,"line_end":179,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) })}","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":29031,"byte_end":29047,"line_start":180,"line_end":180,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":29052,"byte_end":29059,"line_start":181,"line_end":181,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":29064,"byte_end":29075,"line_start":182,"line_end":182,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":29313,"byte_end":29323,"line_start":191,"line_end":191,"column_start":12,"column_end":22},"name":"header_mut","qualname":"<Request<State>>::header_mut","value":"pub fn header_mut<impl Into<HeaderName>: Into<HeaderName>>(&mut Self,\nimpl Into<HeaderName>) -> Option<&mut HeaderValues>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a header.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to a header.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":29261,"byte_end":29301,"line_start":190,"line_end":190,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":29475,"byte_end":29488,"line_start":196,"line_end":196,"column_start":12,"column_end":25},"name":"insert_header","qualname":"<Request<State>>::insert_header","value":"pub fn insert_header<impl Into<HeaderName>: Into<HeaderName>,\nimpl ToHeaderValues: ToHeaderValues>(&mut Self, impl Into<HeaderName>,\nimpl ToHeaderValues) -> Option<HeaderValues>","parent":null,"children":[],"decl_id":null,"docs":" Set an HTTP header.\n","sig":null,"attributes":[{"value":"/ Set an HTTP header.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":29440,"byte_end":29463,"line_start":195,"line_end":195,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":29905,"byte_end":29918,"line_start":208,"line_end":208,"column_start":12,"column_end":25},"name":"append_header","qualname":"<Request<State>>::append_header","value":"pub fn append_header<impl Into<HeaderName>: Into<HeaderName>,\nimpl ToHeaderValues: ToHeaderValues>(&mut Self, impl Into<HeaderName>,\nimpl ToHeaderValues)","parent":null,"children":[],"decl_id":null,"docs":" Append a header to the headers.","sig":null,"attributes":[{"value":"/ Append a header to the headers.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":29671,"byte_end":29706,"line_start":204,"line_end":204,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":29711,"byte_end":29714,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ Unlike `insert` this function will not override the contents of a header, but insert a","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":29719,"byte_end":29809,"line_start":206,"line_end":206,"column_start":5,"column_end":95}},{"value":"/ header if there aren't any. Or else append to the existing list of headers.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":29814,"byte_end":29893,"line_start":207,"line_end":207,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":30078,"byte_end":30091,"line_start":213,"line_end":213,"column_start":12,"column_end":25},"name":"remove_header","qualname":"<Request<State>>::remove_header","value":"pub fn remove_header<impl Into<HeaderName>: Into<HeaderName>>(&mut Self,\nimpl Into<HeaderName>) -> Option<HeaderValues>","parent":null,"children":[],"decl_id":null,"docs":" Remove a header.\n","sig":null,"attributes":[{"value":"/ Remove a header.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":30046,"byte_end":30066,"line_start":212,"line_end":212,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":30295,"byte_end":30299,"line_start":219,"line_end":219,"column_start":12,"column_end":16},"name":"iter","qualname":"<Request<State>>::iter","value":"pub fn iter(&Self) -> headers::Iter","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all header pairs in arbitrary order.\n","sig":null,"attributes":[{"value":"/ An iterator visiting all header pairs in arbitrary order.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":30206,"byte_end":30267,"line_start":217,"line_end":217,"column_start":5,"column_end":66}},{"value":"must_use","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":30272,"byte_end":30283,"line_start":218,"line_end":218,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":30501,"byte_end":30509,"line_start":226,"line_end":226,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Request<State>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> headers::IterMut","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all header pairs in arbitrary order, with mutable references to the\n values.\n","sig":null,"attributes":[{"value":"/ An iterator visiting all header pairs in arbitrary order, with mutable references to the","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":30365,"byte_end":30457,"line_start":223,"line_end":223,"column_start":5,"column_end":97}},{"value":"/ values.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":30462,"byte_end":30473,"line_start":224,"line_end":224,"column_start":5,"column_end":16}},{"value":"must_use","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":30478,"byte_end":30489,"line_start":225,"line_end":225,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":30675,"byte_end":30687,"line_start":232,"line_end":232,"column_start":12,"column_end":24},"name":"header_names","qualname":"<Request<State>>::header_names","value":"pub fn header_names(&Self) -> headers::Names","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all header names in arbitrary order.\n","sig":null,"attributes":[{"value":"/ An iterator visiting all header names in arbitrary order.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":30586,"byte_end":30647,"line_start":230,"line_end":230,"column_start":5,"column_end":66}},{"value":"must_use","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":30652,"byte_end":30663,"line_start":231,"line_end":231,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":30852,"byte_end":30865,"line_start":238,"line_end":238,"column_start":12,"column_end":25},"name":"header_values","qualname":"<Request<State>>::header_values","value":"pub fn header_values(&Self) -> headers::Values","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all header values in arbitrary order.\n","sig":null,"attributes":[{"value":"/ An iterator visiting all header values in arbitrary order.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":30762,"byte_end":30824,"line_start":236,"line_end":236,"column_start":5,"column_end":67}},{"value":"must_use","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":30829,"byte_end":30840,"line_start":237,"line_end":237,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":31004,"byte_end":31007,"line_start":244,"line_end":244,"column_start":12,"column_end":15},"name":"ext","qualname":"<Request<State>>::ext","value":"pub fn ext<T: Send + Sync + 'static>(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get a request extension value.\n","sig":null,"attributes":[{"value":"/ Get a request extension value.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":30942,"byte_end":30976,"line_start":242,"line_end":242,"column_start":5,"column_end":39}},{"value":"must_use","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":30981,"byte_end":30992,"line_start":243,"line_end":243,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":31191,"byte_end":31198,"line_start":250,"line_end":250,"column_start":12,"column_end":19},"name":"ext_mut","qualname":"<Request<State>>::ext_mut","value":"pub fn ext_mut<T: Send + Sync + 'static>(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to value stored in request extensions.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to value stored in request extensions.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":31097,"byte_end":31163,"line_start":248,"line_end":248,"column_start":5,"column_end":71}},{"value":"must_use","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":31168,"byte_end":31179,"line_start":249,"line_end":249,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":31350,"byte_end":31357,"line_start":255,"line_end":255,"column_start":12,"column_end":19},"name":"set_ext","qualname":"<Request<State>>::set_ext","value":"pub fn set_ext<T: Send + Sync + 'static>(&mut Self, T) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Set a request extension value.\n","sig":null,"attributes":[{"value":"/ Set a request extension value.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":31304,"byte_end":31338,"line_start":254,"line_end":254,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":31533,"byte_end":31538,"line_start":261,"line_end":261,"column_start":12,"column_end":17},"name":"state","qualname":"<Request<State>>::state","value":"pub fn state(&Self) -> &State","parent":null,"children":[],"decl_id":null,"docs":"  Access application scoped state.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":31468,"byte_end":31479,"line_start":259,"line_end":259,"column_start":5,"column_end":16}},{"value":"/  Access application scoped state.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":31484,"byte_end":31521,"line_start":260,"line_end":260,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":32546,"byte_end":32551,"line_start":296,"line_end":296,"column_start":12,"column_end":17},"name":"param","qualname":"<Request<State>>::param","value":"pub fn param(&Self, &str) -> crate::Result<&str>","parent":null,"children":[],"decl_id":null,"docs":" Extract and parse a route parameter by name.","sig":null,"attributes":[{"value":"/ Extract and parse a route parameter by name.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":31589,"byte_end":31637,"line_start":265,"line_end":265,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":31642,"byte_end":31645,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ Returns the parameter as a `&str`, borrowed from this `Request`.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":31650,"byte_end":31718,"line_start":267,"line_end":267,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":31723,"byte_end":31726,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ The name should *not* include the leading `:` or the trailing `*` (if","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":31731,"byte_end":31804,"line_start":269,"line_end":269,"column_start":5,"column_end":78}},{"value":"/ any).","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":31809,"byte_end":31818,"line_start":270,"line_end":270,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":31823,"byte_end":31826,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":31831,"byte_end":31843,"line_start":272,"line_end":272,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":31848,"byte_end":31851,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ An error is returned if `key` is not a valid parameter for the route.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":31856,"byte_end":31929,"line_start":274,"line_end":274,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":31934,"byte_end":31937,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":31942,"byte_end":31956,"line_start":276,"line_end":276,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":31961,"byte_end":31964,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":31969,"byte_end":31982,"line_start":278,"line_end":278,"column_start":5,"column_end":18}},{"value":"/ # use async_std::task::block_on;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":31987,"byte_end":32023,"line_start":279,"line_end":279,"column_start":5,"column_end":41}},{"value":"/ # fn main() -> Result<(), std::io::Error> { block_on(async {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":32028,"byte_end":32092,"line_start":280,"line_end":280,"column_start":5,"column_end":69}},{"value":"/ #","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":32097,"byte_end":32102,"line_start":281,"line_end":281,"column_start":5,"column_end":10}},{"value":"/ use tide::{Request, Result};","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":32107,"byte_end":32139,"line_start":282,"line_end":282,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":32144,"byte_end":32147,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ async fn greet(req: Request<()>) -> Result<String> {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":32152,"byte_end":32208,"line_start":284,"line_end":284,"column_start":5,"column_end":61}},{"value":"/     let name = req.param(\"name\").unwrap_or(\"world\");","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":32213,"byte_end":32269,"line_start":285,"line_end":285,"column_start":5,"column_end":61}},{"value":"/     Ok(format!(\"Hello, {}!\", name))","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":32274,"byte_end":32313,"line_start":286,"line_end":286,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":32318,"byte_end":32323,"line_start":287,"line_end":287,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":32328,"byte_end":32331,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ let mut app = tide::new();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":32336,"byte_end":32366,"line_start":289,"line_end":289,"column_start":5,"column_end":35}},{"value":"/ app.at(\"/hello\").get(greet);","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":32371,"byte_end":32403,"line_start":290,"line_end":290,"column_start":5,"column_end":37}},{"value":"/ app.at(\"/hello/:name\").get(greet);","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":32408,"byte_end":32446,"line_start":291,"line_end":291,"column_start":5,"column_end":43}},{"value":"/ app.listen(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":32451,"byte_end":32491,"line_start":292,"line_end":292,"column_start":5,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":32496,"byte_end":32501,"line_start":293,"line_end":293,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) })}","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":32506,"byte_end":32522,"line_start":294,"line_end":294,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":32527,"byte_end":32534,"line_start":295,"line_end":295,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":34328,"byte_end":34333,"line_start":352,"line_end":352,"column_start":12,"column_end":17},"name":"query","qualname":"<Request<State>>::query","value":"pub fn query<T: serde::de::DeserializeOwned>(&Self) -> crate::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Parse the URL query component into a struct, using [serde_qs](https://docs.rs/serde_qs). To\n get the entire query as an unparsed string, use `request.url().query()`","sig":null,"attributes":[{"value":"/ Parse the URL query component into a struct, using [serde_qs](https://docs.rs/serde_qs). To","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":32803,"byte_end":32898,"line_start":304,"line_end":304,"column_start":5,"column_end":100}},{"value":"/ get the entire query as an unparsed string, use `request.url().query()`","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":32903,"byte_end":32978,"line_start":305,"line_end":305,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":32983,"byte_end":32986,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":32991,"byte_end":33002,"line_start":307,"line_end":307,"column_start":5,"column_end":16}},{"value":"/ # fn main() -> Result<(), std::io::Error> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":33007,"byte_end":33088,"line_start":308,"line_end":308,"column_start":5,"column_end":86}},{"value":"/ use tide::prelude::*;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":33093,"byte_end":33118,"line_start":309,"line_end":309,"column_start":5,"column_end":30}},{"value":"/ let mut app = tide::new();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":33123,"byte_end":33153,"line_start":310,"line_end":310,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":33158,"byte_end":33161,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":33166,"byte_end":33192,"line_start":312,"line_end":312,"column_start":5,"column_end":31}},{"value":"/ #[serde(default)]","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":33197,"byte_end":33218,"line_start":313,"line_end":313,"column_start":5,"column_end":26}},{"value":"/ struct Page {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":33223,"byte_end":33240,"line_start":314,"line_end":314,"column_start":5,"column_end":22}},{"value":"/     size: u8,","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":33245,"byte_end":33262,"line_start":315,"line_end":315,"column_start":5,"column_end":22}},{"value":"/     offset: u8,","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":33267,"byte_end":33286,"line_start":316,"line_end":316,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":33291,"byte_end":33296,"line_start":317,"line_end":317,"column_start":5,"column_end":10}},{"value":"/ impl Default for Page {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":33301,"byte_end":33328,"line_start":318,"line_end":318,"column_start":5,"column_end":32}},{"value":"/     fn default() -> Self {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":33333,"byte_end":33363,"line_start":319,"line_end":319,"column_start":5,"column_end":35}},{"value":"/         Self {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":33368,"byte_end":33386,"line_start":320,"line_end":320,"column_start":5,"column_end":23}},{"value":"/             size: 25,","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":33391,"byte_end":33416,"line_start":321,"line_end":321,"column_start":5,"column_end":30}},{"value":"/             offset: 0,","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":33421,"byte_end":33447,"line_start":322,"line_end":322,"column_start":5,"column_end":31}},{"value":"/         }","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":33452,"byte_end":33465,"line_start":323,"line_end":323,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":33470,"byte_end":33479,"line_start":324,"line_end":324,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":33484,"byte_end":33489,"line_start":325,"line_end":325,"column_start":5,"column_end":10}},{"value":"/ app.at(\"/pages\").post(|req: tide::Request<()>| async move {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":33494,"byte_end":33557,"line_start":326,"line_end":326,"column_start":5,"column_end":68}},{"value":"/     let page: Page = req.query()?;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":33562,"byte_end":33600,"line_start":327,"line_end":327,"column_start":5,"column_end":43}},{"value":"/     Ok(format!(\"page {}, with {} items\", page.offset, page.size))","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":33605,"byte_end":33674,"line_start":328,"line_end":328,"column_start":5,"column_end":74}},{"value":"/ });","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":33679,"byte_end":33686,"line_start":329,"line_end":329,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":33691,"byte_end":33694,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ # if false {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":33699,"byte_end":33715,"line_start":331,"line_end":331,"column_start":5,"column_end":21}},{"value":"/ app.listen(\"localhost:8000\").await?;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":33720,"byte_end":33760,"line_start":332,"line_end":332,"column_start":5,"column_end":45}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":33765,"byte_end":33772,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":33777,"byte_end":33780,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ // $ curl localhost:8000/pages","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":33785,"byte_end":33819,"line_start":335,"line_end":335,"column_start":5,"column_end":39}},{"value":"/ // page 0, with 25 items","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":33824,"byte_end":33852,"line_start":336,"line_end":336,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":33857,"byte_end":33860,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ // $ curl localhost:8000/pages?offset=1","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":33865,"byte_end":33908,"line_start":338,"line_end":338,"column_start":5,"column_end":48}},{"value":"/ // page 1, with 25 items","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":33913,"byte_end":33941,"line_start":339,"line_end":339,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":33946,"byte_end":33949,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ // $ curl localhost:8000/pages?offset=2&size=50","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":33954,"byte_end":34005,"line_start":341,"line_end":341,"column_start":5,"column_end":56}},{"value":"/ // page 2, with 50 items","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":34010,"byte_end":34038,"line_start":342,"line_end":342,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":34043,"byte_end":34046,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ // $ curl localhost:8000/pages?size=5000","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":34051,"byte_end":34095,"line_start":344,"line_end":344,"column_start":5,"column_end":49}},{"value":"/ // failed with reason: number too large to fit in target type","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":34100,"byte_end":34165,"line_start":345,"line_end":345,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":34170,"byte_end":34173,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ // $ curl localhost:8000/pages?size=all","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":34178,"byte_end":34221,"line_start":347,"line_end":347,"column_start":5,"column_end":48}},{"value":"/ // failed with reason: invalid digit found in string","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":34226,"byte_end":34282,"line_start":348,"line_end":348,"column_start":5,"column_end":61}},{"value":"/ # Ok(()) })}","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":34287,"byte_end":34303,"line_start":349,"line_end":349,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":34308,"byte_end":34315,"line_start":350,"line_end":350,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":34467,"byte_end":34475,"line_start":357,"line_end":357,"column_start":12,"column_end":20},"name":"set_body","qualname":"<Request<State>>::set_body","value":"pub fn set_body<impl Into<Body>: Into<Body>>(&mut Self, impl Into<Body>)","parent":null,"children":[],"decl_id":null,"docs":" Set the body reader.\n","sig":null,"attributes":[{"value":"/ Set the body reader.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":34431,"byte_end":34455,"line_start":356,"line_end":356,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":34827,"byte_end":34836,"line_start":367,"line_end":367,"column_start":12,"column_end":21},"name":"take_body","qualname":"<Request<State>>::take_body","value":"pub fn take_body(&mut Self) -> Body","parent":null,"children":[],"decl_id":null,"docs":" Take the request body as a `Body`.","sig":null,"attributes":[{"value":"/ Take the request body as a `Body`.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":34555,"byte_end":34593,"line_start":361,"line_end":361,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":34598,"byte_end":34601,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ This method can be called after the body has already been taken or read,","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":34606,"byte_end":34682,"line_start":363,"line_end":363,"column_start":5,"column_end":81}},{"value":"/ but will return an empty `Body`.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":34687,"byte_end":34723,"line_start":364,"line_end":364,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":34728,"byte_end":34731,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ This is useful for consuming the body via an AsyncReader or AsyncBufReader.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":34736,"byte_end":34815,"line_start":366,"line_end":366,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":35714,"byte_end":35724,"line_start":398,"line_end":398,"column_start":18,"column_end":28},"name":"body_bytes","qualname":"<Request<State>>::body_bytes","value":"pub async fn body_bytes<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the entire request body into a byte buffer.","sig":null,"attributes":[{"value":"/ Reads the entire request body into a byte buffer.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":34898,"byte_end":34951,"line_start":371,"line_end":371,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":34956,"byte_end":34959,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ This method can be called after the body has already been read, but will","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":34964,"byte_end":35040,"line_start":373,"line_end":373,"column_start":5,"column_end":81}},{"value":"/ produce an empty buffer.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":35045,"byte_end":35073,"line_start":374,"line_end":374,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":35078,"byte_end":35081,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":35086,"byte_end":35098,"line_start":376,"line_end":376,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":35103,"byte_end":35106,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ Any I/O error encountered while reading the body is immediately returned","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":35111,"byte_end":35187,"line_start":378,"line_end":378,"column_start":5,"column_end":81}},{"value":"/ as an `Err`.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":35192,"byte_end":35208,"line_start":379,"line_end":379,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":35213,"byte_end":35216,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":35221,"byte_end":35235,"line_start":381,"line_end":381,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":35240,"byte_end":35243,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":35248,"byte_end":35261,"line_start":383,"line_end":383,"column_start":5,"column_end":18}},{"value":"/ # use async_std::task::block_on;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":35266,"byte_end":35302,"line_start":384,"line_end":384,"column_start":5,"column_end":41}},{"value":"/ # fn main() -> Result<(), std::io::Error> { block_on(async {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":35307,"byte_end":35371,"line_start":385,"line_end":385,"column_start":5,"column_end":69}},{"value":"/ #","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":35376,"byte_end":35381,"line_start":386,"line_end":386,"column_start":5,"column_end":10}},{"value":"/ use tide::Request;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":35386,"byte_end":35408,"line_start":387,"line_end":387,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":35413,"byte_end":35416,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ let mut app = tide::new();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":35421,"byte_end":35451,"line_start":389,"line_end":389,"column_start":5,"column_end":35}},{"value":"/ app.at(\"/\").get(|mut req: Request<()>| async move {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":35456,"byte_end":35511,"line_start":390,"line_end":390,"column_start":5,"column_end":60}},{"value":"/     let _body: Vec<u8> = req.body_bytes().await.unwrap();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":35516,"byte_end":35577,"line_start":391,"line_end":391,"column_start":5,"column_end":66}},{"value":"/     Ok(\"\")","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":35582,"byte_end":35596,"line_start":392,"line_end":392,"column_start":5,"column_end":19}},{"value":"/ });","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":35601,"byte_end":35608,"line_start":393,"line_end":393,"column_start":5,"column_end":12}},{"value":"/ app.listen(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":35613,"byte_end":35653,"line_start":394,"line_end":394,"column_start":5,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":35658,"byte_end":35663,"line_start":395,"line_end":395,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) })}","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":35668,"byte_end":35684,"line_start":396,"line_end":396,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":35689,"byte_end":35696,"line_start":397,"line_end":397,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":36738,"byte_end":36749,"line_start":432,"line_end":432,"column_start":18,"column_end":29},"name":"body_string","qualname":"<Request<State>>::body_string","value":"pub async fn body_string<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the entire request body into a string.","sig":null,"attributes":[{"value":"/ Reads the entire request body into a string.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":35839,"byte_end":35887,"line_start":403,"line_end":403,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":35892,"byte_end":35895,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ This method can be called after the body has already been read, but will","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":35900,"byte_end":35976,"line_start":405,"line_end":405,"column_start":5,"column_end":81}},{"value":"/ produce an empty buffer.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":35981,"byte_end":36009,"line_start":406,"line_end":406,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":36014,"byte_end":36017,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":36022,"byte_end":36034,"line_start":408,"line_end":408,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":36039,"byte_end":36042,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ Any I/O error encountered while reading the body is immediately returned","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":36047,"byte_end":36123,"line_start":410,"line_end":410,"column_start":5,"column_end":81}},{"value":"/ as an `Err`.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":36128,"byte_end":36144,"line_start":411,"line_end":411,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":36149,"byte_end":36152,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ If the body cannot be interpreted as valid UTF-8, an `Err` is returned.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":36157,"byte_end":36232,"line_start":413,"line_end":413,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":36237,"byte_end":36240,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":36245,"byte_end":36259,"line_start":415,"line_end":415,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":36264,"byte_end":36267,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":36272,"byte_end":36285,"line_start":417,"line_end":417,"column_start":5,"column_end":18}},{"value":"/ # use async_std::task::block_on;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":36290,"byte_end":36326,"line_start":418,"line_end":418,"column_start":5,"column_end":41}},{"value":"/ # fn main() -> Result<(), std::io::Error> { block_on(async {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":36331,"byte_end":36395,"line_start":419,"line_end":419,"column_start":5,"column_end":69}},{"value":"/ #","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":36400,"byte_end":36405,"line_start":420,"line_end":420,"column_start":5,"column_end":10}},{"value":"/ use tide::Request;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":36410,"byte_end":36432,"line_start":421,"line_end":421,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":36437,"byte_end":36440,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ let mut app = tide::new();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":36445,"byte_end":36475,"line_start":423,"line_end":423,"column_start":5,"column_end":35}},{"value":"/ app.at(\"/\").get(|mut req: Request<()>| async move {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":36480,"byte_end":36535,"line_start":424,"line_end":424,"column_start":5,"column_end":60}},{"value":"/     let _body: String = req.body_string().await.unwrap();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":36540,"byte_end":36601,"line_start":425,"line_end":425,"column_start":5,"column_end":66}},{"value":"/     Ok(\"\")","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":36606,"byte_end":36620,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/ });","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":36625,"byte_end":36632,"line_start":427,"line_end":427,"column_start":5,"column_end":12}},{"value":"/ app.listen(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":36637,"byte_end":36677,"line_start":428,"line_end":428,"column_start":5,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":36682,"byte_end":36687,"line_start":429,"line_end":429,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) })}","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":36692,"byte_end":36708,"line_start":430,"line_end":430,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":36713,"byte_end":36720,"line_start":431,"line_end":431,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":37196,"byte_end":37205,"line_start":446,"line_end":446,"column_start":18,"column_end":27},"name":"body_json","qualname":"<Request<State>>::body_json","value":"pub async fn body_json<T: serde::de::DeserializeOwned, '_>(&'_ mut Self)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads and deserialized the entire request body via json.","sig":null,"attributes":[{"value":"/ Reads and deserialized the entire request body via json.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":36864,"byte_end":36924,"line_start":437,"line_end":437,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":36929,"byte_end":36932,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":36937,"byte_end":36949,"line_start":439,"line_end":439,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":36954,"byte_end":36957,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ Any I/O error encountered while reading the body is immediately returned","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":36962,"byte_end":37038,"line_start":441,"line_end":441,"column_start":5,"column_end":81}},{"value":"/ as an `Err`.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":37043,"byte_end":37059,"line_start":442,"line_end":442,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":37064,"byte_end":37067,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ If the body cannot be interpreted as valid json for the target type `T`,","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":37072,"byte_end":37148,"line_start":444,"line_end":444,"column_start":5,"column_end":81}},{"value":"/ an `Err` is returned.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":37153,"byte_end":37178,"line_start":445,"line_end":445,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":38375,"byte_end":38384,"line_start":483,"line_end":483,"column_start":18,"column_end":27},"name":"body_form","qualname":"<Request<State>>::body_form","value":"pub async fn body_form<T: serde::de::DeserializeOwned, '_>(&'_ mut Self)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Parse the request body as a form.","sig":null,"attributes":[{"value":"/ Parse the request body as a form.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":37345,"byte_end":37382,"line_start":451,"line_end":451,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":37387,"byte_end":37390,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":37395,"byte_end":37406,"line_start":453,"line_end":453,"column_start":5,"column_end":16}},{"value":"/ # fn main() -> Result<(), std::io::Error> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":37411,"byte_end":37492,"line_start":454,"line_end":454,"column_start":5,"column_end":86}},{"value":"/ use tide::prelude::*;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":37497,"byte_end":37522,"line_start":455,"line_end":455,"column_start":5,"column_end":30}},{"value":"/ let mut app = tide::new();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":37527,"byte_end":37557,"line_start":456,"line_end":456,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":37562,"byte_end":37565,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":37570,"byte_end":37596,"line_start":458,"line_end":458,"column_start":5,"column_end":31}},{"value":"/ struct Animal {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":37601,"byte_end":37620,"line_start":459,"line_end":459,"column_start":5,"column_end":24}},{"value":"/   name: String,","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":37625,"byte_end":37644,"line_start":460,"line_end":460,"column_start":5,"column_end":24}},{"value":"/   legs: u8","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":37649,"byte_end":37663,"line_start":461,"line_end":461,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":37668,"byte_end":37673,"line_start":462,"line_end":462,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":37678,"byte_end":37681,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ app.at(\"/\").post(|mut req: tide::Request<()>| async move {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":37686,"byte_end":37748,"line_start":464,"line_end":464,"column_start":5,"column_end":67}},{"value":"/     let animal: Animal = req.body_form().await?;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":37753,"byte_end":37805,"line_start":465,"line_end":465,"column_start":5,"column_end":57}},{"value":"/     Ok(format!(","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":37810,"byte_end":37829,"line_start":466,"line_end":466,"column_start":5,"column_end":24}},{"value":"/         \"hello, {}! i've put in an order for {} shoes\",","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":37834,"byte_end":37893,"line_start":467,"line_end":467,"column_start":5,"column_end":64}},{"value":"/         animal.name, animal.legs","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":37898,"byte_end":37934,"line_start":468,"line_end":468,"column_start":5,"column_end":41}},{"value":"/     ))","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":37939,"byte_end":37949,"line_start":469,"line_end":469,"column_start":5,"column_end":15}},{"value":"/ });","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":37954,"byte_end":37961,"line_start":470,"line_end":470,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":37966,"byte_end":37969,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ # if false {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":37974,"byte_end":37990,"line_start":472,"line_end":472,"column_start":5,"column_end":21}},{"value":"/ app.listen(\"localhost:8000\").await?;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":37995,"byte_end":38035,"line_start":473,"line_end":473,"column_start":5,"column_end":45}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":38040,"byte_end":38047,"line_start":474,"line_end":474,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":38052,"byte_end":38055,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ // $ curl localhost:8000/orders/shoes -d \"name=chashu&legs=4\"","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":38060,"byte_end":38125,"line_start":476,"line_end":476,"column_start":5,"column_end":70}},{"value":"/ // hello, chashu! i've put in an order for 4 shoes","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":38130,"byte_end":38184,"line_start":477,"line_end":477,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":38189,"byte_end":38192,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ // $ curl localhost:8000/orders/shoes -d \"name=mary%20millipede&legs=750\"","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":38197,"byte_end":38274,"line_start":479,"line_end":479,"column_start":5,"column_end":82}},{"value":"/ // number too large to fit in target type","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":38279,"byte_end":38324,"line_start":480,"line_end":480,"column_start":5,"column_end":50}},{"value":"/ # Ok(()) })}","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":38329,"byte_end":38345,"line_start":481,"line_end":481,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":38350,"byte_end":38357,"line_start":482,"line_end":482,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":38629,"byte_end":38635,"line_start":491,"line_end":491,"column_start":12,"column_end":18},"name":"cookie","qualname":"<Request<State>>::cookie","value":"pub fn cookie(&Self, &str) -> Option<Cookie>","parent":null,"children":[],"decl_id":null,"docs":" returns a `Cookie` by name of the cookie.\n","sig":null,"attributes":[{"value":"/ returns a `Cookie` by name of the cookie.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":38524,"byte_end":38569,"line_start":488,"line_end":488,"column_start":5,"column_end":50}},{"value":"cfg(feature = \"cookies\")","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":38574,"byte_end":38601,"line_start":489,"line_end":489,"column_start":5,"column_end":32}},{"value":"must_use","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":38606,"byte_end":38617,"line_start":490,"line_end":490,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":39042,"byte_end":39049,"line_start":503,"line_end":503,"column_start":12,"column_end":19},"name":"session","qualname":"<Request<State>>::session","value":"pub fn session(&Self) -> &crate::sessions::Session","parent":null,"children":[],"decl_id":null,"docs":" Retrieves a reference to the current session.","sig":null,"attributes":[{"value":"/ Retrieves a reference to the current session.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":38820,"byte_end":38869,"line_start":496,"line_end":496,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":38874,"byte_end":38877,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":38882,"byte_end":38894,"line_start":498,"line_end":498,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":38899,"byte_end":38902,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ This method will panic if a tide::sessions:SessionMiddleware has not","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":38907,"byte_end":38979,"line_start":500,"line_end":500,"column_start":5,"column_end":77}},{"value":"/ been run.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":38984,"byte_end":38997,"line_start":501,"line_end":501,"column_start":5,"column_end":18}},{"value":"cfg(feature = \"sessions\")","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":39002,"byte_end":39030,"line_start":502,"line_end":502,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":39492,"byte_end":39503,"line_start":516,"line_end":516,"column_start":12,"column_end":23},"name":"session_mut","qualname":"<Request<State>>::session_mut","value":"pub fn session_mut(&mut Self) -> &mut crate::sessions::Session","parent":null,"children":[],"decl_id":null,"docs":" Retrieves a mutable reference to the current session.","sig":null,"attributes":[{"value":"/ Retrieves a mutable reference to the current session.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":39262,"byte_end":39319,"line_start":509,"line_end":509,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":39324,"byte_end":39327,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":39332,"byte_end":39344,"line_start":511,"line_end":511,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":39349,"byte_end":39352,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ This method will panic if a tide::sessions:SessionMiddleware has not","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":39357,"byte_end":39429,"line_start":513,"line_end":513,"column_start":5,"column_end":77}},{"value":"/ been run.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":39434,"byte_end":39447,"line_start":514,"line_end":514,"column_start":5,"column_end":18}},{"value":"cfg(feature = \"sessions\")","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":39452,"byte_end":39480,"line_start":515,"line_end":515,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":40034,"byte_end":40037,"line_start":528,"line_end":528,"column_start":12,"column_end":15},"name":"len","qualname":"<Request<State>>::len","value":"pub fn len(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the body stream, if it has been set.","sig":null,"attributes":[{"value":"/ Get the length of the body stream, if it has been set.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":39700,"byte_end":39758,"line_start":522,"line_end":522,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":39763,"byte_end":39766,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ This value is set when passing a fixed-size object into as the body. E.g. a string, or a","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":39771,"byte_end":39863,"line_start":524,"line_end":524,"column_start":5,"column_end":97}},{"value":"/ buffer. Consumers of this API should check this value to decide whether to use `Chunked`","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":39868,"byte_end":39960,"line_start":525,"line_end":525,"column_start":5,"column_end":97}},{"value":"/ encoding, or set the response length.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":39965,"byte_end":40006,"line_start":526,"line_end":526,"column_start":5,"column_end":46}},{"value":"must_use","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":40011,"byte_end":40022,"line_start":527,"line_end":527,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":40216,"byte_end":40224,"line_start":534,"line_end":534,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Request<State>>::is_empty","value":"pub fn is_empty(&Self) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the request has a set body stream length of zero, `false` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the request has a set body stream length of zero, `false` otherwise.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":40098,"byte_end":40188,"line_start":532,"line_end":532,"column_start":5,"column_end":95}},{"value":"must_use","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":40193,"byte_end":40204,"line_start":533,"line_end":533,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1777},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":44445,"byte_end":44453,"line_start":18,"line_end":18,"column_start":12,"column_end":20},"name":"Response","qualname":"::response::Response","value":"Response {  }","parent":null,"children":[{"krate":0,"index":1778},{"krate":0,"index":1779},{"krate":0,"index":1780}],"decl_id":null,"docs":" An HTTP response\n","sig":null,"attributes":[{"value":"/ An HTTP response","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":44396,"byte_end":44416,"line_start":16,"line_end":16,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":44675,"byte_end":44678,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<Response>::new","value":"pub fn new<S>(S) -> Self where S: TryInto<StatusCode>, S::Error: Debug","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance.\n","sig":null,"attributes":[{"value":"/ Create a new instance.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":44621,"byte_end":44647,"line_start":26,"line_end":26,"column_start":5,"column_end":31}},{"value":"must_use","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":44652,"byte_end":44663,"line_start":27,"line_end":27,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":45737,"byte_end":45744,"line_start":60,"line_end":60,"column_start":12,"column_end":19},"name":"builder","qualname":"<Response>::builder","value":"pub fn builder<S>(S) -> ResponseBuilder where S: TryInto<StatusCode>,\nS::Error: Debug","parent":null,"children":[],"decl_id":null,"docs":" Begin a chained response builder. For more details, see [ResponseBuilder](crate::ResponseBuilder)","sig":null,"attributes":[{"value":"/ Begin a chained response builder. For more details, see [ResponseBuilder](crate::ResponseBuilder)","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":44934,"byte_end":45035,"line_start":41,"line_end":41,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":45040,"byte_end":45043,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":45048,"byte_end":45062,"line_start":43,"line_end":43,"column_start":5,"column_end":19}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":45067,"byte_end":45078,"line_start":44,"line_end":44,"column_start":5,"column_end":16}},{"value":"/ # use tide::{StatusCode, Response, http::mime};","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":45083,"byte_end":45134,"line_start":45,"line_end":45,"column_start":5,"column_end":56}},{"value":"/ # async_std::task::block_on(async move {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":45139,"byte_end":45183,"line_start":46,"line_end":46,"column_start":5,"column_end":49}},{"value":"/ let mut response = Response::builder(203)","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":45188,"byte_end":45233,"line_start":47,"line_end":47,"column_start":5,"column_end":50}},{"value":"/     .body(\"<html>hi</html>\")","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":45238,"byte_end":45270,"line_start":48,"line_end":48,"column_start":5,"column_end":37}},{"value":"/     .header(\"custom-header\", \"value\")","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":45275,"byte_end":45316,"line_start":49,"line_end":49,"column_start":5,"column_end":46}},{"value":"/     .content_type(mime::HTML)","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":45321,"byte_end":45354,"line_start":50,"line_end":50,"column_start":5,"column_end":38}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":45359,"byte_end":45376,"line_start":51,"line_end":51,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":45381,"byte_end":45384,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(response.take_body().into_string().await.unwrap(), \"<html>hi</html>\");","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":45389,"byte_end":45474,"line_start":53,"line_end":53,"column_start":5,"column_end":90}},{"value":"/ assert_eq!(response.status(), StatusCode::NonAuthoritativeInformation);","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":45479,"byte_end":45554,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(response[\"custom-header\"], \"value\");","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":45559,"byte_end":45610,"line_start":55,"line_end":55,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(response[\"content-type\"], \"text/html;charset=utf-8\");","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":45615,"byte_end":45683,"line_start":56,"line_end":56,"column_start":5,"column_end":73}},{"value":"/ # });","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":45688,"byte_end":45697,"line_start":57,"line_end":57,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":45702,"byte_end":45709,"line_start":58,"line_end":58,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":45714,"byte_end":45725,"line_start":59,"line_end":59,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":45960,"byte_end":45966,"line_start":70,"line_end":70,"column_start":12,"column_end":18},"name":"status","qualname":"<Response>::status","value":"pub fn status(&Self) -> crate::StatusCode","parent":null,"children":[],"decl_id":null,"docs":" Returns the http status code.\n","sig":null,"attributes":[{"value":"/ Returns the http status code.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":45899,"byte_end":45932,"line_start":68,"line_end":68,"column_start":5,"column_end":38}},{"value":"must_use","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":45937,"byte_end":45948,"line_start":69,"line_end":69,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":46868,"byte_end":46878,"line_start":94,"line_end":94,"column_start":12,"column_end":22},"name":"set_status","qualname":"<Response>::set_status","value":"pub fn set_status<S>(&mut Self, S) where S: TryInto<StatusCode>,\nS::Error: Debug","parent":null,"children":[],"decl_id":null,"docs":" Set the http status code.","sig":null,"attributes":[{"value":"/ Set the http status code.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":46034,"byte_end":46063,"line_start":74,"line_end":74,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":46068,"byte_end":46071,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":46076,"byte_end":46090,"line_start":76,"line_end":76,"column_start":5,"column_end":19}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":46095,"byte_end":46106,"line_start":77,"line_end":77,"column_start":5,"column_end":16}},{"value":"/ # use tide::{StatusCode, Response};","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":46111,"byte_end":46150,"line_start":78,"line_end":78,"column_start":5,"column_end":44}},{"value":"/ let mut response = Response::new(StatusCode::Ok);","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":46155,"byte_end":46208,"line_start":79,"line_end":79,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":46213,"byte_end":46216,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ response.set_status(418); // the status can be a valid u16 http status code","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":46221,"byte_end":46300,"line_start":81,"line_end":81,"column_start":5,"column_end":84}},{"value":"/ assert_eq!(response.status(), StatusCode::ImATeapot);","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":46305,"byte_end":46362,"line_start":82,"line_end":82,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":46367,"byte_end":46370,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ response.set_status(StatusCode::NonAuthoritativeInformation); // or a tide::StatusCode","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":46375,"byte_end":46465,"line_start":84,"line_end":84,"column_start":5,"column_end":95}},{"value":"/ assert_eq!(response.status(), StatusCode::NonAuthoritativeInformation);","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":46470,"byte_end":46545,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":46550,"byte_end":46557,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":46562,"byte_end":46574,"line_start":87,"line_end":87,"column_start":5,"column_end":17}},{"value":"/ `set_status` will panic if the status argument cannot be successfully converted into a StatusCode.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":46579,"byte_end":46681,"line_start":88,"line_end":88,"column_start":5,"column_end":107}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":46686,"byte_end":46689,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":46694,"byte_end":46713,"line_start":90,"line_end":90,"column_start":5,"column_end":24}},{"value":"/ # use tide::Response;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":46718,"byte_end":46743,"line_start":91,"line_end":91,"column_start":5,"column_end":30}},{"value":"/ Response::new(200).set_status(210); // this is not an established status code and will panic","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":46748,"byte_end":46844,"line_start":92,"line_end":92,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":46849,"byte_end":46856,"line_start":93,"line_end":93,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":47205,"byte_end":47208,"line_start":108,"line_end":108,"column_start":12,"column_end":15},"name":"len","qualname":"<Response>::len","value":"pub fn len(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the body.\n","sig":null,"attributes":[{"value":"/ Get the length of the body.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":47146,"byte_end":47177,"line_start":106,"line_end":106,"column_start":5,"column_end":36}},{"value":"must_use","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":47182,"byte_end":47193,"line_start":107,"line_end":107,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":47329,"byte_end":47337,"line_start":114,"line_end":114,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Response>::is_empty","value":"pub fn is_empty(&Self) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Checks if the body is empty.\n","sig":null,"attributes":[{"value":"/ Checks if the body is empty.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":47269,"byte_end":47301,"line_start":112,"line_end":112,"column_start":5,"column_end":37}},{"value":"must_use","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":47306,"byte_end":47317,"line_start":113,"line_end":113,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":47460,"byte_end":47466,"line_start":120,"line_end":120,"column_start":12,"column_end":18},"name":"header","qualname":"<Response>::header","value":"pub fn header<impl Into<HeaderName>: Into<HeaderName>>(&Self,\nimpl Into<HeaderName>) -> Option<&HeaderValues>","parent":null,"children":[],"decl_id":null,"docs":" Get an HTTP header.\n","sig":null,"attributes":[{"value":"/ Get an HTTP header.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":47409,"byte_end":47432,"line_start":118,"line_end":118,"column_start":5,"column_end":28}},{"value":"must_use","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":47437,"byte_end":47448,"line_start":119,"line_end":119,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":47630,"byte_end":47640,"line_start":126,"line_end":126,"column_start":12,"column_end":22},"name":"header_mut","qualname":"<Response>::header_mut","value":"pub fn header_mut<impl Into<HeaderName>: Into<HeaderName>>(&mut Self,\nimpl Into<HeaderName>) -> Option<&mut HeaderValues>","parent":null,"children":[],"decl_id":null,"docs":" Get an HTTP header mutably.\n","sig":null,"attributes":[{"value":"/ Get an HTTP header mutably.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":47571,"byte_end":47602,"line_start":124,"line_end":124,"column_start":5,"column_end":36}},{"value":"must_use","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":47607,"byte_end":47618,"line_start":125,"line_end":125,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":47789,"byte_end":47802,"line_start":131,"line_end":131,"column_start":12,"column_end":25},"name":"remove_header","qualname":"<Response>::remove_header","value":"pub fn remove_header<impl Into<HeaderName>: Into<HeaderName>>(&mut Self,\nimpl Into<HeaderName>) -> Option<HeaderValues>","parent":null,"children":[],"decl_id":null,"docs":" Remove a header.\n","sig":null,"attributes":[{"value":"/ Remove a header.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":47757,"byte_end":47777,"line_start":130,"line_end":130,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":47955,"byte_end":47968,"line_start":136,"line_end":136,"column_start":12,"column_end":25},"name":"insert_header","qualname":"<Response>::insert_header","value":"pub fn insert_header<impl Into<HeaderName>: Into<HeaderName>,\nimpl ToHeaderValues: ToHeaderValues>(&mut Self, impl Into<HeaderName>,\nimpl ToHeaderValues)","parent":null,"children":[],"decl_id":null,"docs":" Insert an HTTP header.\n","sig":null,"attributes":[{"value":"/ Insert an HTTP header.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":47917,"byte_end":47943,"line_start":135,"line_end":135,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":48131,"byte_end":48144,"line_start":141,"line_end":141,"column_start":12,"column_end":25},"name":"append_header","qualname":"<Response>::append_header","value":"pub fn append_header<impl Into<HeaderName>: Into<HeaderName>,\nimpl ToHeaderValues: ToHeaderValues>(&mut Self, impl Into<HeaderName>,\nimpl ToHeaderValues)","parent":null,"children":[],"decl_id":null,"docs":" Append an HTTP header.\n","sig":null,"attributes":[{"value":"/ Append an HTTP header.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":48093,"byte_end":48119,"line_start":140,"line_end":140,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":48358,"byte_end":48362,"line_start":147,"line_end":147,"column_start":12,"column_end":16},"name":"iter","qualname":"<Response>::iter","value":"pub fn iter(&Self) -> headers::Iter","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all header pairs in arbitrary order.\n","sig":null,"attributes":[{"value":"/ An iterator visiting all header pairs in arbitrary order.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":48269,"byte_end":48330,"line_start":145,"line_end":145,"column_start":5,"column_end":66}},{"value":"must_use","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":48335,"byte_end":48346,"line_start":146,"line_end":146,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":48564,"byte_end":48572,"line_start":154,"line_end":154,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Response>::iter_mut","value":"pub fn iter_mut(&mut Self) -> headers::IterMut","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all header pairs in arbitrary order, with mutable references to the\n values.\n","sig":null,"attributes":[{"value":"/ An iterator visiting all header pairs in arbitrary order, with mutable references to the","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":48428,"byte_end":48520,"line_start":151,"line_end":151,"column_start":5,"column_end":97}},{"value":"/ values.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":48525,"byte_end":48536,"line_start":152,"line_end":152,"column_start":5,"column_end":16}},{"value":"must_use","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":48541,"byte_end":48552,"line_start":153,"line_end":153,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":48738,"byte_end":48750,"line_start":160,"line_end":160,"column_start":12,"column_end":24},"name":"header_names","qualname":"<Response>::header_names","value":"pub fn header_names(&Self) -> headers::Names","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all header names in arbitrary order.\n","sig":null,"attributes":[{"value":"/ An iterator visiting all header names in arbitrary order.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":48649,"byte_end":48710,"line_start":158,"line_end":158,"column_start":5,"column_end":66}},{"value":"must_use","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":48715,"byte_end":48726,"line_start":159,"line_end":159,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":48915,"byte_end":48928,"line_start":166,"line_end":166,"column_start":12,"column_end":25},"name":"header_values","qualname":"<Response>::header_values","value":"pub fn header_values(&Self) -> headers::Values","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all header values in arbitrary order.\n","sig":null,"attributes":[{"value":"/ An iterator visiting all header values in arbitrary order.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":48825,"byte_end":48887,"line_start":164,"line_end":164,"column_start":5,"column_end":67}},{"value":"must_use","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":48892,"byte_end":48903,"line_start":165,"line_end":165,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":49252,"byte_end":49264,"line_start":176,"line_end":176,"column_start":12,"column_end":24},"name":"content_type","qualname":"<Response>::content_type","value":"pub fn content_type(&Self) -> Option<Mime>","parent":null,"children":[],"decl_id":null,"docs":" Get the response content type as a `Mime`.","sig":null,"attributes":[{"value":"/ Get the response content type as a `Mime`.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":49005,"byte_end":49051,"line_start":170,"line_end":170,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":49056,"byte_end":49059,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ This gets the request `Content-Type` header.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":49064,"byte_end":49112,"line_start":172,"line_end":172,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":49117,"byte_end":49120,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ [Read more on MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types)","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":49125,"byte_end":49224,"line_start":174,"line_end":174,"column_start":5,"column_end":104}},{"value":"must_use","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":49229,"byte_end":49240,"line_start":175,"line_end":175,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":49567,"byte_end":49583,"line_start":185,"line_end":185,"column_start":12,"column_end":28},"name":"set_content_type","qualname":"<Response>::set_content_type","value":"pub fn set_content_type<impl Into<Mime>: Into<Mime>>(&mut Self,\nimpl Into<Mime>)","parent":null,"children":[],"decl_id":null,"docs":" Set the response content type from a `MIME`.","sig":null,"attributes":[{"value":"/ Set the response content type from a `MIME`.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":49333,"byte_end":49381,"line_start":180,"line_end":180,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":49386,"byte_end":49389,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ This sets the response `Content-Type` header.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":49394,"byte_end":49443,"line_start":182,"line_end":182,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":49448,"byte_end":49451,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ [Read more on MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types)","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":49456,"byte_end":49555,"line_start":184,"line_end":184,"column_start":5,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":49715,"byte_end":49723,"line_start":190,"line_end":190,"column_start":12,"column_end":20},"name":"set_body","qualname":"<Response>::set_body","value":"pub fn set_body<impl Into<Body>: Into<Body>>(&mut Self, impl Into<Body>)","parent":null,"children":[],"decl_id":null,"docs":" Set the body reader.\n","sig":null,"attributes":[{"value":"/ Set the body reader.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":49679,"byte_end":49703,"line_start":189,"line_end":189,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":50061,"byte_end":50070,"line_start":200,"line_end":200,"column_start":12,"column_end":21},"name":"take_body","qualname":"<Response>::take_body","value":"pub fn take_body(&mut Self) -> Body","parent":null,"children":[],"decl_id":null,"docs":" Take the response body as a `Body`.","sig":null,"attributes":[{"value":"/ Take the response body as a `Body`.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":49804,"byte_end":49843,"line_start":194,"line_end":194,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":49848,"byte_end":49851,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ This method can be called after the body has already been taken or read,","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":49856,"byte_end":49932,"line_start":196,"line_end":196,"column_start":5,"column_end":81}},{"value":"/ but will return an empty `Body`.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":49937,"byte_end":49973,"line_start":197,"line_end":197,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":49978,"byte_end":49981,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ Useful for adjusting the whole body, such as in middleware.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":49986,"byte_end":50049,"line_start":199,"line_end":199,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":50859,"byte_end":50868,"line_start":228,"line_end":228,"column_start":12,"column_end":21},"name":"swap_body","qualname":"<Response>::swap_body","value":"pub fn swap_body(&mut Self, &mut Body)","parent":null,"children":[],"decl_id":null,"docs":" Swaps the value of the body with another body, without deinitializing\n either one.","sig":null,"attributes":[{"value":"/ Swaps the value of the body with another body, without deinitializing","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":50132,"byte_end":50205,"line_start":204,"line_end":204,"column_start":5,"column_end":78}},{"value":"/ either one.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":50210,"byte_end":50225,"line_start":205,"line_end":205,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":50230,"byte_end":50233,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":50238,"byte_end":50252,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":50257,"byte_end":50260,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":50265,"byte_end":50272,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/ # use async_std::io::prelude::*;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":50277,"byte_end":50313,"line_start":210,"line_end":210,"column_start":5,"column_end":41}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":50318,"byte_end":50401,"line_start":211,"line_end":211,"column_start":5,"column_end":88}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":50406,"byte_end":50445,"line_start":212,"line_end":212,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":50450,"byte_end":50455,"line_start":213,"line_end":213,"column_start":5,"column_end":10}},{"value":"/ use tide::Response;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":50460,"byte_end":50483,"line_start":214,"line_end":214,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":50488,"byte_end":50491,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ let mut req = Response::new(200);","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":50496,"byte_end":50533,"line_start":216,"line_end":216,"column_start":5,"column_end":42}},{"value":"/ req.set_body(\"Hello, Nori!\");","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":50538,"byte_end":50571,"line_start":217,"line_end":217,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":50576,"byte_end":50579,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ let mut body = \"Hello, Chashu!\".into();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":50584,"byte_end":50627,"line_start":219,"line_end":219,"column_start":5,"column_end":48}},{"value":"/ req.swap_body(&mut body);","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":50632,"byte_end":50661,"line_start":220,"line_end":220,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":50666,"byte_end":50669,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ let mut string = String::new();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":50674,"byte_end":50709,"line_start":222,"line_end":222,"column_start":5,"column_end":40}},{"value":"/ body.read_to_string(&mut string).await?;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":50714,"byte_end":50758,"line_start":223,"line_end":223,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(&string, \"Hello, Nori!\");","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":50763,"byte_end":50803,"line_start":224,"line_end":224,"column_start":5,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":50808,"byte_end":50813,"line_start":225,"line_end":225,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":50818,"byte_end":50835,"line_start":226,"line_end":226,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":50840,"byte_end":50847,"line_start":227,"line_end":227,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":50991,"byte_end":51004,"line_start":233,"line_end":233,"column_start":12,"column_end":25},"name":"insert_cookie","qualname":"<Response>::insert_cookie","value":"pub fn insert_cookie(&mut Self, Cookie)","parent":null,"children":[],"decl_id":null,"docs":" Insert cookie in the cookie jar.\n","sig":null,"attributes":[{"value":"/ Insert cookie in the cookie jar.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":50943,"byte_end":50979,"line_start":232,"line_end":232,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":52322,"byte_end":52335,"line_start":257,"line_end":257,"column_start":12,"column_end":25},"name":"remove_cookie","qualname":"<Response>::remove_cookie","value":"pub fn remove_cookie(&mut Self, Cookie)","parent":null,"children":[],"decl_id":null,"docs":" Removes the cookie. This instructs the `CookiesMiddleware` to send a cookie with empty value\n in the response.","sig":null,"attributes":[{"value":"/ Removes the cookie. This instructs the `CookiesMiddleware` to send a cookie with empty value","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":51115,"byte_end":51211,"line_start":237,"line_end":237,"column_start":5,"column_end":101}},{"value":"/ in the response.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":51216,"byte_end":51236,"line_start":238,"line_end":238,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":51241,"byte_end":51244,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ ## Warning","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":51249,"byte_end":51263,"line_start":240,"line_end":240,"column_start":5,"column_end":19}},{"value":"/ Take care when calling this function with a cookie that was returned by","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":51268,"byte_end":51343,"line_start":241,"line_end":241,"column_start":5,"column_end":80}},{"value":"/ [`Request::cookie`](crate::Request::cookie).  As per [section 5.3 step 11 of RFC 6265], a new","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":51348,"byte_end":51445,"line_start":242,"line_end":242,"column_start":5,"column_end":102}},{"value":"/ cookie is only treated as the same as an old one if it has a matching name, domain and","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":51450,"byte_end":51540,"line_start":243,"line_end":243,"column_start":5,"column_end":95}},{"value":"/ path.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":51545,"byte_end":51554,"line_start":244,"line_end":244,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":51559,"byte_end":51562,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ The domain and path are not sent to the server on subsequent HTTP requests, so if a cookie","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":51567,"byte_end":51661,"line_start":246,"line_end":246,"column_start":5,"column_end":99}},{"value":"/ was originally set with a domain and/or path, calling this function on a cookie with the","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":51666,"byte_end":51758,"line_start":247,"line_end":247,"column_start":5,"column_end":97}},{"value":"/ same name but with either a different, or no, domain and/or path will lead to us sending an","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":51763,"byte_end":51858,"line_start":248,"line_end":248,"column_start":5,"column_end":100}},{"value":"/ empty cookie that the user agent will treat as unrelated to the original one, and will thus","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":51863,"byte_end":51958,"line_start":249,"line_end":249,"column_start":5,"column_end":100}},{"value":"/ not remove the old one.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":51963,"byte_end":51990,"line_start":250,"line_end":250,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":51995,"byte_end":51998,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ To avoid this you can manually set the [domain](Cookie::set_domain) and","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":52003,"byte_end":52078,"line_start":252,"line_end":252,"column_start":5,"column_end":80}},{"value":"/ [path](Cookie::set_path) as necessary after retrieving the cookie using","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":52083,"byte_end":52158,"line_start":253,"line_end":253,"column_start":5,"column_end":80}},{"value":"/ [`Request::cookie`](crate::Request::cookie).","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":52163,"byte_end":52211,"line_start":254,"line_end":254,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":52216,"byte_end":52219,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ [section 5.3 step 11 of RFC 6265]: https://tools.ietf.org/html/rfc6265#section-5.3","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":52224,"byte_end":52310,"line_start":256,"line_end":256,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":52535,"byte_end":52540,"line_start":262,"line_end":262,"column_start":12,"column_end":17},"name":"error","qualname":"<Response>::error","value":"pub fn error(&Self) -> Option<&Error>","parent":null,"children":[],"decl_id":null,"docs":" Returns an optional reference to an error if the response contains one.\n","sig":null,"attributes":[{"value":"/ Returns an optional reference to an error if the response contains one.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":52448,"byte_end":52523,"line_start":261,"line_end":261,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":53374,"byte_end":53388,"line_start":289,"line_end":289,"column_start":12,"column_end":26},"name":"downcast_error","qualname":"<Response>::downcast_error","value":"pub fn downcast_error<E>(&Self) -> Option<&E> where E: Display + Debug +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the original error associated with this response if there is one and\n if it can be downcast to the specified type.","sig":null,"attributes":[{"value":"/ Returns a reference to the original error associated with this response if there is one and","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":52607,"byte_end":52702,"line_start":266,"line_end":266,"column_start":5,"column_end":100}},{"value":"/ if it can be downcast to the specified type.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":52707,"byte_end":52755,"line_start":267,"line_end":267,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":52760,"byte_end":52763,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":52768,"byte_end":52781,"line_start":269,"line_end":269,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":52786,"byte_end":52789,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":52794,"byte_end":52801,"line_start":271,"line_end":271,"column_start":5,"column_end":12}},{"value":"/ # use std::io::ErrorKind;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":52806,"byte_end":52835,"line_start":272,"line_end":272,"column_start":5,"column_end":34}},{"value":"/ # use async_std::task::block_on;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":52840,"byte_end":52876,"line_start":273,"line_end":273,"column_start":5,"column_end":41}},{"value":"/ # fn main() -> Result<(), std::io::Error> { block_on(async {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":52881,"byte_end":52945,"line_start":274,"line_end":274,"column_start":5,"column_end":69}},{"value":"/ #","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":52950,"byte_end":52955,"line_start":275,"line_end":275,"column_start":5,"column_end":10}},{"value":"/ use tide::Response;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":52960,"byte_end":52983,"line_start":276,"line_end":276,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":52988,"byte_end":52991,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ let error = std::io::Error::new(ErrorKind::Other, \"oh no!\");","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":52996,"byte_end":53060,"line_start":278,"line_end":278,"column_start":5,"column_end":69}},{"value":"/ let error = tide::http::Error::from(error);","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":53065,"byte_end":53112,"line_start":279,"line_end":279,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":53117,"byte_end":53120,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ let mut res = Response::new(400);","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":53125,"byte_end":53162,"line_start":281,"line_end":281,"column_start":5,"column_end":42}},{"value":"/ res.set_error(error);","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":53167,"byte_end":53192,"line_start":282,"line_end":282,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":53197,"byte_end":53200,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ if let Some(err) = res.downcast_error::<std::io::Error>() {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":53205,"byte_end":53268,"line_start":284,"line_end":284,"column_start":5,"column_end":68}},{"value":"/   // Do something with the `std::io::Error`.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":53273,"byte_end":53321,"line_start":285,"line_end":285,"column_start":5,"column_end":53}},{"value":"/ }","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":53326,"byte_end":53331,"line_start":286,"line_end":286,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":53336,"byte_end":53348,"line_start":287,"line_end":287,"column_start":5,"column_end":17}},{"value":"/ # })}","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":53353,"byte_end":53362,"line_start":288,"line_end":288,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":527},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":53626,"byte_end":53636,"line_start":297,"line_end":297,"column_start":12,"column_end":22},"name":"take_error","qualname":"<Response>::take_error","value":"pub fn take_error(&mut Self) -> Option<Error>","parent":null,"children":[],"decl_id":null,"docs":" Takes the error from the response if one exists, replacing it with `None`.\n","sig":null,"attributes":[{"value":"/ Takes the error from the response if one exists, replacing it with `None`.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":53536,"byte_end":53614,"line_start":296,"line_end":296,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":53960,"byte_end":53969,"line_start":305,"line_end":305,"column_start":12,"column_end":21},"name":"set_error","qualname":"<Response>::set_error","value":"pub fn set_error<impl Into<Error>: Into<Error>>(&mut Self, impl Into<Error>)","parent":null,"children":[],"decl_id":null,"docs":" Sets the response's error, overwriting any existing error.","sig":null,"attributes":[{"value":"/ Sets the response's error, overwriting any existing error.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":53704,"byte_end":53766,"line_start":301,"line_end":301,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":53771,"byte_end":53774,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ This is particularly useful for middleware which would like to notify further","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":53779,"byte_end":53860,"line_start":303,"line_end":303,"column_start":5,"column_end":86}},{"value":"/ middleware that an error has occured without overwriting the existing response.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":53865,"byte_end":53948,"line_start":304,"line_end":304,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":54130,"byte_end":54133,"line_start":311,"line_end":311,"column_start":12,"column_end":15},"name":"ext","qualname":"<Response>::ext","value":"pub fn ext<T: Send + Sync + 'static>(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get a response scoped extension value.\n","sig":null,"attributes":[{"value":"/ Get a response scoped extension value.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":54060,"byte_end":54102,"line_start":309,"line_end":309,"column_start":5,"column_end":47}},{"value":"must_use","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":54107,"byte_end":54118,"line_start":310,"line_end":310,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":54277,"byte_end":54287,"line_start":316,"line_end":316,"column_start":12,"column_end":22},"name":"insert_ext","qualname":"<Response>::insert_ext","value":"pub fn insert_ext<T: Send + Sync + 'static>(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Set a response scoped extension value.\n","sig":null,"attributes":[{"value":"/ Set a response scoped extension value.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":54223,"byte_end":54265,"line_start":315,"line_end":315,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":54501,"byte_end":54509,"line_start":322,"line_end":322,"column_start":12,"column_end":20},"name":"from_res","qualname":"<Response>::from_res","value":"pub fn from_res<T>(T) -> Self where T: Into<http_types::Response>","parent":null,"children":[],"decl_id":null,"docs":" Create a `tide::Response` from a type that can be converted into an\n `http_types::Response`.\n","sig":null,"attributes":[{"value":"/ Create a `tide::Response` from a type that can be converted into an","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":54386,"byte_end":54457,"line_start":320,"line_end":320,"column_start":5,"column_end":76}},{"value":"/ `http_types::Response`.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":54462,"byte_end":54489,"line_start":321,"line_end":321,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":1783},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":59419,"byte_end":59434,"line_start":28,"line_end":28,"column_start":12,"column_end":27},"name":"ResponseBuilder","qualname":"::response_builder::ResponseBuilder","value":"","parent":null,"children":[],"decl_id":null,"docs":" Response Builder","sig":null,"attributes":[{"value":"/ Response Builder","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":58667,"byte_end":58687,"line_start":8,"line_end":8,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":58688,"byte_end":58691,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Provides an ergonomic way to chain the creation of a response. This is generally accessed through [`Response::builder`](crate::Response::builder)","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":58692,"byte_end":58841,"line_start":10,"line_end":10,"column_start":1,"column_end":150}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":58842,"byte_end":58845,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":58846,"byte_end":58859,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":58860,"byte_end":58871,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/ # use tide::{StatusCode, Response, http::mime};","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":58872,"byte_end":58923,"line_start":14,"line_end":14,"column_start":1,"column_end":52}},{"value":"/ # async_std::task::block_on(async move {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":58924,"byte_end":58968,"line_start":15,"line_end":15,"column_start":1,"column_end":45}},{"value":"/ let mut response = Response::builder(203)","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":58969,"byte_end":59014,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/     .body(\"body\")","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":59015,"byte_end":59036,"line_start":17,"line_end":17,"column_start":1,"column_end":22}},{"value":"/     .content_type(mime::HTML)","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":59037,"byte_end":59070,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/     .header(\"custom-header\", \"value\")","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":59071,"byte_end":59112,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":59113,"byte_end":59130,"line_start":20,"line_end":20,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":59131,"byte_end":59134,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(response.take_body().into_string().await.unwrap(), \"body\");","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":59135,"byte_end":59209,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(response.status(), StatusCode::NonAuthoritativeInformation);","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":59210,"byte_end":59285,"line_start":23,"line_end":23,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(response[\"custom-header\"], \"value\");","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":59286,"byte_end":59337,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(response.content_type(), Some(mime::HTML));","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":59338,"byte_end":59396,"line_start":25,"line_end":25,"column_start":1,"column_end":59}},{"value":"/ # });","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":59397,"byte_end":59406,"line_start":26,"line_end":26,"column_start":1,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":59686,"byte_end":59691,"line_start":40,"line_end":40,"column_start":12,"column_end":17},"name":"build","qualname":"<ResponseBuilder>::build","value":"pub fn build(Self) -> Response","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner Response\n","sig":null,"attributes":[{"value":"/ Returns the inner Response","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":59644,"byte_end":59674,"line_start":39,"line_end":39,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":59992,"byte_end":59998,"line_start":50,"line_end":50,"column_start":12,"column_end":18},"name":"header","qualname":"<ResponseBuilder>::header","value":"pub fn header<impl Into<HeaderName>: Into<HeaderName>,\nimpl ToHeaderValues: ToHeaderValues>(Self, impl Into<HeaderName>,\nimpl ToHeaderValues) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a header on the response.\n ```\n # use tide::Response;\n let response = Response::builder(200).header(\"header-name\", \"header-value\").build();\n assert_eq!(response[\"header-name\"], \"header-value\");\n ```\n","sig":null,"attributes":[{"value":"/ Sets a header on the response.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":59738,"byte_end":59772,"line_start":44,"line_end":44,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":59777,"byte_end":59784,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ # use tide::Response;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":59789,"byte_end":59814,"line_start":46,"line_end":46,"column_start":5,"column_end":30}},{"value":"/ let response = Response::builder(200).header(\"header-name\", \"header-value\").build();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":59819,"byte_end":59907,"line_start":47,"line_end":47,"column_start":5,"column_end":93}},{"value":"/ assert_eq!(response[\"header-name\"], \"header-value\");","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":59912,"byte_end":59968,"line_start":48,"line_end":48,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":59973,"byte_end":59980,"line_start":49,"line_end":49,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":60423,"byte_end":60435,"line_start":61,"line_end":61,"column_start":12,"column_end":24},"name":"content_type","qualname":"<ResponseBuilder>::content_type","value":"pub fn content_type<impl Into<Mime>: Into<Mime>>(Self, impl Into<Mime>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the Content-Type header on the response.\n ```\n # use tide::{http::mime, Response};\n let response = Response::builder(200).content_type(mime::HTML).build();\n assert_eq!(response[\"content-type\"], \"text/html;charset=utf-8\");\n ```\n","sig":null,"attributes":[{"value":"/ Sets the Content-Type header on the response.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":60141,"byte_end":60190,"line_start":55,"line_end":55,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":60195,"byte_end":60202,"line_start":56,"line_end":56,"column_start":5,"column_end":12}},{"value":"/ # use tide::{http::mime, Response};","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":60207,"byte_end":60246,"line_start":57,"line_end":57,"column_start":5,"column_end":44}},{"value":"/ let response = Response::builder(200).content_type(mime::HTML).build();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":60251,"byte_end":60326,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(response[\"content-type\"], \"text/html;charset=utf-8\");","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":60331,"byte_end":60399,"line_start":59,"line_end":59,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":60404,"byte_end":60411,"line_start":60,"line_end":60,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":60932,"byte_end":60936,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"body","qualname":"<ResponseBuilder>::body","value":"pub fn body<impl Into<Body>: Into<Body>>(Self, impl Into<Body>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the body of the response.\n ```\n # async_std::task::block_on(async move {\n # use tide::{Response, convert::json};\n let mut response = Response::builder(200).body(json!({ \"any\": \"Into<Body>\"})).build();\n assert_eq!(response.take_body().into_string().await.unwrap(), \"{\\\"any\\\":\\\"Into<Body>\\\"}\");\n # });\n ```\n","sig":null,"attributes":[{"value":"/ Sets the body of the response.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":60558,"byte_end":60592,"line_start":66,"line_end":66,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":60597,"byte_end":60604,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async move {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":60609,"byte_end":60653,"line_start":68,"line_end":68,"column_start":5,"column_end":49}},{"value":"/ # use tide::{Response, convert::json};","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":60658,"byte_end":60700,"line_start":69,"line_end":69,"column_start":5,"column_end":47}},{"value":"/ let mut response = Response::builder(200).body(json!({ \"any\": \"Into<Body>\"})).build();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":60705,"byte_end":60795,"line_start":70,"line_end":70,"column_start":5,"column_end":95}},{"value":"/ assert_eq!(response.take_body().into_string().await.unwrap(), \"{\\\"any\\\":\\\"Into<Body>\\\"}\");","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":60800,"byte_end":60894,"line_start":71,"line_end":71,"column_start":5,"column_end":99}},{"value":"/ # });","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":60899,"byte_end":60908,"line_start":72,"line_end":72,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":60913,"byte_end":60920,"line_start":73,"line_end":73,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":656},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":61858,"byte_end":61863,"line_start":20,"line_end":20,"column_start":12,"column_end":17},"name":"Route","qualname":"::route::Route","value":"Route {  }","parent":null,"children":[{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662}],"decl_id":null,"docs":" A handle to a route.","sig":null,"attributes":[{"value":"/ A handle to a route.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":61444,"byte_end":61468,"line_start":11,"line_end":11,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":61469,"byte_end":61472,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ All HTTP requests are made against resources. After using [`Server::at`] (or","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":61473,"byte_end":61553,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ [`Route::at`]) to establish a route, the `Route` type can be used to","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":61554,"byte_end":61626,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/ establish endpoints for various HTTP methods at that path. Also, using","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":61627,"byte_end":61701,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/ `nest`, it can be used to set up a subrouter.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":61702,"byte_end":61751,"line_start":16,"line_end":16,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":61752,"byte_end":61755,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`Server::at`]: ./struct.Server.html#method.at","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":61756,"byte_end":61806,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":61807,"byte_end":61846,"line_start":19,"line_end":19,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":62512,"byte_end":62514,"line_start":42,"line_end":42,"column_start":12,"column_end":14},"name":"at","qualname":"<Route>::at","value":"pub fn at<'b>(&'b mut Self, &str) -> Route","parent":null,"children":[],"decl_id":null,"docs":" Extend the route with the given `path`.\n","sig":null,"attributes":[{"value":"/ Extend the route with the given `path`.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":62457,"byte_end":62500,"line_start":41,"line_end":41,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":62991,"byte_end":62995,"line_start":63,"line_end":63,"column_start":12,"column_end":16},"name":"path","qualname":"<Route>::path","value":"pub fn path(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Get the current path.\n","sig":null,"attributes":[{"value":"/ Get the current path.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":62938,"byte_end":62963,"line_start":61,"line_end":61,"column_start":5,"column_end":30}},{"value":"must_use","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":62968,"byte_end":62979,"line_start":62,"line_end":62,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":63557,"byte_end":63561,"line_start":80,"line_end":80,"column_start":12,"column_end":16},"name":"with","qualname":"<Route>::with","value":"pub fn with<M>(&mut Self, M) -> &mut Self where M: Middleware<State>","parent":null,"children":[],"decl_id":null,"docs":" Apply the given middleware to the current route.\n","sig":null,"attributes":[{"value":"/ Apply the given middleware to the current route.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":63493,"byte_end":63545,"line_start":79,"line_end":79,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":63934,"byte_end":63950,"line_start":94,"line_end":94,"column_start":12,"column_end":28},"name":"reset_middleware","qualname":"<Route>::reset_middleware","value":"pub fn reset_middleware(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Reset the middleware chain for the current route, if any.\n","sig":null,"attributes":[{"value":"/ Reset the middleware chain for the current route, if any.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":63861,"byte_end":63922,"line_start":93,"line_end":93,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":64135,"byte_end":64139,"line_start":102,"line_end":102,"column_start":12,"column_end":16},"name":"nest","qualname":"<Route>::nest","value":"pub fn nest<InnerState>(&mut Self, crate::Server<InnerState>) -> &mut Self\nwhere State: Clone + Send + Sync + 'static, InnerState: Clone + Send + Sync +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Nest a [`Server`] at the current path.","sig":null,"attributes":[{"value":"/ Nest a [`Server`] at the current path.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":64034,"byte_end":64076,"line_start":99,"line_end":99,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":64081,"byte_end":64084,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ [`Server`]: struct.Server.html","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":64089,"byte_end":64123,"line_start":101,"line_end":101,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":65077,"byte_end":65086,"line_start":135,"line_end":135,"column_start":12,"column_end":21},"name":"serve_dir","qualname":"<Route>::serve_dir","value":"pub fn serve_dir<impl AsRef<Path>: AsRef<Path>>(&mut Self, impl AsRef<Path>)\n-> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Serve a directory statically.","sig":null,"attributes":[{"value":"/ Serve a directory statically.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":64470,"byte_end":64503,"line_start":116,"line_end":116,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":64508,"byte_end":64511,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ Each file will be streamed from disk, and a mime type will be determined","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":64516,"byte_end":64592,"line_start":118,"line_end":118,"column_start":5,"column_end":81}},{"value":"/ based on magic bytes.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":64597,"byte_end":64622,"line_start":119,"line_end":119,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":64627,"byte_end":64630,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":64635,"byte_end":64649,"line_start":121,"line_end":121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":64654,"byte_end":64657,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Serve the contents of the local directory `./public/images/*` from","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":64662,"byte_end":64732,"line_start":123,"line_end":123,"column_start":5,"column_end":75}},{"value":"/ `localhost:8080/images/*`.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":64737,"byte_end":64767,"line_start":124,"line_end":124,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":64772,"byte_end":64775,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":64780,"byte_end":64793,"line_start":126,"line_end":126,"column_start":5,"column_end":18}},{"value":"/ #[async_std::main]","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":64798,"byte_end":64820,"line_start":127,"line_end":127,"column_start":5,"column_end":27}},{"value":"/ async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":64825,"byte_end":64876,"line_start":128,"line_end":128,"column_start":5,"column_end":56}},{"value":"/     let mut app = tide::new();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":64881,"byte_end":64915,"line_start":129,"line_end":129,"column_start":5,"column_end":39}},{"value":"/     app.at(\"/images\").serve_dir(\"public/images/\")?;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":64920,"byte_end":64975,"line_start":130,"line_end":130,"column_start":5,"column_end":60}},{"value":"/     app.listen(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":64980,"byte_end":65024,"line_start":131,"line_end":131,"column_start":5,"column_end":49}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":65029,"byte_end":65043,"line_start":132,"line_end":132,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":65048,"byte_end":65053,"line_start":133,"line_end":133,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":65058,"byte_end":65065,"line_start":134,"line_end":134,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":65560,"byte_end":65570,"line_start":147,"line_end":147,"column_start":12,"column_end":22},"name":"serve_file","qualname":"<Route>::serve_file","value":"pub fn serve_file<impl AsRef<Path>: AsRef<Path>>(&mut Self, impl AsRef<Path>)\n-> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Serve a static file.","sig":null,"attributes":[{"value":"/ Serve a static file.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":65385,"byte_end":65409,"line_start":143,"line_end":143,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":65414,"byte_end":65417,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ The file will be streamed from disk, and a mime type will be determined","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":65422,"byte_end":65497,"line_start":145,"line_end":145,"column_start":5,"column_end":80}},{"value":"/ based on magic bytes. Similar to serve_dir","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":65502,"byte_end":65548,"line_start":146,"line_end":146,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":65751,"byte_end":65757,"line_start":153,"line_end":153,"column_start":12,"column_end":18},"name":"method","qualname":"<Route>::method","value":"pub fn method<impl Endpoint<State>: Endpoint<State>>(&mut Self,\nhttp_types::Method, impl Endpoint<State>) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add an endpoint for the given HTTP method\n","sig":null,"attributes":[{"value":"/ Add an endpoint for the given HTTP method","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":65694,"byte_end":65739,"line_start":152,"line_end":152,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":66710,"byte_end":66713,"line_start":181,"line_end":181,"column_start":12,"column_end":15},"name":"all","qualname":"<Route>::all","value":"pub fn all<impl Endpoint<State>: Endpoint<State>>(&mut Self,\nimpl Endpoint<State>) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add an endpoint for all HTTP methods, as a fallback.","sig":null,"attributes":[{"value":"/ Add an endpoint for all HTTP methods, as a fallback.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":66571,"byte_end":66627,"line_start":178,"line_end":178,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":66632,"byte_end":66635,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Routes with specific HTTP methods will be tried first.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":66640,"byte_end":66698,"line_start":180,"line_end":180,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":67489,"byte_end":67492,"line_start":204,"line_end":204,"column_start":12,"column_end":15},"name":"get","qualname":"<Route>::get","value":"pub fn get<impl Endpoint<State>: Endpoint<State>>(&mut Self,\nimpl Endpoint<State>) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add an endpoint for `GET` requests\n","sig":null,"attributes":[{"value":"/ Add an endpoint for `GET` requests","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":67439,"byte_end":67477,"line_start":203,"line_end":203,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":67670,"byte_end":67674,"line_start":210,"line_end":210,"column_start":12,"column_end":16},"name":"head","qualname":"<Route>::head","value":"pub fn head<impl Endpoint<State>: Endpoint<State>>(&mut Self,\nimpl Endpoint<State>) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add an endpoint for `HEAD` requests\n","sig":null,"attributes":[{"value":"/ Add an endpoint for `HEAD` requests","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":67619,"byte_end":67658,"line_start":209,"line_end":209,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":67852,"byte_end":67855,"line_start":216,"line_end":216,"column_start":12,"column_end":15},"name":"put","qualname":"<Route>::put","value":"pub fn put<impl Endpoint<State>: Endpoint<State>>(&mut Self,\nimpl Endpoint<State>) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add an endpoint for `PUT` requests\n","sig":null,"attributes":[{"value":"/ Add an endpoint for `PUT` requests","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":67802,"byte_end":67840,"line_start":215,"line_end":215,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":68033,"byte_end":68037,"line_start":222,"line_end":222,"column_start":12,"column_end":16},"name":"post","qualname":"<Route>::post","value":"pub fn post<impl Endpoint<State>: Endpoint<State>>(&mut Self,\nimpl Endpoint<State>) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add an endpoint for `POST` requests\n","sig":null,"attributes":[{"value":"/ Add an endpoint for `POST` requests","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":67982,"byte_end":68021,"line_start":221,"line_end":221,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":68218,"byte_end":68224,"line_start":228,"line_end":228,"column_start":12,"column_end":18},"name":"delete","qualname":"<Route>::delete","value":"pub fn delete<impl Endpoint<State>: Endpoint<State>>(&mut Self,\nimpl Endpoint<State>) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add an endpoint for `DELETE` requests\n","sig":null,"attributes":[{"value":"/ Add an endpoint for `DELETE` requests","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":68165,"byte_end":68206,"line_start":227,"line_end":227,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":68408,"byte_end":68415,"line_start":234,"line_end":234,"column_start":12,"column_end":19},"name":"options","qualname":"<Route>::options","value":"pub fn options<impl Endpoint<State>: Endpoint<State>>(&mut Self,\nimpl Endpoint<State>) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add an endpoint for `OPTIONS` requests\n","sig":null,"attributes":[{"value":"/ Add an endpoint for `OPTIONS` requests","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":68354,"byte_end":68396,"line_start":233,"line_end":233,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":68600,"byte_end":68607,"line_start":240,"line_end":240,"column_start":12,"column_end":19},"name":"connect","qualname":"<Route>::connect","value":"pub fn connect<impl Endpoint<State>: Endpoint<State>>(&mut Self,\nimpl Endpoint<State>) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add an endpoint for `CONNECT` requests\n","sig":null,"attributes":[{"value":"/ Add an endpoint for `CONNECT` requests","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":68546,"byte_end":68588,"line_start":239,"line_end":239,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":68790,"byte_end":68795,"line_start":246,"line_end":246,"column_start":12,"column_end":17},"name":"patch","qualname":"<Route>::patch","value":"pub fn patch<impl Endpoint<State>: Endpoint<State>>(&mut Self,\nimpl Endpoint<State>) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add an endpoint for `PATCH` requests\n","sig":null,"attributes":[{"value":"/ Add an endpoint for `PATCH` requests","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":68738,"byte_end":68778,"line_start":245,"line_end":245,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":68976,"byte_end":68981,"line_start":252,"line_end":252,"column_start":12,"column_end":17},"name":"trace","qualname":"<Route>::trace","value":"pub fn trace<impl Endpoint<State>: Endpoint<State>>(&mut Self,\nimpl Endpoint<State>) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add an endpoint for `TRACE` requests\n","sig":null,"attributes":[{"value":"/ Add an endpoint for `TRACE` requests","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":68924,"byte_end":68964,"line_start":251,"line_end":251,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":804},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":74694,"byte_end":74700,"line_start":29,"line_end":29,"column_start":12,"column_end":18},"name":"Server","qualname":"::server::Server","value":"Server {  }","parent":null,"children":[{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808}],"decl_id":null,"docs":" An HTTP server.","sig":null,"attributes":[{"value":"/ An HTTP server.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":73912,"byte_end":73931,"line_start":14,"line_end":14,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":73932,"byte_end":73935,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Servers are built up as a combination of *state*, *endpoints* and *middleware*:","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":73936,"byte_end":74019,"line_start":16,"line_end":16,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":74020,"byte_end":74023,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ - Server state is user-defined, and is provided via the [`Server::with_state`] function. The","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":74024,"byte_end":74120,"line_start":18,"line_end":18,"column_start":1,"column_end":97}},{"value":"/ state is available as a shared reference to all app endpoints.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":74121,"byte_end":74187,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":74188,"byte_end":74191,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ - Endpoints provide the actual application-level code corresponding to","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":74192,"byte_end":74266,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ particular URLs. The [`Server::at`] method creates a new *route* (using","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":74267,"byte_end":74342,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ standard router syntax), which can then be used to register endpoints","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":74343,"byte_end":74416,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/ for particular HTTP request types.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":74417,"byte_end":74455,"line_start":24,"line_end":24,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":74456,"byte_end":74459,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ - Middleware extends the base Tide framework with additional request or","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":74460,"byte_end":74535,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/ response processing, such as compression, default headers, or logging. To","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":74536,"byte_end":74613,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ add middleware to an app, use the [`Server::middleware`] method.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":74614,"byte_end":74682,"line_start":28,"line_end":28,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":75720,"byte_end":75723,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"new","qualname":"<Server<()>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new Tide server.","sig":null,"attributes":[{"value":"/ Create a new Tide server.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":75306,"byte_end":75335,"line_start":44,"line_end":44,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":75340,"byte_end":75343,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":75348,"byte_end":75362,"line_start":46,"line_end":46,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":75367,"byte_end":75370,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":75375,"byte_end":75388,"line_start":48,"line_end":48,"column_start":5,"column_end":18}},{"value":"/ # use async_std::task::block_on;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":75393,"byte_end":75429,"line_start":49,"line_end":49,"column_start":5,"column_end":41}},{"value":"/ # fn main() -> Result<(), std::io::Error> { block_on(async {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":75434,"byte_end":75498,"line_start":50,"line_end":50,"column_start":5,"column_end":69}},{"value":"/ #","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":75503,"byte_end":75508,"line_start":51,"line_end":51,"column_start":5,"column_end":10}},{"value":"/ let mut app = tide::new();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":75513,"byte_end":75543,"line_start":52,"line_end":52,"column_start":5,"column_end":35}},{"value":"/ app.at(\"/\").get(|_| async { Ok(\"Hello, world!\") });","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":75548,"byte_end":75603,"line_start":53,"line_end":53,"column_start":5,"column_end":60}},{"value":"/ app.listen(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":75608,"byte_end":75648,"line_start":54,"line_end":54,"column_start":5,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":75653,"byte_end":75658,"line_start":55,"line_end":55,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":75663,"byte_end":75680,"line_start":56,"line_end":56,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":75685,"byte_end":75692,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":75697,"byte_end":75708,"line_start":58,"line_end":58,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":815},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":76874,"byte_end":76884,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"with_state","qualname":"<Server<State>>::with_state","value":"pub fn with_state(State) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new Tide server with shared application scoped state.","sig":null,"attributes":[{"value":"/ Create a new Tide server with shared application scoped state.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":75940,"byte_end":76006,"line_start":74,"line_end":74,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":76011,"byte_end":76014,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Application scoped state is useful for storing items","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":76019,"byte_end":76075,"line_start":76,"line_end":76,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":76080,"byte_end":76083,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":76088,"byte_end":76102,"line_start":78,"line_end":78,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":76107,"byte_end":76110,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":76115,"byte_end":76128,"line_start":80,"line_end":80,"column_start":5,"column_end":18}},{"value":"/ # use async_std::task::block_on;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":76133,"byte_end":76169,"line_start":81,"line_end":81,"column_start":5,"column_end":41}},{"value":"/ # fn main() -> Result<(), std::io::Error> { block_on(async {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":76174,"byte_end":76238,"line_start":82,"line_end":82,"column_start":5,"column_end":69}},{"value":"/ #","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":76243,"byte_end":76248,"line_start":83,"line_end":83,"column_start":5,"column_end":10}},{"value":"/ use tide::Request;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":76253,"byte_end":76275,"line_start":84,"line_end":84,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":76280,"byte_end":76283,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ /// The shared application state.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":76288,"byte_end":76325,"line_start":86,"line_end":86,"column_start":5,"column_end":42}},{"value":"/ #[derive(Clone)]","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":76330,"byte_end":76350,"line_start":87,"line_end":87,"column_start":5,"column_end":25}},{"value":"/ struct State {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":76355,"byte_end":76373,"line_start":88,"line_end":88,"column_start":5,"column_end":23}},{"value":"/     name: String,","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":76378,"byte_end":76399,"line_start":89,"line_end":89,"column_start":5,"column_end":26}},{"value":"/ }","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":76404,"byte_end":76409,"line_start":90,"line_end":90,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":76414,"byte_end":76417,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ // Define a new instance of the state.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":76422,"byte_end":76464,"line_start":92,"line_end":92,"column_start":5,"column_end":47}},{"value":"/ let state = State {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":76469,"byte_end":76492,"line_start":93,"line_end":93,"column_start":5,"column_end":28}},{"value":"/     name: \"Nori\".to_string()","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":76497,"byte_end":76529,"line_start":94,"line_end":94,"column_start":5,"column_end":37}},{"value":"/ };","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":76534,"byte_end":76540,"line_start":95,"line_end":95,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":76545,"byte_end":76548,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ // Initialize the application with state.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":76553,"byte_end":76598,"line_start":97,"line_end":97,"column_start":5,"column_end":50}},{"value":"/ let mut app = tide::with_state(state);","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":76603,"byte_end":76645,"line_start":98,"line_end":98,"column_start":5,"column_end":47}},{"value":"/ app.at(\"/\").get(|req: Request<State>| async move {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":76650,"byte_end":76704,"line_start":99,"line_end":99,"column_start":5,"column_end":59}},{"value":"/     Ok(format!(\"Hello, {}!\", &req.state().name))","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":76709,"byte_end":76761,"line_start":100,"line_end":100,"column_start":5,"column_end":57}},{"value":"/ });","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":76766,"byte_end":76773,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/ app.listen(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":76778,"byte_end":76818,"line_start":102,"line_end":102,"column_start":5,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":76823,"byte_end":76828,"line_start":103,"line_end":103,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":76833,"byte_end":76850,"line_start":104,"line_end":104,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":76855,"byte_end":76862,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":79546,"byte_end":79548,"line_start":165,"line_end":165,"column_start":12,"column_end":14},"name":"at","qualname":"<Server<State>>::at","value":"pub fn at<'a>(&'a mut Self, &str) -> Route","parent":null,"children":[],"decl_id":null,"docs":" Add a new route at the given `path`, relative to root.","sig":null,"attributes":[{"value":"/ Add a new route at the given `path`, relative to root.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":77265,"byte_end":77323,"line_start":119,"line_end":119,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":77328,"byte_end":77331,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ Routing means mapping an HTTP request to an endpoint. Here Tide applies","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":77336,"byte_end":77411,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ a \"table of contents\" approach, which makes it easy to see the overall","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":77416,"byte_end":77490,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"/ app structure. Endpoints are selected solely by the path and HTTP method","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":77495,"byte_end":77571,"line_start":123,"line_end":123,"column_start":5,"column_end":81}},{"value":"/ of a request: the path determines the resource and the HTTP verb the","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":77576,"byte_end":77648,"line_start":124,"line_end":124,"column_start":5,"column_end":77}},{"value":"/ respective endpoint of the selected resource. Example:","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":77653,"byte_end":77711,"line_start":125,"line_end":125,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":77716,"byte_end":77719,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":77724,"byte_end":77742,"line_start":127,"line_end":127,"column_start":5,"column_end":23}},{"value":"/ # let mut app = tide::Server::new();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":77747,"byte_end":77787,"line_start":128,"line_end":128,"column_start":5,"column_end":45}},{"value":"/ app.at(\"/\").get(|_| async { Ok(\"Hello, world!\") });","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":77792,"byte_end":77847,"line_start":129,"line_end":129,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":77852,"byte_end":77859,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":77864,"byte_end":77867,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ A path is comprised of zero or many segments, i.e. non-empty strings","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":77872,"byte_end":77944,"line_start":132,"line_end":132,"column_start":5,"column_end":77}},{"value":"/ separated by '/'. There are two kinds of segments: concrete and","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":77949,"byte_end":78016,"line_start":133,"line_end":133,"column_start":5,"column_end":72}},{"value":"/ wildcard. A concrete segment is used to exactly match the respective","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":78021,"byte_end":78093,"line_start":134,"line_end":134,"column_start":5,"column_end":77}},{"value":"/ part of the path of the incoming request. A wildcard segment on the","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":78098,"byte_end":78169,"line_start":135,"line_end":135,"column_start":5,"column_end":76}},{"value":"/ other hand extracts and parses the respective part of the path of the","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":78174,"byte_end":78247,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ incoming request to pass it along to the endpoint as an argument. A","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":78252,"byte_end":78323,"line_start":137,"line_end":137,"column_start":5,"column_end":76}},{"value":"/ wildcard segment is written as `:name`, which creates an endpoint","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":78328,"byte_end":78397,"line_start":138,"line_end":138,"column_start":5,"column_end":74}},{"value":"/ parameter called `name`. It is not possible to define wildcard segments","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":78402,"byte_end":78477,"line_start":139,"line_end":139,"column_start":5,"column_end":80}},{"value":"/ with different names for otherwise identical paths.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":78482,"byte_end":78537,"line_start":140,"line_end":140,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":78542,"byte_end":78545,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ Alternatively a wildcard definitions can start with a `*`, for example","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":78550,"byte_end":78624,"line_start":142,"line_end":142,"column_start":5,"column_end":79}},{"value":"/ `*path`, which means that the wildcard will match to the end of given","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":78629,"byte_end":78702,"line_start":143,"line_end":143,"column_start":5,"column_end":78}},{"value":"/ path, no matter how many segments are left, even nothing.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":78707,"byte_end":78768,"line_start":144,"line_end":144,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":78773,"byte_end":78776,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ The name of the parameter can be omitted to define a path that matches","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":78781,"byte_end":78855,"line_start":146,"line_end":146,"column_start":5,"column_end":79}},{"value":"/ the required structure, but where the parameters are not required.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":78860,"byte_end":78930,"line_start":147,"line_end":147,"column_start":5,"column_end":75}},{"value":"/ `:` will match a segment, and `*` will match an entire path.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":78935,"byte_end":78999,"line_start":148,"line_end":148,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":79004,"byte_end":79007,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ Here are some examples omitting the HTTP verb based endpoint selection:","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":79012,"byte_end":79087,"line_start":150,"line_end":150,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":79092,"byte_end":79095,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":79100,"byte_end":79118,"line_start":152,"line_end":152,"column_start":5,"column_end":23}},{"value":"/ # let mut app = tide::Server::new();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":79123,"byte_end":79163,"line_start":153,"line_end":153,"column_start":5,"column_end":45}},{"value":"/ app.at(\"/\");","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":79168,"byte_end":79184,"line_start":154,"line_end":154,"column_start":5,"column_end":21}},{"value":"/ app.at(\"/hello\");","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":79189,"byte_end":79210,"line_start":155,"line_end":155,"column_start":5,"column_end":26}},{"value":"/ app.at(\"add_two/:num\");","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":79215,"byte_end":79242,"line_start":156,"line_end":156,"column_start":5,"column_end":32}},{"value":"/ app.at(\"files/:user/*\");","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":79247,"byte_end":79275,"line_start":157,"line_end":157,"column_start":5,"column_end":33}},{"value":"/ app.at(\"static/*path\");","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":79280,"byte_end":79307,"line_start":158,"line_end":158,"column_start":5,"column_end":32}},{"value":"/ app.at(\"static/:context/:\");","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":79312,"byte_end":79344,"line_start":159,"line_end":159,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":79349,"byte_end":79356,"line_start":160,"line_end":160,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":79361,"byte_end":79364,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ There is no fallback route matching, i.e. either a resource is a full","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":79369,"byte_end":79442,"line_start":162,"line_end":162,"column_start":5,"column_end":78}},{"value":"/ match or not, which means that the order of adding resources has no","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":79447,"byte_end":79518,"line_start":163,"line_end":163,"column_start":5,"column_end":76}},{"value":"/ effect.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":79523,"byte_end":79534,"line_start":164,"line_end":164,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":818},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":80343,"byte_end":80347,"line_start":180,"line_end":180,"column_start":12,"column_end":16},"name":"with","qualname":"<Server<State>>::with","value":"pub fn with<M>(&mut Self, M) -> &mut Self where M: Middleware<State>","parent":null,"children":[],"decl_id":null,"docs":" Add middleware to an application.","sig":null,"attributes":[{"value":"/ Add middleware to an application.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":79796,"byte_end":79833,"line_start":171,"line_end":171,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":79838,"byte_end":79841,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Middleware provides customization of the request/response cycle, such as compression,","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":79846,"byte_end":79935,"line_start":173,"line_end":173,"column_start":5,"column_end":94}},{"value":"/ logging, or header modification. Middleware is invoked when processing a request, and can","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":79940,"byte_end":80033,"line_start":174,"line_end":174,"column_start":5,"column_end":98}},{"value":"/ either continue processing (possibly modifying the response) or immediately return a","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":80038,"byte_end":80126,"line_start":175,"line_end":175,"column_start":5,"column_end":93}},{"value":"/ response. See the [`Middleware`] trait for details.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":80131,"byte_end":80186,"line_start":176,"line_end":176,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":80191,"byte_end":80194,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ Middleware can only be added at the \"top level\" of an application, and is processed in the","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":80199,"byte_end":80293,"line_start":178,"line_end":178,"column_start":5,"column_end":99}},{"value":"/ order in which it is applied.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":80298,"byte_end":80331,"line_start":179,"line_end":179,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":820},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":81307,"byte_end":81313,"line_start":208,"line_end":208,"column_start":18,"column_end":24},"name":"listen","qualname":"<Server<State>>::listen","value":"pub async fn listen<L: ToListener<State>>(Self, L) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously serve the app with the supplied listener.","sig":null,"attributes":[{"value":"/ Asynchronously serve the app with the supplied listener.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":80705,"byte_end":80765,"line_start":191,"line_end":191,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":80770,"byte_end":80773,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ This is a shorthand for calling `Server::bind`, logging the `ListenInfo`","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":80778,"byte_end":80854,"line_start":193,"line_end":193,"column_start":5,"column_end":81}},{"value":"/ instances from `Listener::info`, and then calling `Listener::accept`.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":80859,"byte_end":80932,"line_start":194,"line_end":194,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":80937,"byte_end":80940,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":80945,"byte_end":80959,"line_start":196,"line_end":196,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":80964,"byte_end":80967,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":80972,"byte_end":80985,"line_start":198,"line_end":198,"column_start":5,"column_end":18}},{"value":"/ # use async_std::task::block_on;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":80990,"byte_end":81026,"line_start":199,"line_end":199,"column_start":5,"column_end":41}},{"value":"/ # fn main() -> Result<(), std::io::Error> { block_on(async {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":81031,"byte_end":81095,"line_start":200,"line_end":200,"column_start":5,"column_end":69}},{"value":"/ #","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":81100,"byte_end":81105,"line_start":201,"line_end":201,"column_start":5,"column_end":10}},{"value":"/ let mut app = tide::new();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":81110,"byte_end":81140,"line_start":202,"line_end":202,"column_start":5,"column_end":35}},{"value":"/ app.at(\"/\").get(|_| async { Ok(\"Hello, world!\") });","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":81145,"byte_end":81200,"line_start":203,"line_end":203,"column_start":5,"column_end":60}},{"value":"/ app.listen(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":81205,"byte_end":81245,"line_start":204,"line_end":204,"column_start":5,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":81250,"byte_end":81255,"line_start":205,"line_end":205,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":81260,"byte_end":81277,"line_start":206,"line_end":206,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":81282,"byte_end":81289,"line_start":207,"line_end":207,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":824},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":82728,"byte_end":82732,"line_start":247,"line_end":247,"column_start":18,"column_end":22},"name":"bind","qualname":"<Server<State>>::bind","value":"pub async fn bind<L: ToListener<State>>(Self, L) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously bind the listener.","sig":null,"attributes":[{"value":"/ Asynchronously bind the listener.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":81634,"byte_end":81671,"line_start":218,"line_end":218,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":81676,"byte_end":81679,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Bind the listener. This starts the listening process by opening the","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":81684,"byte_end":81755,"line_start":220,"line_end":220,"column_start":5,"column_end":76}},{"value":"/ necessary network ports, but not yet accepting incoming connections.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":81760,"byte_end":81832,"line_start":221,"line_end":221,"column_start":5,"column_end":77}},{"value":"/ `Listener::listen` should be called after this to start accepting","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":81837,"byte_end":81906,"line_start":222,"line_end":222,"column_start":5,"column_end":74}},{"value":"/ connections.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":81911,"byte_end":81927,"line_start":223,"line_end":223,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":81932,"byte_end":81935,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ When calling `Listener::info` multiple `ListenInfo` instances may be","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":81940,"byte_end":82012,"line_start":225,"line_end":225,"column_start":5,"column_end":77}},{"value":"/ returned. This is useful when using for example `ConcurrentListener`","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":82017,"byte_end":82089,"line_start":226,"line_end":226,"column_start":5,"column_end":77}},{"value":"/ which enables a single server to listen on muliple ports.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":82094,"byte_end":82155,"line_start":227,"line_end":227,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":82160,"byte_end":82163,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":82168,"byte_end":82182,"line_start":229,"line_end":229,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":82187,"byte_end":82190,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":82195,"byte_end":82208,"line_start":231,"line_end":231,"column_start":5,"column_end":18}},{"value":"/ # use async_std::task::block_on;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":82213,"byte_end":82249,"line_start":232,"line_end":232,"column_start":5,"column_end":41}},{"value":"/ # fn main() -> Result<(), std::io::Error> { block_on(async {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":82254,"byte_end":82318,"line_start":233,"line_end":233,"column_start":5,"column_end":69}},{"value":"/ #","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":82323,"byte_end":82328,"line_start":234,"line_end":234,"column_start":5,"column_end":10}},{"value":"/ use tide::prelude::*;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":82333,"byte_end":82358,"line_start":235,"line_end":235,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":82363,"byte_end":82366,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ let mut app = tide::new();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":82371,"byte_end":82401,"line_start":237,"line_end":237,"column_start":5,"column_end":35}},{"value":"/ app.at(\"/\").get(|_| async { Ok(\"Hello, world!\") });","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":82406,"byte_end":82461,"line_start":238,"line_end":238,"column_start":5,"column_end":60}},{"value":"/ let mut listener = app.bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":82466,"byte_end":82523,"line_start":239,"line_end":239,"column_start":5,"column_end":62}},{"value":"/ for info in listener.info().iter() {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":82528,"byte_end":82568,"line_start":240,"line_end":240,"column_start":5,"column_end":45}},{"value":"/     println!(\"Server listening on {}\", info);","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":82573,"byte_end":82622,"line_start":241,"line_end":241,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":82627,"byte_end":82632,"line_start":242,"line_end":242,"column_start":5,"column_end":10}},{"value":"/ listener.accept().await?;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":82637,"byte_end":82666,"line_start":243,"line_end":243,"column_start":5,"column_end":34}},{"value":"/ #","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":82671,"byte_end":82676,"line_start":244,"line_end":244,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":82681,"byte_end":82698,"line_start":245,"line_end":245,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":82703,"byte_end":82710,"line_start":246,"line_end":246,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":83693,"byte_end":83700,"line_start":279,"line_end":279,"column_start":18,"column_end":25},"name":"respond","qualname":"<Server<State>>::respond","value":"pub async fn respond<Req, Res, '_>(&'_ Self, Req) -> /*impl Trait*/ where\nReq: Into<http_types::Request>, Res: From<http_types::Response>","parent":null,"children":[],"decl_id":null,"docs":" Respond to a `Request` with a `Response`.","sig":null,"attributes":[{"value":"/ Respond to a `Request` with a `Response`.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":82969,"byte_end":83014,"line_start":256,"line_end":256,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":83019,"byte_end":83022,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ This method is useful for testing endpoints directly,","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":83027,"byte_end":83084,"line_start":258,"line_end":258,"column_start":5,"column_end":62}},{"value":"/ or for creating servers over custom transports.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":83089,"byte_end":83140,"line_start":259,"line_end":259,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":83145,"byte_end":83148,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":83153,"byte_end":83167,"line_start":261,"line_end":261,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":83172,"byte_end":83175,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":83180,"byte_end":83193,"line_start":263,"line_end":263,"column_start":5,"column_end":18}},{"value":"/ # #[async_std::main]","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":83198,"byte_end":83222,"line_start":264,"line_end":264,"column_start":5,"column_end":29}},{"value":"/ # async fn main() -> http_types::Result<()> {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":83227,"byte_end":83276,"line_start":265,"line_end":265,"column_start":5,"column_end":54}},{"value":"/ #","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":83281,"byte_end":83286,"line_start":266,"line_end":266,"column_start":5,"column_end":10}},{"value":"/ use tide::http::{Url, Method, Request, Response};","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":83291,"byte_end":83344,"line_start":267,"line_end":267,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":83349,"byte_end":83352,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ let mut app = tide::new();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":83357,"byte_end":83387,"line_start":269,"line_end":269,"column_start":5,"column_end":35}},{"value":"/ app.at(\"/\").get(|_| async { Ok(\"hello world\") });","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":83392,"byte_end":83445,"line_start":270,"line_end":270,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":83450,"byte_end":83453,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let req = Request::new(Method::Get, Url::parse(\"https://example.com\")?);","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":83458,"byte_end":83534,"line_start":272,"line_end":272,"column_start":5,"column_end":81}},{"value":"/ let res: Response = app.respond(req).await?;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":83539,"byte_end":83587,"line_start":273,"line_end":273,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":83592,"byte_end":83595,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(res.status(), 200);","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":83600,"byte_end":83634,"line_start":275,"line_end":275,"column_start":5,"column_end":39}},{"value":"/ #","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":83639,"byte_end":83644,"line_start":276,"line_end":276,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":83649,"byte_end":83663,"line_start":277,"line_end":277,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":83668,"byte_end":83675,"line_start":278,"line_end":278,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":833},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":84882,"byte_end":84887,"line_start":317,"line_end":317,"column_start":12,"column_end":17},"name":"state","qualname":"<Server<State>>::state","value":"pub fn state(&Self) -> &State","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the server's state. This is useful for testing and nesting:","sig":null,"attributes":[{"value":"/ Gets a reference to the server's state. This is useful for testing and nesting:","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":84450,"byte_end":84533,"line_start":306,"line_end":306,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":84538,"byte_end":84541,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":84546,"byte_end":84559,"line_start":308,"line_end":308,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":84564,"byte_end":84567,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":84572,"byte_end":84583,"line_start":310,"line_end":310,"column_start":5,"column_end":16}},{"value":"/ # #[derive(Clone)] struct SomeAppState;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":84588,"byte_end":84631,"line_start":311,"line_end":311,"column_start":5,"column_end":48}},{"value":"/ let mut app = tide::with_state(SomeAppState);","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":84636,"byte_end":84685,"line_start":312,"line_end":312,"column_start":5,"column_end":54}},{"value":"/ let mut admin = tide::with_state(app.state().clone());","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":84690,"byte_end":84748,"line_start":313,"line_end":313,"column_start":5,"column_end":63}},{"value":"/ admin.at(\"/\").get(|_| async { Ok(\"nested app with cloned state\") });","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":84753,"byte_end":84825,"line_start":314,"line_end":314,"column_start":5,"column_end":77}},{"value":"/ app.at(\"/\").nest(admin);","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":84830,"byte_end":84858,"line_start":315,"line_end":315,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":84863,"byte_end":84870,"line_start":316,"line_end":316,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":840},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\convert.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"convert","qualname":"::convert","value":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\convert.rs","parent":null,"children":[{"krate":0,"index":841}],"decl_id":null,"docs":" Traits for conversions between types.\n","sig":null,"attributes":[{"value":"/ Traits for conversions between types.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\convert.rs","byte_start":87297,"byte_end":87338,"line_start":1,"line_end":1,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":842},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"listener","qualname":"::listener","value":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\mod.rs","parent":null,"children":[{"krate":0,"index":843},{"krate":0,"index":894},{"krate":0,"index":938},{"krate":0,"index":979},{"krate":0,"index":1048},{"krate":0,"index":1059},{"krate":0,"index":1147},{"krate":0,"index":1148},{"krate":0,"index":1149},{"krate":0,"index":1151},{"krate":0,"index":1154},{"krate":0,"index":1157},{"krate":0,"index":1160},{"krate":0,"index":1163},{"krate":0,"index":1166},{"krate":0,"index":1169},{"krate":0,"index":1172},{"krate":0,"index":1175},{"krate":0,"index":1873},{"krate":0,"index":1882},{"krate":0,"index":1178},{"krate":0,"index":1894},{"krate":0,"index":1898},{"krate":0,"index":1900},{"krate":0,"index":1180},{"krate":0,"index":1185}],"decl_id":null,"docs":" Types that represent HTTP transports and binding\n","sig":null,"attributes":[{"value":"/ Types that represent HTTP transports and binding","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\mod.rs","byte_start":87392,"byte_end":87444,"line_start":1,"line_end":1,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":1815},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":92282,"byte_end":92300,"line_start":36,"line_end":36,"column_start":12,"column_end":30},"name":"ConcurrentListener","qualname":"::listener::concurrent_listener::ConcurrentListener","value":"ConcurrentListener {  }","parent":null,"children":[{"krate":0,"index":1817}],"decl_id":null,"docs":" ConcurrentListener allows tide to listen on any number of transports\n simultaneously (such as tcp ports, unix sockets, or tls).","sig":null,"attributes":[{"value":"/ ConcurrentListener allows tide to listen on any number of transports","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":91463,"byte_end":91535,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/ simultaneously (such as tcp ports, unix sockets, or tls).","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":91536,"byte_end":91597,"line_start":10,"line_end":10,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":91598,"byte_end":91601,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example:","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":91602,"byte_end":91616,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":91617,"byte_end":91628,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/ fn main() -> Result<(), std::io::Error> {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":91629,"byte_end":91674,"line_start":14,"line_end":14,"column_start":1,"column_end":46}},{"value":"/    async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":91675,"byte_end":91715,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/        tide::log::start();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":91716,"byte_end":91746,"line_start":16,"line_end":16,"column_start":1,"column_end":31}},{"value":"/        let mut app = tide::new();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":91747,"byte_end":91784,"line_start":17,"line_end":17,"column_start":1,"column_end":38}},{"value":"/        app.at(\"/\").get(|_| async { Ok(\"Hello, world!\") });","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":91785,"byte_end":91847,"line_start":18,"line_end":18,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":91848,"byte_end":91851,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/        let mut listener = tide::listener::ConcurrentListener::new();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":91852,"byte_end":91924,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/        listener.add(\"127.0.0.1:8000\")?;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":91925,"byte_end":91968,"line_start":21,"line_end":21,"column_start":1,"column_end":44}},{"value":"/        listener.add(async_std::net::TcpListener::bind(\"127.0.0.1:8001\").await?)?;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":91969,"byte_end":92054,"line_start":22,"line_end":22,"column_start":1,"column_end":86}},{"value":"/ # if cfg!(unix) {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":92055,"byte_end":92076,"line_start":23,"line_end":23,"column_start":1,"column_end":22}},{"value":"/        listener.add(\"http+unix://unix.socket\")?;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":92077,"byte_end":92129,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":92130,"byte_end":92137,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/    ","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":92138,"byte_end":92145,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ # if false {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":92146,"byte_end":92162,"line_start":27,"line_end":27,"column_start":1,"column_end":17}},{"value":"/        app.listen(listener).await?;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":92163,"byte_end":92202,"line_start":28,"line_end":28,"column_start":1,"column_end":40}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":92203,"byte_end":92210,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/        Ok(())","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":92211,"byte_end":92228,"line_start":30,"line_end":30,"column_start":1,"column_end":18}},{"value":"/    })","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":92229,"byte_end":92238,"line_start":31,"line_end":31,"column_start":1,"column_end":10}},{"value":"/}","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":92239,"byte_end":92243,"line_start":32,"line_end":32,"column_start":1,"column_end":5}},{"value":"/```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":92244,"byte_end":92250,"line_start":33,"line_end":33,"column_start":1,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":92482,"byte_end":92485,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<ConcurrentListener<State>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" creates a new ConcurrentListener\n","sig":null,"attributes":[{"value":"/ creates a new ConcurrentListener","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":92434,"byte_end":92470,"line_start":41,"line_end":41,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":93218,"byte_end":93221,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"add","qualname":"<ConcurrentListener<State>>::add","value":"pub fn add<L>(&mut Self, L) -> io::Result<()> where L: ToListener<State>","parent":null,"children":[],"decl_id":null,"docs":" Adds any [`ToListener`](crate::listener::ToListener) to this\n ConcurrentListener. An error result represents a failure to convert\n the [`ToListener`](crate::listener::ToListener) into a\n [`Listener`](crate::listener::Listener).","sig":null,"attributes":[{"value":"/ Adds any [`ToListener`](crate::listener::ToListener) to this","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":92544,"byte_end":92608,"line_start":46,"line_end":46,"column_start":5,"column_end":69}},{"value":"/ ConcurrentListener. An error result represents a failure to convert","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":92613,"byte_end":92684,"line_start":47,"line_end":47,"column_start":5,"column_end":76}},{"value":"/ the [`ToListener`](crate::listener::ToListener) into a","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":92689,"byte_end":92747,"line_start":48,"line_end":48,"column_start":5,"column_end":63}},{"value":"/ [`Listener`](crate::listener::Listener).","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":92752,"byte_end":92796,"line_start":49,"line_end":49,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":92801,"byte_end":92804,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":92809,"byte_end":92820,"line_start":51,"line_end":51,"column_start":5,"column_end":16}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":92825,"byte_end":92865,"line_start":52,"line_end":52,"column_start":5,"column_end":45}},{"value":"/ let mut listener = tide::listener::ConcurrentListener::new();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":92870,"byte_end":92935,"line_start":53,"line_end":53,"column_start":5,"column_end":70}},{"value":"/ listener.add(\"127.0.0.1:8000\")?;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":92940,"byte_end":92976,"line_start":54,"line_end":54,"column_start":5,"column_end":41}},{"value":"/ listener.add((\"localhost\", 8001))?;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":92981,"byte_end":93020,"line_start":55,"line_end":55,"column_start":5,"column_end":44}},{"value":"/ listener.add(std::net::TcpListener::bind((\"localhost\", 8002))?)?;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":93025,"byte_end":93094,"line_start":56,"line_end":56,"column_start":5,"column_end":74}},{"value":"/ # std::mem::drop(tide::new().listen(listener)); // for the State generic","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":93099,"byte_end":93175,"line_start":57,"line_end":57,"column_start":5,"column_end":81}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":93180,"byte_end":93194,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":93199,"byte_end":93206,"line_start":59,"line_end":59,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":93941,"byte_end":93954,"line_start":79,"line_end":79,"column_start":12,"column_end":25},"name":"with_listener","qualname":"<ConcurrentListener<State>>::with_listener","value":"pub fn with_listener<L>(Self, L) -> Self where L: ToListener<State>","parent":null,"children":[],"decl_id":null,"docs":" `ConcurrentListener::with_listener` allows for chained construction of a ConcurrentListener:\n ```rust,no_run\n # use tide::listener::ConcurrentListener;\n # fn main() -> std::io::Result<()> { async_std::task::block_on(async move {\n # let app = tide::new();\n app.listen(\n     ConcurrentListener::new()\n         .with_listener(\"127.0.0.1:8080\")\n         .with_listener(async_std::net::TcpListener::bind(\"127.0.0.1:8081\").await?),\n ).await?;\n #  Ok(()) }) }\n","sig":null,"attributes":[{"value":"/ `ConcurrentListener::with_listener` allows for chained construction of a ConcurrentListener:","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":93403,"byte_end":93499,"line_start":68,"line_end":68,"column_start":5,"column_end":101}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":93504,"byte_end":93522,"line_start":69,"line_end":69,"column_start":5,"column_end":23}},{"value":"/ # use tide::listener::ConcurrentListener;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":93527,"byte_end":93572,"line_start":70,"line_end":70,"column_start":5,"column_end":50}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async move {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":93577,"byte_end":93656,"line_start":71,"line_end":71,"column_start":5,"column_end":84}},{"value":"/ # let app = tide::new();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":93661,"byte_end":93689,"line_start":72,"line_end":72,"column_start":5,"column_end":33}},{"value":"/ app.listen(","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":93694,"byte_end":93709,"line_start":73,"line_end":73,"column_start":5,"column_end":20}},{"value":"/     ConcurrentListener::new()","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":93714,"byte_end":93747,"line_start":74,"line_end":74,"column_start":5,"column_end":38}},{"value":"/         .with_listener(\"127.0.0.1:8080\")","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":93752,"byte_end":93796,"line_start":75,"line_end":75,"column_start":5,"column_end":49}},{"value":"/         .with_listener(async_std::net::TcpListener::bind(\"127.0.0.1:8081\").await?),","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":93801,"byte_end":93888,"line_start":76,"line_end":76,"column_start":5,"column_end":92}},{"value":"/ ).await?;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":93893,"byte_end":93906,"line_start":77,"line_end":77,"column_start":5,"column_end":18}},{"value":"/ #  Ok(()) }) }","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":93911,"byte_end":93929,"line_start":78,"line_end":78,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":1833},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":96621,"byte_end":96637,"line_start":37,"line_end":37,"column_start":12,"column_end":28},"name":"FailoverListener","qualname":"::listener::failover_listener::FailoverListener","value":"FailoverListener {  }","parent":null,"children":[{"krate":0,"index":1835},{"krate":0,"index":1836}],"decl_id":null,"docs":" FailoverListener allows tide to attempt to listen in a sequential\n order to any number of ports/addresses. The first successful\n listener is used.","sig":null,"attributes":[{"value":"/ FailoverListener allows tide to attempt to listen in a sequential","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":95783,"byte_end":95852,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ order to any number of ports/addresses. The first successful","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":95853,"byte_end":95917,"line_start":11,"line_end":11,"column_start":1,"column_end":65}},{"value":"/ listener is used.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":95918,"byte_end":95939,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":95940,"byte_end":95943,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example:","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":95944,"byte_end":95958,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":95959,"byte_end":95970,"line_start":15,"line_end":15,"column_start":1,"column_end":12}},{"value":"/ fn main() -> Result<(), std::io::Error> {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":95971,"byte_end":96016,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/    async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":96017,"byte_end":96057,"line_start":17,"line_end":17,"column_start":1,"column_end":41}},{"value":"/        tide::log::start();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":96058,"byte_end":96088,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/        let mut app = tide::new();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":96089,"byte_end":96126,"line_start":19,"line_end":19,"column_start":1,"column_end":38}},{"value":"/        app.at(\"/\").get(|_| async { Ok(\"Hello, world!\") });","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":96127,"byte_end":96189,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":96190,"byte_end":96193,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/        let mut listener = tide::listener::FailoverListener::new();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":96194,"byte_end":96264,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/        listener.add(\"127.0.0.1:8000\")?;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":96265,"byte_end":96308,"line_start":23,"line_end":23,"column_start":1,"column_end":44}},{"value":"/        listener.add(async_std::net::TcpListener::bind(\"127.0.0.1:8001\").await?)?;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":96309,"byte_end":96394,"line_start":24,"line_end":24,"column_start":1,"column_end":86}},{"value":"/ # if cfg!(unix) {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":96395,"byte_end":96416,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/        listener.add(\"http+unix://unix.socket\")?;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":96417,"byte_end":96469,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":96470,"byte_end":96477,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/    ","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":96478,"byte_end":96485,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/ # if false {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":96486,"byte_end":96502,"line_start":29,"line_end":29,"column_start":1,"column_end":17}},{"value":"/        app.listen(listener).await?;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":96503,"byte_end":96542,"line_start":30,"line_end":30,"column_start":1,"column_end":40}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":96543,"byte_end":96550,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/        Ok(())","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":96551,"byte_end":96568,"line_start":32,"line_end":32,"column_start":1,"column_end":18}},{"value":"/    })","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":96569,"byte_end":96578,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/}","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":96579,"byte_end":96583,"line_start":34,"line_end":34,"column_start":1,"column_end":5}},{"value":"/```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":96584,"byte_end":96590,"line_start":35,"line_end":35,"column_start":1,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":96866,"byte_end":96869,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<FailoverListener<State>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" creates a new FailoverListener\n","sig":null,"attributes":[{"value":"/ creates a new FailoverListener","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":96820,"byte_end":96854,"line_start":46,"line_end":46,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":97660,"byte_end":97663,"line_start":70,"line_end":70,"column_start":12,"column_end":15},"name":"add","qualname":"<FailoverListener<State>>::add","value":"pub fn add<L>(&mut Self, L) -> io::Result<()> where L: ToListener<State>","parent":null,"children":[],"decl_id":null,"docs":" Adds any [`ToListener`](crate::listener::ToListener) to this\n FailoverListener. An error result represents a failure to convert\n the [`ToListener`](crate::listener::ToListener) into a\n [`Listener`](crate::listener::Listener).","sig":null,"attributes":[{"value":"/ Adds any [`ToListener`](crate::listener::ToListener) to this","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":96974,"byte_end":97038,"line_start":54,"line_end":54,"column_start":5,"column_end":69}},{"value":"/ FailoverListener. An error result represents a failure to convert","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":97043,"byte_end":97112,"line_start":55,"line_end":55,"column_start":5,"column_end":74}},{"value":"/ the [`ToListener`](crate::listener::ToListener) into a","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":97117,"byte_end":97175,"line_start":56,"line_end":56,"column_start":5,"column_end":63}},{"value":"/ [`Listener`](crate::listener::Listener).","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":97180,"byte_end":97224,"line_start":57,"line_end":57,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":97229,"byte_end":97232,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":97237,"byte_end":97248,"line_start":59,"line_end":59,"column_start":5,"column_end":16}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":97253,"byte_end":97293,"line_start":60,"line_end":60,"column_start":5,"column_end":45}},{"value":"/ let mut listener = tide::listener::FailoverListener::new();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":97298,"byte_end":97361,"line_start":61,"line_end":61,"column_start":5,"column_end":68}},{"value":"/ listener.add(\"127.0.0.1:8000\")?;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":97366,"byte_end":97402,"line_start":62,"line_end":62,"column_start":5,"column_end":41}},{"value":"/ listener.add((\"localhost\", 8001))?;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":97407,"byte_end":97446,"line_start":63,"line_end":63,"column_start":5,"column_end":44}},{"value":"/ # if cfg!(unix) {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":97451,"byte_end":97472,"line_start":64,"line_end":64,"column_start":5,"column_end":26}},{"value":"/ listener.add(\"http+unix:///var/run/tide\")?;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":97477,"byte_end":97524,"line_start":65,"line_end":65,"column_start":5,"column_end":52}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":97529,"byte_end":97536,"line_start":66,"line_end":66,"column_start":5,"column_end":12}},{"value":"/ # std::mem::drop(tide::new().listen(listener)); // for the State generic","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":97541,"byte_end":97617,"line_start":67,"line_end":67,"column_start":5,"column_end":81}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":97622,"byte_end":97636,"line_start":68,"line_end":68,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":97641,"byte_end":97648,"line_start":69,"line_end":69,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":98342,"byte_end":98355,"line_start":89,"line_end":89,"column_start":12,"column_end":25},"name":"with_listener","qualname":"<FailoverListener<State>>::with_listener","value":"pub fn with_listener<L>(Self, L) -> Self where L: ToListener<State>","parent":null,"children":[],"decl_id":null,"docs":" `FailoverListener::with_listener` allows for chained construction of a FailoverListener:\n ```rust,no_run\n # use tide::listener::FailoverListener;\n # fn main() -> std::io::Result<()> { async_std::task::block_on(async move {\n # let app = tide::new();\n app.listen(\n     FailoverListener::new()\n         .with_listener(\"127.0.0.1:8080\")\n         .with_listener((\"localhost\", 8081)),\n ).await?;\n #  Ok(()) }) }\n","sig":null,"attributes":[{"value":"/ `FailoverListener::with_listener` allows for chained construction of a FailoverListener:","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":97851,"byte_end":97943,"line_start":78,"line_end":78,"column_start":5,"column_end":97}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":97948,"byte_end":97966,"line_start":79,"line_end":79,"column_start":5,"column_end":23}},{"value":"/ # use tide::listener::FailoverListener;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":97971,"byte_end":98014,"line_start":80,"line_end":80,"column_start":5,"column_end":48}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async move {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":98019,"byte_end":98098,"line_start":81,"line_end":81,"column_start":5,"column_end":84}},{"value":"/ # let app = tide::new();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":98103,"byte_end":98131,"line_start":82,"line_end":82,"column_start":5,"column_end":33}},{"value":"/ app.listen(","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":98136,"byte_end":98151,"line_start":83,"line_end":83,"column_start":5,"column_end":20}},{"value":"/     FailoverListener::new()","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":98156,"byte_end":98187,"line_start":84,"line_end":84,"column_start":5,"column_end":36}},{"value":"/         .with_listener(\"127.0.0.1:8080\")","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":98192,"byte_end":98236,"line_start":85,"line_end":85,"column_start":5,"column_end":49}},{"value":"/         .with_listener((\"localhost\", 8081)),","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":98241,"byte_end":98289,"line_start":86,"line_end":86,"column_start":5,"column_end":53}},{"value":"/ ).await?;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":98294,"byte_end":98307,"line_start":87,"line_end":87,"column_start":5,"column_end":18}},{"value":"/ #  Ok(()) }) }","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":98312,"byte_end":98330,"line_start":88,"line_end":88,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":970},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\parsed_listener.rs","byte_start":101586,"byte_end":101589,"line_start":19,"line_end":19,"column_start":5,"column_end":8},"name":"Tcp","qualname":"::listener::parsed_listener::ParsedListener::Tcp","value":"ParsedListener::Tcp(TcpListener<State>)","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":968},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\parsed_listener.rs","byte_start":101510,"byte_end":101524,"line_start":16,"line_end":16,"column_start":10,"column_end":24},"name":"ParsedListener","qualname":"::listener::parsed_listener::ParsedListener","value":"pub enum ParsedListener<State> { Tcp(TcpListener<State>), }","parent":null,"children":[{"krate":0,"index":970}],"decl_id":null,"docs":" This is an enum that contains variants for each of the listeners\n that can be parsed from a string. This is used as the associated\n Listener type for the string-parsing\n [ToListener](crate::listener::ToListener) implementations","sig":null,"attributes":[{"value":"/ This is an enum that contains variants for each of the listeners","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\parsed_listener.rs","byte_start":101113,"byte_end":101181,"line_start":9,"line_end":9,"column_start":1,"column_end":69}},{"value":"/ that can be parsed from a string. This is used as the associated","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\parsed_listener.rs","byte_start":101182,"byte_end":101250,"line_start":10,"line_end":10,"column_start":1,"column_end":69}},{"value":"/ Listener type for the string-parsing","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\parsed_listener.rs","byte_start":101251,"byte_end":101291,"line_start":11,"line_end":11,"column_start":1,"column_end":41}},{"value":"/ [ToListener](crate::listener::ToListener) implementations","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\parsed_listener.rs","byte_start":101292,"byte_end":101353,"line_start":12,"line_end":12,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\parsed_listener.rs","byte_start":101354,"byte_end":101357,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This is currently crate-visible only, and tide users are expected","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\parsed_listener.rs","byte_start":101358,"byte_end":101427,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/ to create these through [ToListener](crate::ToListener) conversions.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\parsed_listener.rs","byte_start":101428,"byte_end":101500,"line_start":15,"line_end":15,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":1025},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\tcp_listener.rs","byte_start":103737,"byte_end":103748,"line_start":20,"line_end":20,"column_start":12,"column_end":23},"name":"TcpListener","qualname":"::listener::tcp_listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030}],"decl_id":null,"docs":" This represents a tide [Listener](crate::listener::Listener) that\n wraps an [async_std::net::TcpListener]. It is implemented as an\n enum in order to allow creation of a tide::listener::TcpListener\n from a SocketAddr spec that has not yet been bound OR from a bound\n TcpListener.","sig":null,"attributes":[{"value":"/ This represents a tide [Listener](crate::listener::Listener) that","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\tcp_listener.rs","byte_start":103284,"byte_end":103353,"line_start":12,"line_end":12,"column_start":1,"column_end":70}},{"value":"/ wraps an [async_std::net::TcpListener]. It is implemented as an","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\tcp_listener.rs","byte_start":103354,"byte_end":103421,"line_start":13,"line_end":13,"column_start":1,"column_end":68}},{"value":"/ enum in order to allow creation of a tide::listener::TcpListener","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\tcp_listener.rs","byte_start":103422,"byte_end":103490,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"/ from a SocketAddr spec that has not yet been bound OR from a bound","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\tcp_listener.rs","byte_start":103491,"byte_end":103561,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ TcpListener.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\tcp_listener.rs","byte_start":103562,"byte_end":103578,"line_start":16,"line_end":16,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\tcp_listener.rs","byte_start":103579,"byte_end":103582,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This is currently crate-visible only, and tide users are expected","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\tcp_listener.rs","byte_start":103583,"byte_end":103652,"line_start":18,"line_end":18,"column_start":1,"column_end":70}},{"value":"/ to create these through [ToListener](crate::ToListener) conversions.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\tcp_listener.rs","byte_start":103653,"byte_end":103725,"line_start":19,"line_end":19,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1033},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\tcp_listener.rs","byte_start":103946,"byte_end":103956,"line_start":28,"line_end":28,"column_start":12,"column_end":22},"name":"from_addrs","qualname":"<TcpListener<State>>::from_addrs","value":"pub fn from_addrs(Vec<SocketAddr>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1034},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\tcp_listener.rs","byte_start":104144,"byte_end":104157,"line_start":37,"line_end":37,"column_start":12,"column_end":25},"name":"from_listener","qualname":"<TcpListener<State>>::from_listener","value":"pub fn from_listener<impl Into<net::TcpListener>: Into<net::TcpListener>>(impl Into<net::TcpListener>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1055},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":110472,"byte_end":110482,"line_start":50,"line_end":50,"column_start":11,"column_end":21},"name":"ToListener","qualname":"::listener::to_listener::ToListener","value":"ToListener<State: Clone + Send + Sync + 'static>","parent":null,"children":[{"krate":0,"index":1057},{"krate":0,"index":1058}],"decl_id":null,"docs":" ToListener represents any type that can be converted into a\n [`Listener`](crate::listener::Listener).  Any type that implements\n ToListener can be passed to [`Server::listen`](crate::Server::listen) or\n added to a [`ConcurrentListener`](crate::listener::ConcurrentListener)","sig":null,"attributes":[{"value":"/ ToListener represents any type that can be converted into a","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":108347,"byte_end":108410,"line_start":4,"line_end":4,"column_start":1,"column_end":64}},{"value":"/ [`Listener`](crate::listener::Listener).  Any type that implements","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":108411,"byte_end":108481,"line_start":5,"line_end":5,"column_start":1,"column_end":71}},{"value":"/ ToListener can be passed to [`Server::listen`](crate::Server::listen) or","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":108482,"byte_end":108558,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ added to a [`ConcurrentListener`](crate::listener::ConcurrentListener)","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":108559,"byte_end":108633,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":108634,"byte_end":108637,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Example strings on all platforms include:","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":108638,"byte_end":108685,"line_start":9,"line_end":9,"column_start":1,"column_end":48}},{"value":"/ * `tcp://localhost:8000`","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":108686,"byte_end":108714,"line_start":10,"line_end":10,"column_start":1,"column_end":29}},{"value":"/ * `tcp://0.0.0.0` (binds to port 80 by default)","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":108715,"byte_end":108766,"line_start":11,"line_end":11,"column_start":1,"column_end":52}},{"value":"/ * `http://localhost:8000` (http is an alias for tcp)","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":108767,"byte_end":108823,"line_start":12,"line_end":12,"column_start":1,"column_end":57}},{"value":"/ * `http://127.0.0.1:8000` (or `0.0.0.0`, or some specific bindable ip)","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":108824,"byte_end":108898,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"/ * `127.0.0.1:3000` (or any string that can be parsed as a [SocketAddr](std::net::SocketAddr))","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":108899,"byte_end":108996,"line_start":14,"line_end":14,"column_start":1,"column_end":98}},{"value":"/ * `[::1]:1213` (an ipv6 [SocketAddr](std::net::SocketAddr))","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":108997,"byte_end":109060,"line_start":15,"line_end":15,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":109061,"byte_end":109064,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Strings supported only on `cfg(unix)` platforms:","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":109065,"byte_end":109119,"line_start":17,"line_end":17,"column_start":1,"column_end":55}},{"value":"/ * `http+unix:///var/run/tide/socket` (absolute path)","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":109120,"byte_end":109176,"line_start":18,"line_end":18,"column_start":1,"column_end":57}},{"value":"/ * `http+unix://socket` (relative path)","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":109177,"byte_end":109219,"line_start":19,"line_end":19,"column_start":1,"column_end":43}},{"value":"/ * `http+unix://./socket.file` (also relative path)","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":109220,"byte_end":109274,"line_start":20,"line_end":20,"column_start":1,"column_end":55}},{"value":"/ * `http+unix://../socket` (relative path)","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":109275,"byte_end":109320,"line_start":21,"line_end":21,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":109321,"byte_end":109324,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # String supported only on windows:","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":109325,"byte_end":109364,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/ * `:3000` (binds to port 3000)","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":109365,"byte_end":109399,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":109400,"byte_end":109403,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Specifying multiple listeners:","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":109404,"byte_end":109440,"line_start":26,"line_end":26,"column_start":1,"column_end":37}},{"value":"/ To bind to any number of listeners concurrently:","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":109441,"byte_end":109493,"line_start":27,"line_end":27,"column_start":1,"column_end":53}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":109494,"byte_end":109512,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":109513,"byte_end":109587,"line_start":29,"line_end":29,"column_start":1,"column_end":75}},{"value":"/ # let app = tide::new();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":109588,"byte_end":109616,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/ app.listen(vec![\"tcp://localhost:8000\", \"tcp://localhost:8001\"]).await?;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":109617,"byte_end":109693,"line_start":31,"line_end":31,"column_start":1,"column_end":77}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":109694,"byte_end":109711,"line_start":32,"line_end":32,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":109712,"byte_end":109719,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":109720,"byte_end":109723,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Multiple socket resolution","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":109724,"byte_end":109756,"line_start":35,"line_end":35,"column_start":1,"column_end":33}},{"value":"/ If a TCP listener resolves to multiple socket addresses, tide will","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":109757,"byte_end":109827,"line_start":36,"line_end":36,"column_start":1,"column_end":71}},{"value":"/ bind to the first successful one. For example, on ipv4+ipv6","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":109828,"byte_end":109891,"line_start":37,"line_end":37,"column_start":1,"column_end":64}},{"value":"/ systems, `tcp://localhost:1234` resolves both to `127.0.0.1:1234`","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":109892,"byte_end":109961,"line_start":38,"line_end":38,"column_start":1,"column_end":70}},{"value":"/ (v4) as well as `[::1]:1234` (v6). The order that these are","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":109962,"byte_end":110025,"line_start":39,"line_end":39,"column_start":1,"column_end":64}},{"value":"/ attempted is platform-determined. To listen on all of the addresses, use","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":110026,"byte_end":110102,"line_start":40,"line_end":40,"column_start":1,"column_end":77}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":110103,"byte_end":110121,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":110122,"byte_end":110196,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ # let app = tide::new();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":110197,"byte_end":110225,"line_start":43,"line_end":43,"column_start":1,"column_end":29}},{"value":"/ use std::net::ToSocketAddrs;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":110226,"byte_end":110258,"line_start":44,"line_end":44,"column_start":1,"column_end":33}},{"value":"/ app.listen(\"localhost:8000\".to_socket_addrs()?.collect::<Vec<_>>()).await?;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":110259,"byte_end":110338,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":110339,"byte_end":110356,"line_start":46,"line_end":46,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":110357,"byte_end":110364,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ # Other implementations","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":110365,"byte_end":110392,"line_start":48,"line_end":48,"column_start":1,"column_end":28}},{"value":"/ See below for additional provided implementations of ToListener.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":110393,"byte_end":110461,"line_start":49,"line_end":49,"column_start":1,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":1057},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":110578,"byte_end":110586,"line_start":52,"line_end":52,"column_start":10,"column_end":18},"name":"Listener","qualname":"::listener::to_listener::ToListener::Listener","value":"type Listener: Listener<State>;","parent":{"krate":0,"index":1055},"children":[],"decl_id":null,"docs":" What listener are we converting into?\n","sig":null,"attributes":[{"value":"/ What listener are we converting into?","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":110527,"byte_end":110568,"line_start":51,"line_end":51,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1058},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":110942,"byte_end":110953,"line_start":60,"line_end":60,"column_start":8,"column_end":19},"name":"to_listener","qualname":"::listener::to_listener::ToListener::to_listener","value":"pub fn to_listener(Self) -> io::Result<Self::Listener>","parent":{"krate":0,"index":1055},"children":[],"decl_id":null,"docs":" Transform self into a\n [`Listener`](crate::listener::Listener). Unless self is\n already bound/connected to the underlying io, converting to a\n listener does not initiate a connection. An Err return\n indicates an unsuccessful conversion to a listener, not an\n unsuccessful bind attempt.\n","sig":null,"attributes":[{"value":"/ Transform self into a","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":110610,"byte_end":110635,"line_start":54,"line_end":54,"column_start":5,"column_end":30}},{"value":"/ [`Listener`](crate::listener::Listener). Unless self is","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":110640,"byte_end":110699,"line_start":55,"line_end":55,"column_start":5,"column_end":64}},{"value":"/ already bound/connected to the underlying io, converting to a","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":110704,"byte_end":110769,"line_start":56,"line_end":56,"column_start":5,"column_end":70}},{"value":"/ listener does not initiate a connection. An Err return","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":110774,"byte_end":110832,"line_start":57,"line_end":57,"column_start":5,"column_end":63}},{"value":"/ indicates an unsuccessful conversion to a listener, not an","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":110837,"byte_end":110899,"line_start":58,"line_end":58,"column_start":5,"column_end":67}},{"value":"/ unsuccessful bind attempt.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener.rs","byte_start":110904,"byte_end":110934,"line_start":59,"line_end":59,"column_start":5,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":1873},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\mod.rs","byte_start":88484,"byte_end":88492,"line_start":38,"line_end":38,"column_start":11,"column_end":19},"name":"Listener","qualname":"::listener::Listener","value":"Listener<State>: Debug + Display + Send + Sync + 'static","parent":null,"children":[{"krate":0,"index":1875},{"krate":0,"index":1878},{"krate":0,"index":1881}],"decl_id":null,"docs":" The Listener trait represents an implementation of http transport for a tide\n application. In order to provide a Listener to tide, you will also need to\n implement at least one [`ToListener`](crate::listener::ToListener) that\n outputs your Listener type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1875},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\mod.rs","byte_start":88801,"byte_end":88805,"line_start":45,"line_end":45,"column_start":14,"column_end":18},"name":"bind","qualname":"::listener::Listener::bind","value":"pub fn bind<'life0, 'async_trait>(&'life0 mut Self, Server<State>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output = io::Result<()>> +\n    ::core::marker::Send + 'async_trait>> where 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":1873},"children":[],"decl_id":null,"docs":" Bind the listener. This starts the listening process by opening the\n necessary network ports, but not yet accepting incoming connections. This\n method must be called before `accept`.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\mod.rs","byte_start":88459,"byte_end":88473,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"allow(clippy :: type_complexity, clippy :: type_repetition_in_bounds)","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\mod.rs","byte_start":88459,"byte_end":88473,"line_start":37,"line_end":37,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1878},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\mod.rs","byte_start":88984,"byte_end":88990,"line_start":49,"line_end":49,"column_start":14,"column_end":20},"name":"accept","qualname":"::listener::Listener::accept","value":"pub fn accept<'life0, 'async_trait>(&'life0 mut Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output = io::Result<()>> +\n    ::core::marker::Send + 'async_trait>> where 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":1873},"children":[],"decl_id":null,"docs":" Start accepting incoming connections. This method must be called only\n after `bind` has succeeded.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\mod.rs","byte_start":88459,"byte_end":88473,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"allow(clippy :: type_complexity, clippy :: type_repetition_in_bounds)","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\mod.rs","byte_start":88459,"byte_end":88473,"line_start":37,"line_end":37,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1881},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\mod.rs","byte_start":89151,"byte_end":89155,"line_start":53,"line_end":53,"column_start":8,"column_end":12},"name":"info","qualname":"::listener::Listener::info","value":"pub fn info(&Self) -> Vec<ListenInfo>","parent":{"krate":0,"index":1873},"children":[],"decl_id":null,"docs":" Expose information about the connection. This should always return valid\n data after `bind` has succeeded.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1894},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\mod.rs","byte_start":90122,"byte_end":90132,"line_start":92,"line_end":92,"column_start":12,"column_end":22},"name":"ListenInfo","qualname":"::listener::ListenInfo","value":"ListenInfo {  }","parent":null,"children":[{"krate":0,"index":1895},{"krate":0,"index":1896},{"krate":0,"index":1897}],"decl_id":null,"docs":" Information about the `Listener`.","sig":null,"attributes":[{"value":"/ Information about the `Listener`.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\mod.rs","byte_start":89985,"byte_end":90022,"line_start":88,"line_end":88,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\mod.rs","byte_start":90023,"byte_end":90026,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ See [`Report`](../listener/trait.Report.html) for more.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\mod.rs","byte_start":90027,"byte_end":90086,"line_start":90,"line_end":90,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1181},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\mod.rs","byte_start":90385,"byte_end":90388,"line_start":103,"line_end":103,"column_start":12,"column_end":15},"name":"new","qualname":"<ListenInfo>::new","value":"pub fn new(String, String, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance of `ListenInfo`.","sig":null,"attributes":[{"value":"/ Create a new instance of `ListenInfo`.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\mod.rs","byte_start":90223,"byte_end":90265,"line_start":99,"line_end":99,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\mod.rs","byte_start":90270,"byte_end":90273,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This method should only be called when implementing a new Tide `listener`","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\mod.rs","byte_start":90278,"byte_end":90355,"line_start":101,"line_end":101,"column_start":5,"column_end":82}},{"value":"/ strategy.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\mod.rs","byte_start":90360,"byte_end":90373,"line_start":102,"line_end":102,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1182},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\mod.rs","byte_start":90593,"byte_end":90603,"line_start":112,"line_end":112,"column_start":12,"column_end":22},"name":"connection","qualname":"<ListenInfo>::connection","value":"pub fn connection(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Get the connection string.\n","sig":null,"attributes":[{"value":"/ Get the connection string.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\mod.rs","byte_start":90551,"byte_end":90581,"line_start":111,"line_end":111,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1183},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\mod.rs","byte_start":90783,"byte_end":90792,"line_start":119,"line_end":119,"column_start":12,"column_end":21},"name":"transport","qualname":"<ListenInfo>::transport","value":"pub fn transport(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" The underlying transport this connection listens on.","sig":null,"attributes":[{"value":"/ The underlying transport this connection listens on.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\mod.rs","byte_start":90666,"byte_end":90722,"line_start":116,"line_end":116,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\mod.rs","byte_start":90727,"byte_end":90730,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ Examples are: \"tcp\", \"uds\", etc.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\mod.rs","byte_start":90735,"byte_end":90771,"line_start":118,"line_end":118,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1184},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\mod.rs","byte_start":90897,"byte_end":90909,"line_start":124,"line_end":124,"column_start":12,"column_end":24},"name":"is_encrypted","qualname":"<ListenInfo>::is_encrypted","value":"pub fn is_encrypted(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the connection encrypted?\n","sig":null,"attributes":[{"value":"/ Is the connection encrypted?","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\mod.rs","byte_start":90853,"byte_end":90885,"line_start":123,"line_end":123,"column_start":5,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":1187},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"log","qualname":"::log","value":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\mod.rs","parent":null,"children":[{"krate":0,"index":1188},{"krate":0,"index":1189},{"krate":0,"index":1192},{"krate":0,"index":1195},{"krate":0,"index":1198},{"krate":0,"index":1201},{"krate":0,"index":1204},{"krate":0,"index":1207},{"krate":0,"index":1208},{"krate":0,"index":1211},{"krate":0,"index":1214},{"krate":0,"index":1237},{"krate":0,"index":1240},{"krate":0,"index":1243},{"krate":0,"index":1244}],"decl_id":null,"docs":" Event logging types.","sig":null,"attributes":[{"value":"/ Event logging types.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\mod.rs","byte_start":122694,"byte_end":122718,"line_start":1,"line_end":1,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\mod.rs","byte_start":122719,"byte_end":122722,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\mod.rs","byte_start":122723,"byte_end":122737,"line_start":3,"line_end":3,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\mod.rs","byte_start":122738,"byte_end":122741,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\mod.rs","byte_start":122742,"byte_end":122755,"line_start":5,"line_end":5,"column_start":1,"column_end":14}},{"value":"/ use tide::log;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\mod.rs","byte_start":122756,"byte_end":122774,"line_start":6,"line_end":6,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\mod.rs","byte_start":122775,"byte_end":122778,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ log::start();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\mod.rs","byte_start":122779,"byte_end":122796,"line_start":8,"line_end":8,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\mod.rs","byte_start":122797,"byte_end":122800,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ log::info!(\"Hello cats\");","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\mod.rs","byte_start":122801,"byte_end":122830,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/ log::debug!(\"{} wants tuna\", \"Nori\");","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\mod.rs","byte_start":122831,"byte_end":122872,"line_start":11,"line_end":11,"column_start":1,"column_end":42}},{"value":"/ log::error!(\"We're out of tuna!\");","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\mod.rs","byte_start":122873,"byte_end":122911,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/ log::info!(\"{} are hungry\", \"cats\", {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\mod.rs","byte_start":122912,"byte_end":122953,"line_start":13,"line_end":13,"column_start":1,"column_end":42}},{"value":"/     cat_1: \"Chashu\",","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\mod.rs","byte_start":122954,"byte_end":122978,"line_start":14,"line_end":14,"column_start":1,"column_end":25}},{"value":"/     cat_2: \"Nori\",","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\mod.rs","byte_start":122979,"byte_end":123001,"line_start":15,"line_end":15,"column_start":1,"column_end":23}},{"value":"/ });","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\mod.rs","byte_start":123002,"byte_end":123009,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\mod.rs","byte_start":123010,"byte_end":123017,"line_start":17,"line_end":17,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1902},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\middleware.rs","byte_start":124053,"byte_end":124066,"line_start":17,"line_end":17,"column_start":12,"column_end":25},"name":"LogMiddleware","qualname":"::log::middleware::LogMiddleware","value":"LogMiddleware {  }","parent":null,"children":[{"krate":0,"index":1903}],"decl_id":null,"docs":" Log all incoming requests and responses.","sig":null,"attributes":[{"value":"/ Log all incoming requests and responses.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\middleware.rs","byte_start":123687,"byte_end":123731,"line_start":4,"line_end":4,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\middleware.rs","byte_start":123732,"byte_end":123735,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This middleware is enabled by default in Tide. In the case of","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\middleware.rs","byte_start":123736,"byte_end":123801,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/ nested applications, this middleware will only run once for each","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\middleware.rs","byte_start":123802,"byte_end":123870,"line_start":7,"line_end":7,"column_start":1,"column_end":69}},{"value":"/ request.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\middleware.rs","byte_start":123871,"byte_end":123883,"line_start":8,"line_end":8,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\middleware.rs","byte_start":123884,"byte_end":123887,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\middleware.rs","byte_start":123888,"byte_end":123902,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\middleware.rs","byte_start":123903,"byte_end":123906,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\middleware.rs","byte_start":123907,"byte_end":123914,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ let mut app = tide::Server::new();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\middleware.rs","byte_start":123915,"byte_end":123953,"line_start":13,"line_end":13,"column_start":1,"column_end":39}},{"value":"/ app.with(tide::log::LogMiddleware::new());","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\middleware.rs","byte_start":123954,"byte_end":124000,"line_start":14,"line_end":14,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\middleware.rs","byte_start":124001,"byte_end":124008,"line_start":15,"line_end":15,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1231},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\middleware.rs","byte_start":124218,"byte_end":124221,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"name":"new","qualname":"<LogMiddleware>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance of `LogMiddleware`.\n","sig":null,"attributes":[{"value":"/ Create a new instance of `LogMiddleware`.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\middleware.rs","byte_start":124145,"byte_end":124190,"line_start":24,"line_end":24,"column_start":5,"column_end":50}},{"value":"must_use","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\middleware.rs","byte_start":124195,"byte_end":124206,"line_start":25,"line_end":25,"column_start":5,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":1243},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\mod.rs","byte_start":123286,"byte_end":123291,"line_start":31,"line_end":31,"column_start":8,"column_end":13},"name":"start","qualname":"::log::start","value":"pub fn start()","parent":null,"children":[],"decl_id":null,"docs":" Start logging.\n","sig":null,"attributes":[{"value":"/ Start logging.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\mod.rs","byte_start":123233,"byte_end":123251,"line_start":29,"line_end":29,"column_start":1,"column_end":19}},{"value":"cfg(feature = \"logger\")","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\mod.rs","byte_start":123252,"byte_end":123278,"line_start":30,"line_end":30,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":1244},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\mod.rs","byte_start":123449,"byte_end":123459,"line_start":38,"line_end":38,"column_start":8,"column_end":18},"name":"with_level","qualname":"::log::with_level","value":"pub fn with_level(LevelFilter)","parent":null,"children":[],"decl_id":null,"docs":" Start logging with a log level.\n","sig":null,"attributes":[{"value":"/ Start logging with a log level.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\mod.rs","byte_start":123379,"byte_end":123414,"line_start":36,"line_end":36,"column_start":1,"column_end":36}},{"value":"cfg(feature = \"logger\")","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\mod.rs","byte_start":123415,"byte_end":123441,"line_start":37,"line_end":37,"column_start":1,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":1245},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\prelude.rs","parent":null,"children":[{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1250},{"krate":0,"index":1251},{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1256},{"krate":0,"index":1259}],"decl_id":null,"docs":" The Tide prelude.\n","sig":null,"attributes":[{"value":"/ The Tide prelude.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\prelude.rs","byte_start":127330,"byte_end":127351,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":1262},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"security","qualname":"::security","value":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\mod.rs","parent":null,"children":[{"krate":0,"index":1263},{"krate":0,"index":1325},{"krate":0,"index":1326},{"krate":0,"index":1329}],"decl_id":null,"docs":" HTTP Security Headers.\n","sig":null,"attributes":[{"value":"/ HTTP Security Headers.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\mod.rs","byte_start":127476,"byte_end":127502,"line_start":1,"line_end":1,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1917},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":128132,"byte_end":128146,"line_start":21,"line_end":21,"column_start":12,"column_end":26},"name":"CorsMiddleware","qualname":"::security::cors::CorsMiddleware","value":"CorsMiddleware {  }","parent":null,"children":[{"krate":0,"index":1918},{"krate":0,"index":1919},{"krate":0,"index":1920},{"krate":0,"index":1921},{"krate":0,"index":1922},{"krate":0,"index":1923}],"decl_id":null,"docs":" Middleware for CORS","sig":null,"attributes":[{"value":"/ Middleware for CORS","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":127737,"byte_end":127760,"line_start":7,"line_end":7,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":127761,"byte_end":127764,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":127765,"byte_end":127778,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":127779,"byte_end":127782,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":127783,"byte_end":127796,"line_start":11,"line_end":11,"column_start":1,"column_end":14}},{"value":"/ use http_types::headers::HeaderValue;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":127797,"byte_end":127838,"line_start":12,"line_end":12,"column_start":1,"column_end":42}},{"value":"/ use tide::security::{CorsMiddleware, Origin};","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":127839,"byte_end":127888,"line_start":13,"line_end":13,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":127889,"byte_end":127892,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let cors = CorsMiddleware::new()","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":127893,"byte_end":127929,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/     .allow_methods(\"GET, POST, OPTIONS\".parse::<HeaderValue>().unwrap())","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":127930,"byte_end":128006,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/     .allow_origin(Origin::from(\"*\"))","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":128007,"byte_end":128047,"line_start":17,"line_end":17,"column_start":1,"column_end":41}},{"value":"/     .allow_credentials(false);","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":128048,"byte_end":128082,"line_start":18,"line_end":18,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":128083,"byte_end":128090,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1299},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":128594,"byte_end":128597,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"new","qualname":"<CorsMiddleware>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Cors middleware.\n","sig":null,"attributes":[{"value":"/ Creates a new Cors middleware.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":128532,"byte_end":128566,"line_start":35,"line_end":35,"column_start":5,"column_end":39}},{"value":"must_use","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":128571,"byte_end":128582,"line_start":36,"line_end":36,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1300},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":129001,"byte_end":129018,"line_start":50,"line_end":50,"column_start":12,"column_end":29},"name":"allow_credentials","qualname":"<CorsMiddleware>::allow_credentials","value":"pub fn allow_credentials(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set `allow_credentials` and return new Cors\n","sig":null,"attributes":[{"value":"/ Set `allow_credentials` and return new Cors","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":128926,"byte_end":128973,"line_start":48,"line_end":48,"column_start":5,"column_end":52}},{"value":"must_use","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":128978,"byte_end":128989,"line_start":49,"line_end":49,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1301},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":129301,"byte_end":129314,"line_start":59,"line_end":59,"column_start":12,"column_end":25},"name":"allow_headers","qualname":"<CorsMiddleware>::allow_headers","value":"pub fn allow_headers<T: Into<HeaderValue>>(Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set `allow_headers` and return new Cors\n","sig":null,"attributes":[{"value":"/ Set `allow_headers` and return new Cors","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":129246,"byte_end":129289,"line_start":58,"line_end":58,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1303},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":129487,"byte_end":129494,"line_start":65,"line_end":65,"column_start":12,"column_end":19},"name":"max_age","qualname":"<CorsMiddleware>::max_age","value":"pub fn max_age<T: Into<HeaderValue>>(Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set `max_age` and return new Cors\n","sig":null,"attributes":[{"value":"/ Set `max_age` and return new Cors","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":129438,"byte_end":129475,"line_start":64,"line_end":64,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1305},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":129667,"byte_end":129680,"line_start":71,"line_end":71,"column_start":12,"column_end":25},"name":"allow_methods","qualname":"<CorsMiddleware>::allow_methods","value":"pub fn allow_methods<T: Into<HeaderValue>>(Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set `allow_methods` and return new Cors\n","sig":null,"attributes":[{"value":"/ Set `allow_methods` and return new Cors","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":129612,"byte_end":129655,"line_start":70,"line_end":70,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1307},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":129858,"byte_end":129870,"line_start":77,"line_end":77,"column_start":12,"column_end":24},"name":"allow_origin","qualname":"<CorsMiddleware>::allow_origin","value":"pub fn allow_origin<T: Into<Origin>>(Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set `allow_origin` and return new Cors\n","sig":null,"attributes":[{"value":"/ Set `allow_origin` and return new Cors","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":129804,"byte_end":129846,"line_start":76,"line_end":76,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1309},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":130042,"byte_end":130056,"line_start":83,"line_end":83,"column_start":12,"column_end":26},"name":"expose_headers","qualname":"<CorsMiddleware>::expose_headers","value":"pub fn expose_headers<T: Into<HeaderValue>>(Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set `expose_headers` and return new Cors\n","sig":null,"attributes":[{"value":"/ Set `expose_headers` and return new Cors","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":129986,"byte_end":130030,"line_start":82,"line_end":82,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1939},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":133542,"byte_end":133545,"line_start":193,"line_end":193,"column_start":5,"column_end":8},"name":"Any","qualname":"::security::cors::Origin::Any","value":"Origin::Any","parent":{"krate":0,"index":1938},"children":[],"decl_id":null,"docs":" Wildcard. Accept all origin requests\n","sig":null,"attributes":[{"value":"/ Wildcard. Accept all origin requests","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":133497,"byte_end":133537,"line_start":192,"line_end":192,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1941},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":133592,"byte_end":133597,"line_start":195,"line_end":195,"column_start":5,"column_end":10},"name":"Exact","qualname":"::security::cors::Origin::Exact","value":"Origin::Exact(String)","parent":{"krate":0,"index":1938},"children":[],"decl_id":null,"docs":" Set a single allow_origin target\n","sig":null,"attributes":[{"value":"/ Set a single allow_origin target","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":133551,"byte_end":133587,"line_start":194,"line_end":194,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1944},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":133653,"byte_end":133657,"line_start":197,"line_end":197,"column_start":5,"column_end":9},"name":"List","qualname":"::security::cors::Origin::List","value":"Origin::List(Vec<String>)","parent":{"krate":0,"index":1938},"children":[],"decl_id":null,"docs":" Set multiple allow_origin targets\n","sig":null,"attributes":[{"value":"/ Set multiple allow_origin targets","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":133611,"byte_end":133648,"line_start":196,"line_end":196,"column_start":5,"column_end":42}}]},{"kind":"Enum","id":{"krate":0,"index":1938},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":133484,"byte_end":133490,"line_start":191,"line_end":191,"column_start":10,"column_end":16},"name":"Origin","qualname":"::security::cors::Origin","value":"pub enum Origin { Any, Exact(String), List(Vec<String>), }","parent":null,"children":[{"krate":0,"index":1939},{"krate":0,"index":1941},{"krate":0,"index":1944}],"decl_id":null,"docs":" `allow_origin` enum\n","sig":null,"attributes":[{"value":"/ `allow_origin` enum","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":133410,"byte_end":133433,"line_start":189,"line_end":189,"column_start":1,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":1332},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sse","qualname":"::sse","value":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\mod.rs","parent":null,"children":[{"krate":0,"index":1333},{"krate":0,"index":1382},{"krate":0,"index":1389},{"krate":0,"index":1430},{"krate":0,"index":1431},{"krate":0,"index":1434},{"krate":0,"index":1437},{"krate":0,"index":1440}],"decl_id":null,"docs":" Server-Sent Events (SSE) types.","sig":null,"attributes":[{"value":"/ Server-Sent Events (SSE) types.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\mod.rs","byte_start":140740,"byte_end":140775,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\mod.rs","byte_start":140776,"byte_end":140779,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\mod.rs","byte_start":140780,"byte_end":140792,"line_start":3,"line_end":3,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\mod.rs","byte_start":140793,"byte_end":140796,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Errors originating in the SSE handler will be logged. Errors originating","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\mod.rs","byte_start":140797,"byte_end":140873,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ during the encoding of the SSE stream will be handled by the backend engine","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\mod.rs","byte_start":140874,"byte_end":140953,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/ the way any other IO error is handled.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\mod.rs","byte_start":140954,"byte_end":140996,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\mod.rs","byte_start":140997,"byte_end":141000,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ In the future we may introduce a better mechanism to handle errors that","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\mod.rs","byte_start":141001,"byte_end":141076,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ originate outside of regular endpoints.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\mod.rs","byte_start":141077,"byte_end":141120,"line_start":10,"line_end":10,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\mod.rs","byte_start":141121,"byte_end":141124,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\mod.rs","byte_start":141125,"byte_end":141139,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\mod.rs","byte_start":141140,"byte_end":141143,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\mod.rs","byte_start":141144,"byte_end":141157,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> Result<(), std::io::Error> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\mod.rs","byte_start":141158,"byte_end":141239,"line_start":15,"line_end":15,"column_start":1,"column_end":82}},{"value":"/ #","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\mod.rs","byte_start":141240,"byte_end":141245,"line_start":16,"line_end":16,"column_start":1,"column_end":6}},{"value":"/ use tide::sse;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\mod.rs","byte_start":141246,"byte_end":141264,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\mod.rs","byte_start":141265,"byte_end":141268,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ let mut app = tide::new();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\mod.rs","byte_start":141269,"byte_end":141299,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/ app.at(\"/sse\").get(sse::endpoint(|_req, sender| async move {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\mod.rs","byte_start":141300,"byte_end":141364,"line_start":20,"line_end":20,"column_start":1,"column_end":65}},{"value":"/     sender.send(\"fruit\", \"banana\", None).await?;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\mod.rs","byte_start":141365,"byte_end":141417,"line_start":21,"line_end":21,"column_start":1,"column_end":53}},{"value":"/     sender.send(\"fruit\", \"apple\", None).await?;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\mod.rs","byte_start":141418,"byte_end":141469,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\mod.rs","byte_start":141470,"byte_end":141484,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/ }));","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\mod.rs","byte_start":141485,"byte_end":141493,"line_start":24,"line_end":24,"column_start":1,"column_end":9}},{"value":"/ app.listen(\"localhost:8080\").await?;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\mod.rs","byte_start":141494,"byte_end":141534,"line_start":25,"line_end":25,"column_start":1,"column_end":41}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\mod.rs","byte_start":141535,"byte_end":141552,"line_start":26,"line_end":26,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\mod.rs","byte_start":141553,"byte_end":141560,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1378},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\endpoint.rs","byte_start":142062,"byte_end":142070,"line_start":14,"line_end":14,"column_start":8,"column_end":16},"name":"endpoint","qualname":"::sse::endpoint::endpoint","value":"pub fn endpoint<F, Fut, State>(F) -> SseEndpoint<F, Fut, State> where\nState: Clone + Send + Sync + 'static, F: Fn(Request<State>, Sender) -> Fut +\nSend + Sync + 'static, Fut: Future<Output = Result<()>> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Create an endpoint that can handle SSE connections.\n","sig":null,"attributes":[{"value":"/ Create an endpoint that can handle SSE connections.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\endpoint.rs","byte_start":141999,"byte_end":142054,"line_start":13,"line_end":13,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1958},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\endpoint.rs","byte_start":142469,"byte_end":142480,"line_start":28,"line_end":28,"column_start":12,"column_end":23},"name":"SseEndpoint","qualname":"::sse::endpoint::SseEndpoint","value":"SseEndpoint {  }","parent":null,"children":[{"krate":0,"index":1962},{"krate":0,"index":1963}],"decl_id":null,"docs":" An endpoint that can handle SSE connections.\n","sig":null,"attributes":[{"value":"/ An endpoint that can handle SSE connections.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\endpoint.rs","byte_start":142392,"byte_end":142440,"line_start":26,"line_end":26,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1978},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\sender.rs","byte_start":143923,"byte_end":143929,"line_start":3,"line_end":3,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sse::sender::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":1979}],"decl_id":null,"docs":" An SSE message sender.\n","sig":null,"attributes":[{"value":"/ An SSE message sender.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\sender.rs","byte_start":143868,"byte_end":143894,"line_start":1,"line_end":1,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1385},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\sender.rs","byte_start":144232,"byte_end":144236,"line_start":16,"line_end":16,"column_start":18,"column_end":22},"name":"send","qualname":"<Sender>::send","value":"pub async fn send<'_, '_, '_,\nimpl AsRef<str>: AsRef<str>>(&'_ Self, &'_ str, impl AsRef<str>,\nOption<&'_ str>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Send data from the SSE channel.","sig":null,"attributes":[{"value":"/ Send data from the SSE channel.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\sender.rs","byte_start":144117,"byte_end":144152,"line_start":13,"line_end":13,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\sender.rs","byte_start":144157,"byte_end":144160,"line_start":14,"line_end":14,"column_start":5,"column_end":8}},{"value":"/ Each message consists of a \"name\" and \"data\".","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\sender.rs","byte_start":144165,"byte_end":144214,"line_start":15,"line_end":15,"column_start":5,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":1425},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\upgrade.rs","byte_start":144728,"byte_end":144735,"line_start":12,"line_end":12,"column_start":8,"column_end":15},"name":"upgrade","qualname":"::sse::upgrade::upgrade","value":"pub fn upgrade<F, Fut, State>(Request<State>, F) -> Response where\nState: Clone + Send + Sync + 'static, F: Fn(Request<State>, Sender) -> Fut +\nSend + Sync + 'static, Fut: Future<Output = Result<()>> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Upgrade an existing HTTP connection to an SSE connection.\n","sig":null,"attributes":[{"value":"/ Upgrade an existing HTTP connection to an SSE connection.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\upgrade.rs","byte_start":144659,"byte_end":144720,"line_start":11,"line_end":11,"column_start":1,"column_end":62}}]},{"kind":"Mod","id":{"krate":0,"index":1443},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"utils","qualname":"::utils","value":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","parent":null,"children":[{"krate":0,"index":1444},{"krate":0,"index":1445},{"krate":0,"index":1448},{"krate":0,"index":1451},{"krate":0,"index":1454},{"krate":0,"index":1457},{"krate":0,"index":1460},{"krate":0,"index":1982},{"krate":0,"index":1986},{"krate":0,"index":1989},{"krate":0,"index":1998},{"krate":0,"index":2002},{"krate":0,"index":2005}],"decl_id":null,"docs":" Miscellaneous utilities.\n","sig":null,"attributes":[{"value":"/ Miscellaneous utilities.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","byte_start":145633,"byte_end":145661,"line_start":1,"line_end":1,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":1982},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","byte_start":146254,"byte_end":146260,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"Before","qualname":"::utils::Before","value":"","parent":null,"children":[],"decl_id":null,"docs":" Define a middleware that operates on incoming requests.","sig":null,"attributes":[{"value":"/ Define a middleware that operates on incoming requests.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","byte_start":145773,"byte_end":145832,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","byte_start":145833,"byte_end":145836,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This middleware is useful because it is not possible in Rust yet to use","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","byte_start":145837,"byte_end":145912,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ closures to define inline middleware.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","byte_start":145913,"byte_end":145954,"line_start":10,"line_end":10,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","byte_start":145955,"byte_end":145958,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","byte_start":145959,"byte_end":145973,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","byte_start":145974,"byte_end":145977,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","byte_start":145978,"byte_end":145989,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/ use tide::{utils, Request};","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","byte_start":145990,"byte_end":146021,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/ use std::time::Instant;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","byte_start":146022,"byte_end":146049,"line_start":16,"line_end":16,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","byte_start":146050,"byte_end":146053,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let mut app = tide::new();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","byte_start":146054,"byte_end":146084,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ app.with(utils::Before(|mut request: Request<()>| async move {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","byte_start":146085,"byte_end":146151,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/     request.set_ext(Instant::now());","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","byte_start":146152,"byte_end":146192,"line_start":20,"line_end":20,"column_start":1,"column_end":41}},{"value":"/     request","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","byte_start":146193,"byte_end":146208,"line_start":21,"line_end":21,"column_start":1,"column_end":16}},{"value":"/ }));","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","byte_start":146209,"byte_end":146217,"line_start":22,"line_end":22,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","byte_start":146218,"byte_end":146225,"line_start":23,"line_end":23,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":1985},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","byte_start":146264,"byte_end":146269,"line_start":25,"line_end":25,"column_start":22,"column_end":27},"name":"0","qualname":"::utils::Before::0","value":"F","parent":{"krate":0,"index":1982},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1998},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","byte_start":147316,"byte_end":147321,"line_start":60,"line_end":60,"column_start":12,"column_end":17},"name":"After","qualname":"::utils::After","value":"","parent":null,"children":[],"decl_id":null,"docs":" Define a middleware that operates on outgoing responses.","sig":null,"attributes":[{"value":"/ Define a middleware that operates on outgoing responses.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","byte_start":146700,"byte_end":146760,"line_start":40,"line_end":40,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","byte_start":146761,"byte_end":146764,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ This middleware is useful because it is not possible in Rust yet to use","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","byte_start":146765,"byte_end":146840,"line_start":42,"line_end":42,"column_start":1,"column_end":76}},{"value":"/ closures to define inline middleware.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","byte_start":146841,"byte_end":146882,"line_start":43,"line_end":43,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","byte_start":146883,"byte_end":146886,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","byte_start":146887,"byte_end":146901,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","byte_start":146902,"byte_end":146905,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","byte_start":146906,"byte_end":146917,"line_start":47,"line_end":47,"column_start":1,"column_end":12}},{"value":"/ use tide::{utils, http, Response};","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","byte_start":146918,"byte_end":146956,"line_start":48,"line_end":48,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","byte_start":146957,"byte_end":146960,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ let mut app = tide::new();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","byte_start":146961,"byte_end":146991,"line_start":50,"line_end":50,"column_start":1,"column_end":31}},{"value":"/ app.with(utils::After(|res: Response| async move {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","byte_start":146992,"byte_end":147046,"line_start":51,"line_end":51,"column_start":1,"column_end":55}},{"value":"/     match res.status() {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","byte_start":147047,"byte_end":147075,"line_start":52,"line_end":52,"column_start":1,"column_end":29}},{"value":"/         http::StatusCode::NotFound => Ok(\"Page not found\".into()),","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","byte_start":147076,"byte_end":147146,"line_start":53,"line_end":53,"column_start":1,"column_end":71}},{"value":"/         http::StatusCode::InternalServerError => Ok(\"Something went wrong\".into()),","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","byte_start":147147,"byte_end":147234,"line_start":54,"line_end":54,"column_start":1,"column_end":88}},{"value":"/         _ => Ok(res),","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","byte_start":147235,"byte_end":147260,"line_start":55,"line_end":55,"column_start":1,"column_end":26}},{"value":"/     }","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","byte_start":147261,"byte_end":147270,"line_start":56,"line_end":56,"column_start":1,"column_end":10}},{"value":"/ }));","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","byte_start":147271,"byte_end":147279,"line_start":57,"line_end":57,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","byte_start":147280,"byte_end":147287,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":2001},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","byte_start":147325,"byte_end":147330,"line_start":60,"line_end":60,"column_start":21,"column_end":26},"name":"0","qualname":"::utils::After::0","value":"F","parent":{"krate":0,"index":1998},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1463},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sessions","qualname":"::sessions","value":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","parent":null,"children":[{"krate":0,"index":1464},{"krate":0,"index":1467},{"krate":0,"index":1558},{"krate":0,"index":1559},{"krate":0,"index":1560},{"krate":0,"index":1562},{"krate":0,"index":1565},{"krate":0,"index":1568}],"decl_id":null,"docs":" # Tide session support","sig":null,"attributes":[{"value":"cfg(feature = \"sessions\")","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":2544,"byte_end":2572,"line_start":86,"line_end":86,"column_start":1,"column_end":29}},{"value":"/ # Tide session support","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":147822,"byte_end":147848,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":147849,"byte_end":147852,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This document provides a high-level overview of tide's approach to","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":147853,"byte_end":147923,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ sessions. For implementation and examples, please refer to","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":147924,"byte_end":147986,"line_start":4,"line_end":4,"column_start":1,"column_end":63}},{"value":"/ [SessionMiddleware](crate::sessions::SessionMiddleware)","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":147987,"byte_end":148046,"line_start":5,"line_end":5,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":148047,"byte_end":148050,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Sessions allows tide to securely attach data to a browser session","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":148051,"byte_end":148120,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/ allowing for retrieval and modification of this data within tide","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":148121,"byte_end":148189,"line_start":8,"line_end":8,"column_start":1,"column_end":69}},{"value":"/ on subsequent visits. Session data is generally only retained for","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":148190,"byte_end":148259,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"/ the duration of a browser session.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":148260,"byte_end":148298,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":148299,"byte_end":148302,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Tide's session implementation provides guest sessions by default,","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":148303,"byte_end":148372,"line_start":12,"line_end":12,"column_start":1,"column_end":70}},{"value":"/ meaning that all web requests to a session-enabled tide host will","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":148373,"byte_end":148442,"line_start":13,"line_end":13,"column_start":1,"column_end":70}},{"value":"/ have a cookie attached, whether or not there is anything stored in","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":148443,"byte_end":148513,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ that client's session yet.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":148514,"byte_end":148544,"line_start":15,"line_end":15,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":148545,"byte_end":148548,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ## Stores","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":148549,"byte_end":148562,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":148563,"byte_end":148566,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Although tide provides two bundled session stores, it is highly","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":148567,"byte_end":148634,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"/ recommended that tide applications use an","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":148635,"byte_end":148680,"line_start":20,"line_end":20,"column_start":1,"column_end":46}},{"value":"/ external-datastore-backed session storage. For a list of currently","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":148681,"byte_end":148751,"line_start":21,"line_end":21,"column_start":1,"column_end":71}},{"value":"/ available session stores, see [the documentation for","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":148752,"byte_end":148808,"line_start":22,"line_end":22,"column_start":1,"column_end":57}},{"value":"/ async-session](https://github.com/http-rs/async-session).","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":148809,"byte_end":148870,"line_start":23,"line_end":23,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":148871,"byte_end":148874,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ## Security","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":148875,"byte_end":148890,"line_start":25,"line_end":25,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":148891,"byte_end":148894,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Although each session store may have different security","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":148895,"byte_end":148954,"line_start":27,"line_end":27,"column_start":1,"column_end":60}},{"value":"/ implications, the general approach of tide's session system is as","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":148955,"byte_end":149024,"line_start":28,"line_end":28,"column_start":1,"column_end":70}},{"value":"/ follows: On each request, tide checks the cookie configurable as","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":149025,"byte_end":149093,"line_start":29,"line_end":29,"column_start":1,"column_end":69}},{"value":"/ `cookie_name` on the middleware.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":149094,"byte_end":149130,"line_start":30,"line_end":30,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":149131,"byte_end":149134,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ### If no cookie is found:","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":149135,"byte_end":149165,"line_start":32,"line_end":32,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":149166,"byte_end":149169,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ A cryptographically random cookie value is generated. A cookie is","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":149170,"byte_end":149239,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/ set on the outbound response and signed with an HKDF key derived","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":149240,"byte_end":149308,"line_start":35,"line_end":35,"column_start":1,"column_end":69}},{"value":"/ from the `secret` provided on creation of the SessionMiddleware.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":149309,"byte_end":149377,"line_start":36,"line_end":36,"column_start":1,"column_end":69}},{"value":"/ The configurable session store uses a SHA256 digest of the cookie","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":149378,"byte_end":149447,"line_start":37,"line_end":37,"column_start":1,"column_end":70}},{"value":"/ value and stores the session along with a potential expiry.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":149448,"byte_end":149511,"line_start":38,"line_end":38,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":149512,"byte_end":149515,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ### If a cookie is found:","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":149516,"byte_end":149545,"line_start":40,"line_end":40,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":149546,"byte_end":149549,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ The hkdf derived signing key is used to verify the cookie value's","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":149550,"byte_end":149619,"line_start":42,"line_end":42,"column_start":1,"column_end":70}},{"value":"/ signature. If it verifies, it is then passed to the session store","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":149620,"byte_end":149689,"line_start":43,"line_end":43,"column_start":1,"column_end":70}},{"value":"/ to retrieve a Session. For most session stores, this will involve","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":149690,"byte_end":149759,"line_start":44,"line_end":44,"column_start":1,"column_end":70}},{"value":"/ taking a SHA256 digest of the cookie value and retrieving a","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":149760,"byte_end":149823,"line_start":45,"line_end":45,"column_start":1,"column_end":64}},{"value":"/ serialized Session from an external datastore based on that","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":149824,"byte_end":149887,"line_start":46,"line_end":46,"column_start":1,"column_end":64}},{"value":"/ digest.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":149888,"byte_end":149899,"line_start":47,"line_end":47,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":149900,"byte_end":149903,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ### Expiry","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":149904,"byte_end":149918,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":149919,"byte_end":149922,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ In addition to setting an expiry on the session cookie, tide","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":149923,"byte_end":149987,"line_start":51,"line_end":51,"column_start":1,"column_end":65}},{"value":"/ sessions include the same expiry in their serialization format. If","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":149988,"byte_end":150058,"line_start":52,"line_end":52,"column_start":1,"column_end":71}},{"value":"/ an adversary were able to tamper with the expiry of a cookie, tide","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":150059,"byte_end":150129,"line_start":53,"line_end":53,"column_start":1,"column_end":71}},{"value":"/ sessions would still check the expiry on the contained session","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":150130,"byte_end":150196,"line_start":54,"line_end":54,"column_start":1,"column_end":67}},{"value":"/ before using it","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":150197,"byte_end":150216,"line_start":55,"line_end":55,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":150217,"byte_end":150220,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ### If anything goes wrong with the above process","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":150221,"byte_end":150274,"line_start":57,"line_end":57,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":150275,"byte_end":150278,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ If there are any failures in the above session retrieval process,","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":150279,"byte_end":150348,"line_start":59,"line_end":59,"column_start":1,"column_end":70}},{"value":"/ a new empty session is generated for the request, which proceeds","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":150349,"byte_end":150417,"line_start":60,"line_end":60,"column_start":1,"column_end":69}},{"value":"/ through the application as normal.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":150418,"byte_end":150456,"line_start":61,"line_end":61,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":150457,"byte_end":150460,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ## Stale/expired session cleanup","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":150461,"byte_end":150497,"line_start":63,"line_end":63,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":150498,"byte_end":150501,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Any session store other than the cookie store will accumulate","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":150502,"byte_end":150567,"line_start":65,"line_end":65,"column_start":1,"column_end":66}},{"value":"/ stale sessions.  Although the tide session middleware ensures that","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":150568,"byte_end":150638,"line_start":66,"line_end":66,"column_start":1,"column_end":71}},{"value":"/ they will not be used as valid sessions, For most session stores,","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":150639,"byte_end":150708,"line_start":67,"line_end":67,"column_start":1,"column_end":70}},{"value":"/ it is the tide application's responsibility to call cleanup on the","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":150709,"byte_end":150779,"line_start":68,"line_end":68,"column_start":1,"column_end":71}},{"value":"/ session store if it requires it","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":150780,"byte_end":150815,"line_start":69,"line_end":69,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\mod.rs","byte_start":150816,"byte_end":150819,"line_start":70,"line_end":70,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":1523},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":152480,"byte_end":152497,"line_start":50,"line_end":50,"column_start":12,"column_end":29},"name":"SessionMiddleware","qualname":"::sessions::middleware::SessionMiddleware","value":"SessionMiddleware {  }","parent":null,"children":[{"krate":0,"index":1525},{"krate":0,"index":1526},{"krate":0,"index":1527},{"krate":0,"index":1528},{"krate":0,"index":1529},{"krate":0,"index":1530},{"krate":0,"index":1531},{"krate":0,"index":1532}],"decl_id":null,"docs":" # Middleware to enable sessions.\n See [sessions](crate::sessions) for an overview of tide's approach to sessions.","sig":null,"attributes":[{"value":"/ # Middleware to enable sessions.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":151351,"byte_end":151387,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/ See [sessions](crate::sessions) for an overview of tide's approach to sessions.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":151388,"byte_end":151471,"line_start":18,"line_end":18,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":151472,"byte_end":151475,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":151476,"byte_end":151490,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":151491,"byte_end":151502,"line_start":21,"line_end":21,"column_start":1,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":151503,"byte_end":151542,"line_start":22,"line_end":22,"column_start":1,"column_end":40}},{"value":"/ let mut app = tide::new();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":151543,"byte_end":151573,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":151574,"byte_end":151577,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ app.with(tide::sessions::SessionMiddleware::new(","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":151578,"byte_end":151630,"line_start":25,"line_end":25,"column_start":1,"column_end":53}},{"value":"/     tide::sessions::MemoryStore::new(),","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":151631,"byte_end":151674,"line_start":26,"line_end":26,"column_start":1,"column_end":44}},{"value":"/     b\"we recommend you use std::env::var(\\\"TIDE_SECRET\\\").unwrap().as_bytes() instead of a fixed value\"","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":151675,"byte_end":151782,"line_start":27,"line_end":27,"column_start":1,"column_end":108}},{"value":"/ ));","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":151783,"byte_end":151790,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":151791,"byte_end":151794,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ app.with(tide::utils::Before(|mut request: tide::Request<()>| async move {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":151795,"byte_end":151873,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/     let session = request.session_mut();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":151874,"byte_end":151918,"line_start":31,"line_end":31,"column_start":1,"column_end":45}},{"value":"/     let visits: usize = session.get(\"visits\").unwrap_or_default();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":151919,"byte_end":151989,"line_start":32,"line_end":32,"column_start":1,"column_end":71}},{"value":"/     session.insert(\"visits\", visits + 1).unwrap();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":151990,"byte_end":152044,"line_start":33,"line_end":33,"column_start":1,"column_end":55}},{"value":"/     request","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":152045,"byte_end":152060,"line_start":34,"line_end":34,"column_start":1,"column_end":16}},{"value":"/ }));","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":152061,"byte_end":152069,"line_start":35,"line_end":35,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":152070,"byte_end":152073,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ app.at(\"/\").get(|req: tide::Request<()>| async move {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":152074,"byte_end":152131,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/     let visits: usize = req.session().get(\"visits\").unwrap();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":152132,"byte_end":152197,"line_start":38,"line_end":38,"column_start":1,"column_end":66}},{"value":"/     Ok(format!(\"you have visited this website {} times\", visits))","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":152198,"byte_end":152267,"line_start":39,"line_end":39,"column_start":1,"column_end":70}},{"value":"/ });","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":152268,"byte_end":152275,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":152276,"byte_end":152279,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ app.at(\"/reset\")","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":152280,"byte_end":152300,"line_start":42,"line_end":42,"column_start":1,"column_end":21}},{"value":"/     .get(|mut req: tide::Request<()>| async move {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":152301,"byte_end":152355,"line_start":43,"line_end":43,"column_start":1,"column_end":55}},{"value":"/         req.session_mut().destroy();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":152356,"byte_end":152396,"line_start":44,"line_end":44,"column_start":1,"column_end":41}},{"value":"/         Ok(tide::Redirect::new(\"/\"))","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":152397,"byte_end":152437,"line_start":45,"line_end":45,"column_start":1,"column_end":41}},{"value":"/      });","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":152438,"byte_end":152450,"line_start":46,"line_end":46,"column_start":1,"column_end":13}},{"value":"/ # })","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":152451,"byte_end":152459,"line_start":47,"line_end":47,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":152460,"byte_end":152467,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1538},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":156597,"byte_end":156600,"line_start":168,"line_end":168,"column_start":12,"column_end":15},"name":"new","qualname":"<SessionMiddleware<Store>>::new","value":"pub fn new(Store, &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new SessionMiddleware with a mandatory cookie\n signing secret. The `secret` MUST be at least 32 bytes long,\n and MUST be cryptographically random to be secure. It is\n recommended to retrieve this at runtime from the environment\n instead of compiling it into your\n application.","sig":null,"attributes":[{"value":"/ Creates a new SessionMiddleware with a mandatory cookie","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":154988,"byte_end":155047,"line_start":125,"line_end":125,"column_start":5,"column_end":64}},{"value":"/ signing secret. The `secret` MUST be at least 32 bytes long,","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":155052,"byte_end":155116,"line_start":126,"line_end":126,"column_start":5,"column_end":69}},{"value":"/ and MUST be cryptographically random to be secure. It is","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":155121,"byte_end":155181,"line_start":127,"line_end":127,"column_start":5,"column_end":65}},{"value":"/ recommended to retrieve this at runtime from the environment","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":155186,"byte_end":155250,"line_start":128,"line_end":128,"column_start":5,"column_end":69}},{"value":"/ instead of compiling it into your","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":155255,"byte_end":155292,"line_start":129,"line_end":129,"column_start":5,"column_end":42}},{"value":"/ application.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":155297,"byte_end":155313,"line_start":130,"line_end":130,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":155318,"byte_end":155321,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":155326,"byte_end":155338,"line_start":132,"line_end":132,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":155343,"byte_end":155346,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ SessionMiddleware::new will panic if the secret is fewer than","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":155351,"byte_end":155416,"line_start":134,"line_end":134,"column_start":5,"column_end":70}},{"value":"/ 32 bytes.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":155421,"byte_end":155434,"line_start":135,"line_end":135,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":155439,"byte_end":155442,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Defaults","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":155447,"byte_end":155461,"line_start":137,"line_end":137,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":155466,"byte_end":155469,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ The defaults for SessionMiddleware are:","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":155474,"byte_end":155517,"line_start":139,"line_end":139,"column_start":5,"column_end":48}},{"value":"/ * cookie path: \"/\"","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":155522,"byte_end":155544,"line_start":140,"line_end":140,"column_start":5,"column_end":27}},{"value":"/ * cookie name: \"tide.sid\"","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":155549,"byte_end":155578,"line_start":141,"line_end":141,"column_start":5,"column_end":34}},{"value":"/ * session ttl: one day","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":155583,"byte_end":155609,"line_start":142,"line_end":142,"column_start":5,"column_end":31}},{"value":"/ * same site: strict","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":155614,"byte_end":155637,"line_start":143,"line_end":143,"column_start":5,"column_end":28}},{"value":"/ * save unchanged: enabled","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":155642,"byte_end":155671,"line_start":144,"line_end":144,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":155676,"byte_end":155679,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ # Customization","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":155684,"byte_end":155703,"line_start":146,"line_end":146,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":155708,"byte_end":155711,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ Although the above defaults are appropriate for most","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":155716,"byte_end":155772,"line_start":148,"line_end":148,"column_start":5,"column_end":61}},{"value":"/ applications, they can be overridden. Please be careful","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":155777,"byte_end":155836,"line_start":149,"line_end":149,"column_start":5,"column_end":64}},{"value":"/ changing these settings, as they can weaken your application's","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":155841,"byte_end":155907,"line_start":150,"line_end":150,"column_start":5,"column_end":71}},{"value":"/ security:","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":155912,"byte_end":155925,"line_start":151,"line_end":151,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":155930,"byte_end":155933,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":155938,"byte_end":155949,"line_start":153,"line_end":153,"column_start":5,"column_end":16}},{"value":"/ # use tide::http::cookies::SameSite;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":155954,"byte_end":155994,"line_start":154,"line_end":154,"column_start":5,"column_end":45}},{"value":"/ # use std::time::Duration;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":155999,"byte_end":156029,"line_start":155,"line_end":155,"column_start":5,"column_end":35}},{"value":"/ # use tide::sessions::{SessionMiddleware, MemoryStore};","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":156034,"byte_end":156093,"line_start":156,"line_end":156,"column_start":5,"column_end":64}},{"value":"/ let mut app = tide::new();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":156098,"byte_end":156128,"line_start":157,"line_end":157,"column_start":5,"column_end":35}},{"value":"/ app.with(","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":156133,"byte_end":156146,"line_start":158,"line_end":158,"column_start":5,"column_end":18}},{"value":"/     SessionMiddleware::new(MemoryStore::new(), b\"please do not hardcode your secret\")","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":156151,"byte_end":156240,"line_start":159,"line_end":159,"column_start":5,"column_end":94}},{"value":"/         .with_cookie_name(\"custom.cookie.name\")","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":156245,"byte_end":156296,"line_start":160,"line_end":160,"column_start":5,"column_end":56}},{"value":"/         .with_cookie_path(\"/some/path\")","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":156301,"byte_end":156344,"line_start":161,"line_end":161,"column_start":5,"column_end":48}},{"value":"/         .with_cookie_domain(\"www.rust-lang.org\")","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":156349,"byte_end":156401,"line_start":162,"line_end":162,"column_start":5,"column_end":57}},{"value":"/         .with_same_site_policy(SameSite::Lax)","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":156406,"byte_end":156455,"line_start":163,"line_end":163,"column_start":5,"column_end":54}},{"value":"/         .with_session_ttl(Some(Duration::from_secs(1)))","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":156460,"byte_end":156519,"line_start":164,"line_end":164,"column_start":5,"column_end":64}},{"value":"/         .without_save_unchanged(),","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":156524,"byte_end":156562,"line_start":165,"line_end":165,"column_start":5,"column_end":43}},{"value":"/ );","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":156567,"byte_end":156573,"line_start":166,"line_end":166,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":156578,"byte_end":156585,"line_start":167,"line_end":167,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1539},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":157105,"byte_end":157121,"line_start":183,"line_end":183,"column_start":12,"column_end":28},"name":"with_cookie_path","qualname":"<SessionMiddleware<Store>>::with_cookie_path","value":"pub fn with_cookie_path<impl AsRef<str>: AsRef<str>>(Self, impl AsRef<str>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a cookie path for this session middleware.\n The default for this value is \"/\"\n","sig":null,"attributes":[{"value":"/ Sets a cookie path for this session middleware.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":157000,"byte_end":157051,"line_start":181,"line_end":181,"column_start":5,"column_end":56}},{"value":"/ The default for this value is \"/\"","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":157056,"byte_end":157093,"line_start":182,"line_end":182,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1541},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":157530,"byte_end":157546,"line_start":193,"line_end":193,"column_start":12,"column_end":28},"name":"with_session_ttl","qualname":"<SessionMiddleware<Store>>::with_session_ttl","value":"pub fn with_session_ttl(Self, Option<Duration>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a session ttl. This will be used both for the cookie\n expiry and also for the session-internal expiry.","sig":null,"attributes":[{"value":"/ Sets a session ttl. This will be used both for the cookie","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":157256,"byte_end":157317,"line_start":188,"line_end":188,"column_start":5,"column_end":66}},{"value":"/ expiry and also for the session-internal expiry.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":157322,"byte_end":157374,"line_start":189,"line_end":189,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":157379,"byte_end":157382,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ The default for this value is one day. Set this to None to not","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":157387,"byte_end":157453,"line_start":191,"line_end":191,"column_start":5,"column_end":71}},{"value":"/ set a cookie or session expiry. This is not recommended.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":157458,"byte_end":157518,"line_start":192,"line_end":192,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1542},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":157927,"byte_end":157943,"line_start":203,"line_end":203,"column_start":12,"column_end":28},"name":"with_cookie_name","qualname":"<SessionMiddleware<Store>>::with_cookie_name","value":"pub fn with_cookie_name<impl AsRef<str>: AsRef<str>>(Self, impl AsRef<str>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the name of the cookie that the session is stored with or in.","sig":null,"attributes":[{"value":"/ Sets the name of the cookie that the session is stored with or in.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":157662,"byte_end":157732,"line_start":198,"line_end":198,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":157737,"byte_end":157740,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ If you are running multiple tide applications on the same","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":157745,"byte_end":157806,"line_start":200,"line_end":200,"column_start":5,"column_end":66}},{"value":"/ domain, you will need different values for each","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":157811,"byte_end":157862,"line_start":201,"line_end":201,"column_start":5,"column_end":56}},{"value":"/ application. The default value is \"tide.sid\"","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":157867,"byte_end":157915,"line_start":202,"line_end":202,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1544},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":158519,"byte_end":158541,"line_start":215,"line_end":215,"column_start":12,"column_end":34},"name":"without_save_unchanged","qualname":"<SessionMiddleware<Store>>::without_save_unchanged","value":"pub fn without_save_unchanged(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Disables the `save_unchanged` setting. When `save_unchanged`\n is enabled, a session will cookie will always be set. With\n `save_unchanged` disabled, the session data must be modified\n from the `Default` value in order for it to save. If a session\n already exists and its data unmodified in the course of a\n request, the session will only be persisted if\n `save_unchanged` is enabled.\n","sig":null,"attributes":[{"value":"/ Disables the `save_unchanged` setting. When `save_unchanged`","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":158078,"byte_end":158142,"line_start":208,"line_end":208,"column_start":5,"column_end":69}},{"value":"/ is enabled, a session will cookie will always be set. With","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":158147,"byte_end":158209,"line_start":209,"line_end":209,"column_start":5,"column_end":67}},{"value":"/ `save_unchanged` disabled, the session data must be modified","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":158214,"byte_end":158278,"line_start":210,"line_end":210,"column_start":5,"column_end":69}},{"value":"/ from the `Default` value in order for it to save. If a session","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":158283,"byte_end":158349,"line_start":211,"line_end":211,"column_start":5,"column_end":71}},{"value":"/ already exists and its data unmodified in the course of a","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":158354,"byte_end":158415,"line_start":212,"line_end":212,"column_start":5,"column_end":66}},{"value":"/ request, the session will only be persisted if","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":158420,"byte_end":158470,"line_start":213,"line_end":213,"column_start":5,"column_end":55}},{"value":"/ `save_unchanged` is enabled.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":158475,"byte_end":158507,"line_start":214,"line_end":214,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1545},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":158882,"byte_end":158903,"line_start":224,"line_end":224,"column_start":12,"column_end":33},"name":"with_same_site_policy","qualname":"<SessionMiddleware<Store>>::with_same_site_policy","value":"pub fn with_same_site_policy(Self, SameSite) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the same site policy for the session cookie. Defaults to\n SameSite::Strict. See [incrementally better\n cookies](https://tools.ietf.org/html/draft-west-cookie-incrementalism-01)\n for more information about this setting\n","sig":null,"attributes":[{"value":"/ Sets the same site policy for the session cookie. Defaults to","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":158623,"byte_end":158688,"line_start":220,"line_end":220,"column_start":5,"column_end":70}},{"value":"/ SameSite::Strict. See [incrementally better","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":158693,"byte_end":158740,"line_start":221,"line_end":221,"column_start":5,"column_end":52}},{"value":"/ cookies](https://tools.ietf.org/html/draft-west-cookie-incrementalism-01)","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":158745,"byte_end":158822,"line_start":222,"line_end":222,"column_start":5,"column_end":82}},{"value":"/ for more information about this setting","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":158827,"byte_end":158870,"line_start":223,"line_end":223,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1546},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":159052,"byte_end":159070,"line_start":230,"line_end":230,"column_start":12,"column_end":30},"name":"with_cookie_domain","qualname":"<SessionMiddleware<Store>>::with_cookie_domain","value":"pub fn with_cookie_domain<impl AsRef<str>: AsRef<str>>(Self, impl AsRef<str>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the domain of the cookie.\n","sig":null,"attributes":[{"value":"/ Sets the domain of the cookie.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":159006,"byte_end":159040,"line_start":229,"line_end":229,"column_start":5,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1615},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":3256,"byte_end":3259,"line_start":115,"line_end":115,"column_start":8,"column_end":11},"name":"new","qualname":"::new","value":"pub fn new() -> server::Server<()>","parent":null,"children":[],"decl_id":null,"docs":" Create a new Tide server.","sig":null,"attributes":[{"value":"/ Create a new Tide server.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":2902,"byte_end":2931,"line_start":100,"line_end":100,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":2932,"byte_end":2935,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":2936,"byte_end":2950,"line_start":102,"line_end":102,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":2951,"byte_end":2954,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":2955,"byte_end":2968,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/ # use async_std::task::block_on;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":2969,"byte_end":3005,"line_start":105,"line_end":105,"column_start":1,"column_end":37}},{"value":"/ # fn main() -> Result<(), std::io::Error> { block_on(async {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":3006,"byte_end":3070,"line_start":106,"line_end":106,"column_start":1,"column_end":65}},{"value":"/ #","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":3071,"byte_end":3076,"line_start":107,"line_end":107,"column_start":1,"column_end":6}},{"value":"/ let mut app = tide::new();","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":3077,"byte_end":3107,"line_start":108,"line_end":108,"column_start":1,"column_end":31}},{"value":"/ app.at(\"/\").get(|_| async { Ok(\"Hello, world!\") });","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":3108,"byte_end":3163,"line_start":109,"line_end":109,"column_start":1,"column_end":56}},{"value":"/ app.listen(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":3164,"byte_end":3204,"line_start":110,"line_end":110,"column_start":1,"column_end":41}},{"value":"/ #","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":3205,"byte_end":3210,"line_start":111,"line_end":111,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":3211,"byte_end":3228,"line_start":112,"line_end":112,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":3229,"byte_end":3236,"line_start":113,"line_end":113,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":3237,"byte_end":3248,"line_start":114,"line_end":114,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":1616},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":4113,"byte_end":4123,"line_start":151,"line_end":151,"column_start":8,"column_end":18},"name":"with_state","qualname":"::with_state","value":"pub fn with_state<State>(State) -> server::Server<State> where State: Clone +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Create a new Tide server with shared application scoped state.","sig":null,"attributes":[{"value":"/ Create a new Tide server with shared application scoped state.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":3307,"byte_end":3373,"line_start":119,"line_end":119,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":3374,"byte_end":3377,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ Application scoped state is useful for storing items","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":3378,"byte_end":3434,"line_start":121,"line_end":121,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":3435,"byte_end":3438,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":3439,"byte_end":3453,"line_start":123,"line_end":123,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":3454,"byte_end":3457,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":3458,"byte_end":3471,"line_start":125,"line_end":125,"column_start":1,"column_end":14}},{"value":"/ # use async_std::task::block_on;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":3472,"byte_end":3508,"line_start":126,"line_end":126,"column_start":1,"column_end":37}},{"value":"/ # fn main() -> Result<(), std::io::Error> { block_on(async {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":3509,"byte_end":3573,"line_start":127,"line_end":127,"column_start":1,"column_end":65}},{"value":"/ #","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":3574,"byte_end":3579,"line_start":128,"line_end":128,"column_start":1,"column_end":6}},{"value":"/ use tide::Request;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":3580,"byte_end":3602,"line_start":129,"line_end":129,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":3603,"byte_end":3606,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ /// The shared application state.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":3607,"byte_end":3644,"line_start":131,"line_end":131,"column_start":1,"column_end":38}},{"value":"/ #[derive(Clone)]","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":3645,"byte_end":3665,"line_start":132,"line_end":132,"column_start":1,"column_end":21}},{"value":"/ struct State {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":3666,"byte_end":3684,"line_start":133,"line_end":133,"column_start":1,"column_end":19}},{"value":"/     name: String,","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":3685,"byte_end":3706,"line_start":134,"line_end":134,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":3707,"byte_end":3712,"line_start":135,"line_end":135,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":3713,"byte_end":3716,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ // Define a new instance of the state.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":3717,"byte_end":3759,"line_start":137,"line_end":137,"column_start":1,"column_end":43}},{"value":"/ let state = State {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":3760,"byte_end":3783,"line_start":138,"line_end":138,"column_start":1,"column_end":24}},{"value":"/     name: \"Nori\".to_string()","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":3784,"byte_end":3816,"line_start":139,"line_end":139,"column_start":1,"column_end":33}},{"value":"/ };","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":3817,"byte_end":3823,"line_start":140,"line_end":140,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":3824,"byte_end":3827,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ // Initialize the application with state.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":3828,"byte_end":3873,"line_start":142,"line_end":142,"column_start":1,"column_end":46}},{"value":"/ let mut app = tide::with_state(state);","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":3874,"byte_end":3916,"line_start":143,"line_end":143,"column_start":1,"column_end":43}},{"value":"/ app.at(\"/\").get(|req: Request<State>| async move {","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":3917,"byte_end":3971,"line_start":144,"line_end":144,"column_start":1,"column_end":55}},{"value":"/     Ok(format!(\"Hello, {}!\", &req.state().name))","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":3972,"byte_end":4024,"line_start":145,"line_end":145,"column_start":1,"column_end":53}},{"value":"/ });","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":4025,"byte_end":4032,"line_start":146,"line_end":146,"column_start":1,"column_end":8}},{"value":"/ app.listen(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":4033,"byte_end":4073,"line_start":147,"line_end":147,"column_start":1,"column_end":41}},{"value":"/ #","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":4074,"byte_end":4079,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":4080,"byte_end":4097,"line_start":149,"line_end":149,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":4098,"byte_end":4105,"line_start":150,"line_end":150,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":1618},"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":4302,"byte_end":4308,"line_start":159,"line_end":159,"column_start":10,"column_end":16},"name":"Result","qualname":"::Result","value":"std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" A specialized Result type for Tide.\n","sig":null,"attributes":[{"value":"/ A specialized Result type for Tide.","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":4253,"byte_end":4292,"line_start":158,"line_end":158,"column_start":1,"column_end":40}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\cookies\\middleware.rs","byte_start":5453,"byte_end":5470,"line_start":30,"line_end":30,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\cookies\\middleware.rs","byte_start":5663,"byte_end":5680,"line_start":38,"line_end":38,"column_start":66,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":1630}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\cookies\\middleware.rs","byte_start":7231,"byte_end":7238,"line_start":85,"line_end":85,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\cookies\\middleware.rs","byte_start":7857,"byte_end":7867,"line_start":114,"line_end":114,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","byte_start":10685,"byte_end":10686,"line_start":56,"line_end":56,"column_start":46,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1662}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","byte_start":11194,"byte_end":11212,"line_start":75,"line_end":75,"column_start":33,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","byte_start":11418,"byte_end":11436,"line_start":84,"line_end":84,"column_start":36,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","byte_start":11673,"byte_end":11691,"line_start":94,"line_end":94,"column_start":16,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","byte_start":12210,"byte_end":12228,"line_start":115,"line_end":115,"column_start":36,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1669}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","byte_start":12619,"byte_end":12622,"line_start":130,"line_end":130,"column_start":64,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1675}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\fs\\serve_dir.rs","byte_start":13279,"byte_end":13287,"line_start":14,"line_end":14,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\fs\\serve_dir.rs","byte_start":13495,"byte_end":13503,"line_start":22,"line_end":22,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1681}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\fs\\serve_file.rs","byte_start":16700,"byte_end":16709,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\fs\\serve_file.rs","byte_start":17048,"byte_end":17057,"line_start":24,"line_end":24,"column_start":64,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":1687}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\middleware.rs","byte_start":19666,"byte_end":19667,"line_start":24,"line_end":24,"column_start":38,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1702}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\middleware.rs","byte_start":20339,"byte_end":20343,"line_start":47,"line_end":47,"column_start":44,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\redirect.rs","byte_start":22100,"byte_end":22108,"line_start":46,"line_end":46,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\redirect.rs","byte_start":23264,"byte_end":23272,"line_start":89,"line_end":89,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1720}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\redirect.rs","byte_start":23517,"byte_end":23525,"line_start":99,"line_end":99,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":24984,"byte_end":24991,"line_start":34,"line_end":34,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":340},{"krate":0,"index":342},{"krate":0,"index":345},{"krate":0,"index":348},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":356},{"krate":0,"index":358},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":364},{"krate":0,"index":366},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":372},{"krate":0,"index":375},{"krate":0,"index":379},{"krate":0,"index":383},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":40331,"byte_end":40338,"line_start":539,"line_end":539,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":40453,"byte_end":40460,"line_start":545,"line_end":545,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":40587,"byte_end":40594,"line_start":551,"line_end":551,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":40717,"byte_end":40724,"line_start":557,"line_end":557,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":40839,"byte_end":40846,"line_start":563,"line_end":563,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":41084,"byte_end":41091,"line_start":573,"line_end":573,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":41222,"byte_end":41229,"line_start":579,"line_end":579,"column_start":59,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":41518,"byte_end":41525,"line_start":587,"line_end":587,"column_start":63,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":41714,"byte_end":41721,"line_start":595,"line_end":595,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":42534,"byte_end":42541,"line_start":626,"line_end":626,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":432},{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":42882,"byte_end":42889,"line_start":640,"line_end":640,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":436},{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":44606,"byte_end":44614,"line_start":25,"line_end":25,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":490},{"krate":0,"index":492},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":501},{"krate":0,"index":503},{"krate":0,"index":505},{"krate":0,"index":508},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":518},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":530},{"krate":0,"index":532},{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":54782,"byte_end":54790,"line_start":335,"line_end":335,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":54893,"byte_end":54901,"line_start":341,"line_end":341,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":55015,"byte_end":55023,"line_start":347,"line_end":347,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":55132,"byte_end":55140,"line_start":353,"line_end":353,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":55257,"byte_end":55265,"line_start":359,"line_end":359,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":55364,"byte_end":55372,"line_start":365,"line_end":365,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":55539,"byte_end":55547,"line_start":373,"line_end":373,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":55787,"byte_end":55795,"line_start":381,"line_end":381,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":56013,"byte_end":56021,"line_start":391,"line_end":391,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":56204,"byte_end":56212,"line_start":401,"line_end":401,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":56356,"byte_end":56364,"line_start":408,"line_end":408,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":56472,"byte_end":56480,"line_start":414,"line_end":414,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":56598,"byte_end":56606,"line_start":420,"line_end":420,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":57379,"byte_end":57387,"line_start":451,"line_end":451,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":578},{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":57715,"byte_end":57723,"line_start":465,"line_end":465,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":581},{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":59452,"byte_end":59467,"line_start":30,"line_end":30,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":608},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":614},{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":61057,"byte_end":61072,"line_start":80,"line_end":80,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":619}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":62211,"byte_end":62216,"line_start":31,"line_end":31,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":675},{"krate":0,"index":677},{"krate":0,"index":679},{"krate":0,"index":681},{"krate":0,"index":683},{"krate":0,"index":685},{"krate":0,"index":687},{"krate":0,"index":689},{"krate":0,"index":691},{"krate":0,"index":693},{"krate":0,"index":695},{"krate":0,"index":697},{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":69184,"byte_end":69203,"line_start":261,"line_end":261,"column_start":9,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":703}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":69302,"byte_end":69321,"line_start":267,"line_end":267,"column_start":19,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":706}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":69458,"byte_end":69477,"line_start":274,"line_end":274,"column_start":36,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1798}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\router.rs","byte_start":71138,"byte_end":71144,"line_start":24,"line_end":24,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":748}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":75289,"byte_end":75295,"line_start":43,"line_end":43,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":810}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":75791,"byte_end":75797,"line_start":64,"line_end":64,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":75872,"byte_end":75878,"line_start":70,"line_end":70,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":818},{"krate":0,"index":820},{"krate":0,"index":824},{"krate":0,"index":828},{"krate":0,"index":833}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":84991,"byte_end":84997,"line_start":322,"line_end":322,"column_start":56,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":85160,"byte_end":85166,"line_start":328,"line_end":328,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":839}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":85507,"byte_end":85513,"line_start":340,"line_end":340,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1805}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":86340,"byte_end":86346,"line_start":368,"line_end":368,"column_start":80,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":1811}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":92402,"byte_end":92420,"line_start":40,"line_end":40,"column_start":44,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":885}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":94178,"byte_end":94196,"line_start":89,"line_end":89,"column_start":33,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1823},{"krate":0,"index":1827},{"krate":0,"index":1831}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":95021,"byte_end":95039,"line_start":122,"line_end":122,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":889}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":95182,"byte_end":95200,"line_start":128,"line_end":128,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":96742,"byte_end":96758,"line_start":42,"line_end":42,"column_start":13,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":929}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":98579,"byte_end":98595,"line_start":99,"line_end":99,"column_start":33,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1842},{"krate":0,"index":1846},{"krate":0,"index":1850}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":100226,"byte_end":100242,"line_start":151,"line_end":151,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":933}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":100385,"byte_end":100401,"line_start":157,"line_end":157,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\parsed_listener.rs","byte_start":101636,"byte_end":101650,"line_start":22,"line_end":22,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":975}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\parsed_listener.rs","byte_start":101930,"byte_end":101944,"line_start":32,"line_end":32,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":978}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\parsed_listener.rs","byte_start":102234,"byte_end":102248,"line_start":43,"line_end":43,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1853},{"krate":0,"index":1857},{"krate":0,"index":1861}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\tcp_listener.rs","byte_start":103914,"byte_end":103925,"line_start":27,"line_end":27,"column_start":13,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1033},{"krate":0,"index":1034}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\tcp_listener.rs","byte_start":104981,"byte_end":104992,"line_start":65,"line_end":65,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1864},{"krate":0,"index":1868},{"krate":0,"index":1872}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\tcp_listener.rs","byte_start":106967,"byte_end":106978,"line_start":129,"line_end":129,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1043}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\tcp_listener.rs","byte_start":107448,"byte_end":107459,"line_start":146,"line_end":146,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener_impls.rs","byte_start":111295,"byte_end":111298,"line_start":8,"line_end":8,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1087},{"krate":0,"index":1088}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener_impls.rs","byte_start":112645,"byte_end":112651,"line_start":54,"line_end":54,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1092},{"krate":0,"index":1093}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener_impls.rs","byte_start":114373,"byte_end":114384,"line_start":118,"line_end":118,"column_start":51,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1104},{"krate":0,"index":1105}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener_impls.rs","byte_start":114630,"byte_end":114641,"line_start":128,"line_end":128,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1108},{"krate":0,"index":1109}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener_impls.rs","byte_start":116268,"byte_end":116279,"line_start":191,"line_end":191,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1124},{"krate":0,"index":1125}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener_impls.rs","byte_start":116706,"byte_end":116724,"line_start":212,"line_end":212,"column_start":35,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1128},{"krate":0,"index":1129}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener_impls.rs","byte_start":116925,"byte_end":116939,"line_start":222,"line_end":222,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1132},{"krate":0,"index":1133}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener_impls.rs","byte_start":117140,"byte_end":117156,"line_start":232,"line_end":232,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1136},{"krate":0,"index":1137}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener_impls.rs","byte_start":117367,"byte_end":117377,"line_start":242,"line_end":242,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1140},{"krate":0,"index":1141}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener_impls.rs","byte_start":117619,"byte_end":117622,"line_start":252,"line_end":252,"column_start":38,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1145},{"krate":0,"index":1146}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\mod.rs","byte_start":89236,"byte_end":89239,"line_start":57,"line_end":57,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1885},{"krate":0,"index":1889},{"krate":0,"index":1893}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\mod.rs","byte_start":90206,"byte_end":90216,"line_start":98,"line_end":98,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1181},{"krate":0,"index":1182},{"krate":0,"index":1183},{"krate":0,"index":1184}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\mod.rs","byte_start":90970,"byte_end":90980,"line_start":129,"line_end":129,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1186}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\middleware.rs","byte_start":124125,"byte_end":124138,"line_start":23,"line_end":23,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1231},{"krate":0,"index":1232}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\middleware.rs","byte_start":127078,"byte_end":127091,"line_start":99,"line_end":99,"column_start":66,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":1912}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":128511,"byte_end":128525,"line_start":34,"line_end":34,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1299},{"krate":0,"index":1300},{"krate":0,"index":1301},{"krate":0,"index":1303},{"krate":0,"index":1305},{"krate":0,"index":1307},{"krate":0,"index":1309},{"krate":0,"index":1311},{"krate":0,"index":1312},{"krate":0,"index":1313}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":131868,"byte_end":131882,"line_start":136,"line_end":136,"column_start":66,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":1933}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":133337,"byte_end":133351,"line_start":183,"line_end":183,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1315}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":133697,"byte_end":133703,"line_start":200,"line_end":200,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1317}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":133853,"byte_end":133859,"line_start":209,"line_end":209,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1319}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":133963,"byte_end":133969,"line_start":215,"line_end":215,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1321}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":134160,"byte_end":134166,"line_start":225,"line_end":225,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1323}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\endpoint.rs","byte_start":142792,"byte_end":142803,"line_start":39,"line_end":39,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1973}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\sender.rs","byte_start":143971,"byte_end":143977,"line_start":7,"line_end":7,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1384},{"krate":0,"index":1385}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","byte_start":146330,"byte_end":146336,"line_start":28,"line_end":28,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1993}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","byte_start":147390,"byte_end":147395,"line_start":62,"line_end":62,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2009}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":152766,"byte_end":152783,"line_start":61,"line_end":61,"column_start":47,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1535}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":153409,"byte_end":153426,"line_start":77,"line_end":77,"column_start":42,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2017}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":154957,"byte_end":154974,"line_start":124,"line_end":124,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1538},{"krate":0,"index":1539},{"krate":0,"index":1541},{"krate":0,"index":1542},{"krate":0,"index":1544},{"krate":0,"index":1545},{"krate":0,"index":1546},{"krate":0,"index":1548},{"krate":0,"index":1552},{"krate":0,"index":1553},{"krate":0,"index":1554}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":2440,"byte_end":2447,"line_start":78,"line_end":78,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":840}},{"kind":"Mod","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":2457,"byte_end":2465,"line_start":79,"line_end":79,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":842}},{"kind":"Mod","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":2475,"byte_end":2478,"line_start":80,"line_end":80,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1187}},{"kind":"Mod","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":2488,"byte_end":2495,"line_start":81,"line_end":81,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1245}},{"kind":"Mod","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":2505,"byte_end":2513,"line_start":82,"line_end":82,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1262}},{"kind":"Mod","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":2523,"byte_end":2526,"line_start":83,"line_end":83,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1332}},{"kind":"Mod","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":2536,"byte_end":2541,"line_start":84,"line_end":84,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1443}},{"kind":"Mod","span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\lib.rs","byte_start":2581,"byte_end":2589,"line_start":87,"line_end":87,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1463}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\cookies\\middleware.rs","byte_start":5453,"byte_end":5470,"line_start":30,"line_end":30,"column_start":6,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1620},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\cookies\\middleware.rs","byte_start":5663,"byte_end":5680,"line_start":38,"line_end":38,"column_start":66,"column_end":83},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1620},"to":{"krate":0,"index":1691}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\cookies\\middleware.rs","byte_start":7231,"byte_end":7238,"line_start":85,"line_end":85,"column_start":6,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1643},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\cookies\\middleware.rs","byte_start":7857,"byte_end":7867,"line_start":114,"line_end":114,"column_start":6,"column_end":16},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1635},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","byte_start":10422,"byte_end":10426,"line_start":48,"line_end":48,"column_start":59,"column_end":63},"kind":"SuperTrait","from":{"krate":2,"index":3024},"to":{"krate":0,"index":1652}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","byte_start":10429,"byte_end":10433,"line_start":48,"line_end":48,"column_start":66,"column_end":70},"kind":"SuperTrait","from":{"krate":2,"index":3036},"to":{"krate":0,"index":1652}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","byte_start":10685,"byte_end":10686,"line_start":56,"line_end":56,"column_start":46,"column_end":47},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1659},"to":{"krate":0,"index":1652}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","byte_start":11194,"byte_end":11212,"line_start":75,"line_end":75,"column_start":33,"column_end":51},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":87},"to":{"krate":2,"index":2645}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","byte_start":11418,"byte_end":11436,"line_start":84,"line_end":84,"column_start":36,"column_end":54},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":87},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","byte_start":11673,"byte_end":11691,"line_start":94,"line_end":94,"column_start":16,"column_end":34},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":87},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","byte_start":12210,"byte_end":12228,"line_start":115,"line_end":115,"column_start":36,"column_end":54},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":87},"to":{"krate":0,"index":1652}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\endpoint.rs","byte_start":12619,"byte_end":12622,"line_start":130,"line_end":130,"column_start":64,"column_end":67},"kind":{"Impl":{"id":9}},"from":{"krate":5,"index":315},"to":{"krate":0,"index":1652}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\fs\\serve_dir.rs","byte_start":13279,"byte_end":13287,"line_start":14,"line_end":14,"column_start":6,"column_end":14},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":145},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\fs\\serve_dir.rs","byte_start":13495,"byte_end":13503,"line_start":22,"line_end":22,"column_start":33,"column_end":41},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":145},"to":{"krate":0,"index":1652}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\fs\\serve_file.rs","byte_start":16700,"byte_end":16709,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\fs\\serve_file.rs","byte_start":17048,"byte_end":17057,"line_start":24,"line_end":24,"column_start":64,"column_end":73},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":185},"to":{"krate":0,"index":1652}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\middleware.rs","byte_start":19280,"byte_end":19284,"line_start":13,"line_end":13,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":3024},"to":{"krate":0,"index":1691}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\middleware.rs","byte_start":19287,"byte_end":19291,"line_start":13,"line_end":13,"column_start":37,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":3036},"to":{"krate":0,"index":1691}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\middleware.rs","byte_start":19666,"byte_end":19667,"line_start":24,"line_end":24,"column_start":38,"column_end":39},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1700},"to":{"krate":0,"index":1691}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\middleware.rs","byte_start":20339,"byte_end":20343,"line_start":47,"line_end":47,"column_start":44,"column_end":48},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":219},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\redirect.rs","byte_start":22100,"byte_end":22108,"line_start":46,"line_end":46,"column_start":21,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1707},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\redirect.rs","byte_start":23264,"byte_end":23272,"line_start":89,"line_end":89,"column_start":36,"column_end":44},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1707},"to":{"krate":0,"index":1652}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\redirect.rs","byte_start":23517,"byte_end":23525,"line_start":99,"line_end":99,"column_start":40,"column_end":48},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1707},"to":{"krate":2,"index":2927}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":24984,"byte_end":24991,"line_start":34,"line_end":34,"column_start":13,"column_end":20},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1724},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":40331,"byte_end":40338,"line_start":539,"line_end":539,"column_start":38,"column_end":45},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1724},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":40453,"byte_end":40460,"line_start":545,"line_end":545,"column_start":38,"column_end":45},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1724},"to":{"krate":2,"index":2924}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":40587,"byte_end":40594,"line_start":551,"line_end":551,"column_start":38,"column_end":45},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1724},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":40717,"byte_end":40724,"line_start":557,"line_end":557,"column_start":38,"column_end":45},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1724},"to":{"krate":2,"index":2924}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":40839,"byte_end":40846,"line_start":563,"line_end":563,"column_start":22,"column_end":29},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1724},"to":{"krate":34,"index":39}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":41084,"byte_end":41091,"line_start":573,"line_end":573,"column_start":37,"column_end":44},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1724},"to":{"krate":2,"index":2927}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":41222,"byte_end":41229,"line_start":579,"line_end":579,"column_start":59,"column_end":66},"kind":{"Impl":{"id":26}},"from":{"krate":57,"index":5415},"to":{"krate":2,"index":2927}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":41518,"byte_end":41525,"line_start":587,"line_end":587,"column_start":63,"column_end":70},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1724},"to":{"krate":2,"index":2927}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":41714,"byte_end":41721,"line_start":595,"line_end":595,"column_start":30,"column_end":37},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1724},"to":{"krate":2,"index":7722}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":42534,"byte_end":42541,"line_start":626,"line_end":626,"column_start":35,"column_end":42},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1724},"to":{"krate":2,"index":3327}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\request.rs","byte_start":42882,"byte_end":42889,"line_start":640,"line_end":640,"column_start":29,"column_end":36},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1724},"to":{"krate":2,"index":3327}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":44606,"byte_end":44614,"line_start":25,"line_end":25,"column_start":6,"column_end":14},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1777},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":54782,"byte_end":54790,"line_start":335,"line_end":335,"column_start":32,"column_end":40},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1777},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":54893,"byte_end":54901,"line_start":341,"line_end":341,"column_start":32,"column_end":40},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1777},"to":{"krate":2,"index":2924}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":55015,"byte_end":55023,"line_start":347,"line_end":347,"column_start":31,"column_end":39},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1777},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":55132,"byte_end":55140,"line_start":353,"line_end":353,"column_start":31,"column_end":39},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1777},"to":{"krate":2,"index":2924}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":55257,"byte_end":55265,"line_start":359,"line_end":359,"column_start":31,"column_end":39},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1777},"to":{"krate":2,"index":2927}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":55364,"byte_end":55372,"line_start":365,"line_end":365,"column_start":27,"column_end":35},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1777},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":55539,"byte_end":55547,"line_start":373,"line_end":373,"column_start":34,"column_end":42},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1777},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":55787,"byte_end":55795,"line_start":381,"line_end":381,"column_start":22,"column_end":30},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1777},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":56013,"byte_end":56021,"line_start":391,"line_end":391,"column_start":31,"column_end":39},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1777},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":56204,"byte_end":56212,"line_start":401,"line_end":401,"column_start":27,"column_end":35},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1777},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":56356,"byte_end":56364,"line_start":408,"line_end":408,"column_start":23,"column_end":31},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1777},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":56472,"byte_end":56480,"line_start":414,"line_end":414,"column_start":28,"column_end":36},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1777},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":56598,"byte_end":56606,"line_start":420,"line_end":420,"column_start":23,"column_end":31},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1777},"to":{"krate":2,"index":7722}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":57379,"byte_end":57387,"line_start":451,"line_end":451,"column_start":28,"column_end":36},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1777},"to":{"krate":2,"index":3327}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response.rs","byte_start":57715,"byte_end":57723,"line_start":465,"line_end":465,"column_start":22,"column_end":30},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1777},"to":{"krate":2,"index":3327}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":59452,"byte_end":59467,"line_start":30,"line_end":30,"column_start":6,"column_end":21},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1783},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\response_builder.rs","byte_start":61057,"byte_end":61072,"line_start":80,"line_end":80,"column_start":25,"column_end":40},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1783},"to":{"krate":2,"index":2927}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":62211,"byte_end":62216,"line_start":31,"line_end":31,"column_start":48,"column_end":53},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":656},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":69184,"byte_end":69203,"line_start":261,"line_end":261,"column_start":9,"column_end":28},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1788},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":69302,"byte_end":69321,"line_start":267,"line_end":267,"column_start":19,"column_end":38},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1788},"to":{"krate":2,"index":2645}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\route.rs","byte_start":69458,"byte_end":69477,"line_start":274,"line_end":274,"column_start":36,"column_end":55},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1788},"to":{"krate":0,"index":1652}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\router.rs","byte_start":71138,"byte_end":71144,"line_start":24,"line_end":24,"column_start":44,"column_end":50},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":75289,"byte_end":75295,"line_start":43,"line_end":43,"column_start":6,"column_end":12},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":804},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":75791,"byte_end":75797,"line_start":64,"line_end":64,"column_start":18,"column_end":24},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":804},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":75872,"byte_end":75878,"line_start":70,"line_end":70,"column_start":13,"column_end":19},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":804},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":84991,"byte_end":84997,"line_start":322,"line_end":322,"column_start":56,"column_end":62},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":804},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":85160,"byte_end":85166,"line_start":328,"line_end":328,"column_start":30,"column_end":36},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":804},"to":{"krate":2,"index":2645}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":85507,"byte_end":85513,"line_start":340,"line_end":340,"column_start":25,"column_end":31},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":804},"to":{"krate":0,"index":1652}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\server.rs","byte_start":86340,"byte_end":86346,"line_start":368,"line_end":368,"column_start":80,"column_end":86},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":804},"to":{"krate":134,"index":43}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":92402,"byte_end":92420,"line_start":40,"line_end":40,"column_start":44,"column_end":62},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1815},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":94178,"byte_end":94196,"line_start":89,"line_end":89,"column_start":33,"column_end":51},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1815},"to":{"krate":0,"index":1873}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":95021,"byte_end":95039,"line_start":122,"line_end":122,"column_start":23,"column_end":41},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1815},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\concurrent_listener.rs","byte_start":95182,"byte_end":95200,"line_start":128,"line_end":128,"column_start":25,"column_end":43},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1815},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":96742,"byte_end":96758,"line_start":42,"line_end":42,"column_start":13,"column_end":29},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1833},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":98579,"byte_end":98595,"line_start":99,"line_end":99,"column_start":33,"column_end":49},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1833},"to":{"krate":0,"index":1873}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":100226,"byte_end":100242,"line_start":151,"line_end":151,"column_start":23,"column_end":39},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1833},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\failover_listener.rs","byte_start":100385,"byte_end":100401,"line_start":157,"line_end":157,"column_start":25,"column_end":41},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1833},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\parsed_listener.rs","byte_start":101636,"byte_end":101650,"line_start":22,"line_end":22,"column_start":23,"column_end":37},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":968},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\parsed_listener.rs","byte_start":101930,"byte_end":101944,"line_start":32,"line_end":32,"column_start":25,"column_end":39},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":968},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\parsed_listener.rs","byte_start":102234,"byte_end":102248,"line_start":43,"line_end":43,"column_start":33,"column_end":47},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":968},"to":{"krate":0,"index":1873}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\tcp_listener.rs","byte_start":103914,"byte_end":103925,"line_start":27,"line_end":27,"column_start":13,"column_end":24},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1025},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\tcp_listener.rs","byte_start":104981,"byte_end":104992,"line_start":65,"line_end":65,"column_start":33,"column_end":44},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1025},"to":{"krate":0,"index":1873}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\tcp_listener.rs","byte_start":106967,"byte_end":106978,"line_start":129,"line_end":129,"column_start":28,"column_end":39},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1025},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\tcp_listener.rs","byte_start":107448,"byte_end":107459,"line_start":146,"line_end":146,"column_start":25,"column_end":36},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1025},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener_impls.rs","byte_start":111295,"byte_end":111298,"line_start":8,"line_end":8,"column_start":35,"column_end":38},"kind":{"Impl":{"id":76}},"from":{"krate":93,"index":1052},"to":{"krate":0,"index":1055}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener_impls.rs","byte_start":112645,"byte_end":112651,"line_start":54,"line_end":54,"column_start":35,"column_end":41},"kind":{"Impl":{"id":77}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":1055}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener_impls.rs","byte_start":114373,"byte_end":114384,"line_start":118,"line_end":118,"column_start":51,"column_end":62},"kind":{"Impl":{"id":78}},"from":{"krate":15,"index":8186},"to":{"krate":0,"index":1055}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener_impls.rs","byte_start":114630,"byte_end":114641,"line_start":128,"line_end":128,"column_start":45,"column_end":56},"kind":{"Impl":{"id":79}},"from":{"krate":1,"index":5379},"to":{"krate":0,"index":1055}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener_impls.rs","byte_start":116268,"byte_end":116279,"line_start":191,"line_end":191,"column_start":35,"column_end":46},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1025},"to":{"krate":0,"index":1055}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener_impls.rs","byte_start":116706,"byte_end":116724,"line_start":212,"line_end":212,"column_start":35,"column_end":53},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1815},"to":{"krate":0,"index":1055}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener_impls.rs","byte_start":116925,"byte_end":116939,"line_start":222,"line_end":222,"column_start":35,"column_end":49},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":968},"to":{"krate":0,"index":1055}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener_impls.rs","byte_start":117140,"byte_end":117156,"line_start":232,"line_end":232,"column_start":35,"column_end":51},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1833},"to":{"krate":0,"index":1055}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener_impls.rs","byte_start":117367,"byte_end":117377,"line_start":242,"line_end":242,"column_start":45,"column_end":55},"kind":{"Impl":{"id":84}},"from":{"krate":1,"index":10427},"to":{"krate":0,"index":1055}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\to_listener_impls.rs","byte_start":117619,"byte_end":117622,"line_start":252,"line_end":252,"column_start":38,"column_end":41},"kind":{"Impl":{"id":85}},"from":{"krate":5,"index":7089},"to":{"krate":0,"index":1055}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\mod.rs","byte_start":88501,"byte_end":88506,"line_start":38,"line_end":38,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":9602},"to":{"krate":0,"index":1873}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\mod.rs","byte_start":88509,"byte_end":88516,"line_start":38,"line_end":38,"column_start":36,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":9609},"to":{"krate":0,"index":1873}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\mod.rs","byte_start":88519,"byte_end":88523,"line_start":38,"line_end":38,"column_start":46,"column_end":50},"kind":"SuperTrait","from":{"krate":2,"index":3024},"to":{"krate":0,"index":1873}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\mod.rs","byte_start":88526,"byte_end":88530,"line_start":38,"line_end":38,"column_start":53,"column_end":57},"kind":"SuperTrait","from":{"krate":2,"index":3036},"to":{"krate":0,"index":1873}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\mod.rs","byte_start":89236,"byte_end":89239,"line_start":57,"line_end":57,"column_start":36,"column_end":39},"kind":{"Impl":{"id":86}},"from":{"krate":5,"index":315},"to":{"krate":0,"index":1873}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\mod.rs","byte_start":90206,"byte_end":90216,"line_start":98,"line_end":98,"column_start":6,"column_end":16},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1894},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\listener\\mod.rs","byte_start":90970,"byte_end":90980,"line_start":129,"line_end":129,"column_start":18,"column_end":28},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1894},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\middleware.rs","byte_start":124125,"byte_end":124138,"line_start":23,"line_end":23,"column_start":6,"column_end":19},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1902},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\log\\middleware.rs","byte_start":127078,"byte_end":127091,"line_start":99,"line_end":99,"column_start":66,"column_end":79},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1902},"to":{"krate":0,"index":1691}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":128511,"byte_end":128525,"line_start":34,"line_end":34,"column_start":6,"column_end":20},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1917},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":131868,"byte_end":131882,"line_start":136,"line_end":136,"column_start":66,"column_end":80},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1917},"to":{"krate":0,"index":1691}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":133337,"byte_end":133351,"line_start":183,"line_end":183,"column_start":18,"column_end":32},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1917},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":133697,"byte_end":133703,"line_start":200,"line_end":200,"column_start":23,"column_end":29},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1938},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":133853,"byte_end":133859,"line_start":209,"line_end":209,"column_start":21,"column_end":27},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1938},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":133963,"byte_end":133969,"line_start":215,"line_end":215,"column_start":28,"column_end":34},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1938},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\security\\cors.rs","byte_start":134160,"byte_end":134166,"line_start":225,"line_end":225,"column_start":26,"column_end":32},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1938},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\endpoint.rs","byte_start":142792,"byte_end":142803,"line_start":39,"line_end":39,"column_start":41,"column_end":52},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1958},"to":{"krate":0,"index":1652}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sse\\sender.rs","byte_start":143971,"byte_end":143977,"line_start":7,"line_end":7,"column_start":6,"column_end":12},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1978},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","byte_start":146330,"byte_end":146336,"line_start":28,"line_end":28,"column_start":43,"column_end":49},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1982},"to":{"krate":0,"index":1691}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\utils.rs","byte_start":147390,"byte_end":147395,"line_start":62,"line_end":62,"column_start":43,"column_end":48},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1998},"to":{"krate":0,"index":1691}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":152766,"byte_end":152783,"line_start":61,"line_end":61,"column_start":47,"column_end":64},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1523},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":153409,"byte_end":153426,"line_start":77,"line_end":77,"column_start":42,"column_end":59},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1523},"to":{"krate":0,"index":1691}},{"span":{"file_name":"C:\\Users\\jgu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tide-0.16.0\\src\\sessions\\middleware.rs","byte_start":154957,"byte_end":154974,"line_start":124,"line_end":124,"column_start":27,"column_end":44},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1523},"to":{"krate":4294967295,"index":4294967295}}]}